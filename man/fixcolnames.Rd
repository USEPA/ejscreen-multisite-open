% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fixcolnames.R
\name{fixcolnames}
\alias{fixcolnames}
\title{helper function to rename variables that are colnames of data.frame}
\usage{
fixcolnames(namesnow, oldtype = "original", newtype = "r", mapping_for_names)
}
\arguments{
\item{namesnow}{vector of colnames to be renamed}

\item{oldtype}{"longname" or "shortname", or "csv" or "r" or "api", etc.
or a colname of map_headernames, used if one of those known types was not specified.}

\item{newtype}{"longname" or "shortname", or "csv" or "r" or "api", etc.
or a colname of map_headernames, used if one of those known types was not specified.}

\item{mapping_for_names}{default is a dataset already in the package.}
}
\value{
Vector or new column names same length as input
}
\description{
Changes variable names like colnames to long plain-English headers or short labels for plots
}
\details{
You specify a type like "api" or "longname" or "shortname"
or one of \code{colnames(map_headernames)} like "rname" or "vartype"

Also, you can use this to extract any info from \code{map_headernames} (which
here is called mapping_for_names).

NOTE: if you ask to rename your words to a known type like rname or apiname, and
the namesnow is not found among the oldtype, then it is not renamed, and those are returned as unchanged.
BUT, if you specify as newtype some column that is not a known type of name, like "varcategory"
then it will instead return an empty string for those in namesnow that are not found among the oldtype.
That way if you are really seeking a new name, but it cannot rename, it keeps the old name
while if you are really seeking metadata like what category it is in,
it returns a blank if the old name is not found at all.
}
\examples{
 # see package tests
  fixcolnames(c("RAW_D_INCOME", "S_D_LIFEEXP")) # assumes it was in original format as API outputs
  fixcolnames(c("RAW_D_INCOME", "S_D_LIFEEXP"), newtype = "longname")
  fixcolnames(c("resp","rsei"),  oldtype = "r", newtype = "longname")
  fixcolnames(c("resp","rsei"),  oldtype = "r", newtype = "api")
  fixcolnames(c("resp","pctlowinc"), oldtype = "r", newtype = "varlist")
  
  # the columns "newsort" and "reportsort" provide useful sort orders
  x <- map_headernames$rname[map_headernames$varlist == "names_d"] # EJAM package has names_d
  print("original order"); print(x) 
  x <-  sample(x, length(x), replace = FALSE)   
  print("out of order"); print(x)
  print("fixed order")
  x[ order(fixcolnames(x, oldtype = "r", newtype = "newsort")) ]

}
\seealso{
\code{\link[=varinfo]{varinfo()}}
}
