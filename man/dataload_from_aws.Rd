% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dataload_from_aws.R
\name{dataload_from_aws}
\alias{dataload_from_aws}
\title{utility to load datasets from AWS DMAP Data Commons, into memory}
\usage{
dataload_from_aws(
  varnames = c("bgid2fips", "blockid2fips", "blockpoints", "blockwts", "quaddata"),
  ext = c(".arrow", ".rda")[2],
  fun = c("arrow::read_ipc_file", "load")[2],
  envir = globalenv(),
  mybucket = "dmap-data-commons-oa",
  mybucketfolder = "EJAM",
  justchecking = FALSE,
  check_server_even_if_justchecking = TRUE,
  testing = FALSE
)
}
\arguments{
\item{varnames}{character vector of the quoted names of the data objects like blockwts or quaddata}

\item{envir}{default is parent.frame()}

\item{mybucket}{where in AWS, like}

\item{mybucketfolder}{where in AWS, like EJAM}

\item{justchecking}{set to TRUE to get object size (and confirm file is accessible/exists)}

\item{check_server_even_if_justchecking}{set this to TRUE to stop checking server to see if files are there
when justchecking = TRUE. But server is always checked if justchecking = FALSE.}

\item{testing}{only for testing}
}
\value{
nothing - just loads data into environment (unless justchecking=T)
}
\description{
utility to load datasets from AWS DMAP Data Commons, into memory
}
\details{
See source code for details. Requires credentials?

Use dataload_from_aws(justchecking=TRUE),

or datapack("EJAM") to get info,

or tables(),

or object.size(quaddata)

NOTE: blockid2fips is HUGE in memory, and is used only in
state_from_blocktable() and state_from_blockid(), which are not always needed by the app,
so maybe should not load this unless/until needed?

blockid2fips is roughly 600 MB in RAM because it stores 8 million block FIPS as text.

List 9/2023 was:
\itemize{
\item blockid2fips (20 MB on disk, approx 600 MB RAM !!)
\item quaddata (168 MB on disk, 218 MB RAM)
\item blockpoints (86 MB on disk, 156 MB RAM)
\item blockwts (31 MB on disk, 125 MB RAM)
\item bgid2fips (18 MB RAM)
}
}
\seealso{
\code{\link[=datapack]{datapack()}} \code{\link[=dataload_from_aws]{dataload_from_aws()}} \code{\link[=dataload_from_package]{dataload_from_package()}} \code{\link[=indexblocks]{indexblocks()}} \code{\link[=.onAttach]{.onAttach()}}
}
