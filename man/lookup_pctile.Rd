% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pctile_from_raw_lookup.R
\name{lookup_pctile}
\alias{lookup_pctile}
\title{lookup_pctile (synonym for pctile_from_raw_lookup)}
\usage{
lookup_pctile(...)
}
\value{
By default, returns numeric vector length of myvector.
}
\description{
This is used with a lookup table to
convert a raw indicator vector to percentiles in US or States.
}
\details{
This could be recoded to be more efficient - could use data.table.

The data.frame lookup table must have a field called "PCTILE" that has quantiles/percentiles
and other column(s) with values that fall at those percentiles.
\link{usastats} and \link{statstats} are such lookup tables.
This function accepts lookup table (or uses one called us if that is in memory), and
finds the number in the PCTILE column that corresponds to where a specified value
(in myvector) appears in the column called varname.in.lookup.table.
The function just looks for where the specified value fits between values in the lookup table
and returns the approximate percentile as found in the PCTILE column.
If the value is between the cutpoints listed as
percentiles 89 and 90, it returns 89, for example.
If the value is exactly equal to the cutpoint listed as percentile 90,
it returns percentile 90.
If the value is exactly the same as the minimum in the lookup table and multiple percentiles
in that lookup are listed as tied for having the same threshold value defining the percentile
(i.e., a large percent of places have the same score and it is the minimum score),
then the percentile gets reported as 0,
not the percent of places tied for that minimum score. Note this is true whether they are
tied at a value of 0 or are tied at some other minimum value than 0.
If the value is less than the cutpoint listed as percentile 0,
which should be the minimum value in the dataset,
it still returns 0 as the percentile, but with a warning that
the value checked was less than the minimum in the dataset.

It also handles other odd cases, like where a large percent of all raw scores are tied at
the minimum value, in which case it reports 0 as percentile, not that large percent.
}
\examples{
\dontrun{
  # compare ejscreen API output percentiles to those from this function:
  for (vname in c(names_d[c(1,3:6,8:10)] )) {
     print(pctile_from_raw_lookup(testoutput_ejscreenapi_plus_100[,vname] / 100, vname, 
       lookup = usastats) 
       - testoutput_ejscreenapi_plus_100[,paste0("pctile.",vname)] )
  }
  for (vname in c(names_e )) {
     print(pctile_from_raw_lookup(testoutput_ejscreenapi_plus_100[,vname], vname, 
       lookup = usastats)
         - testoutput_ejscreenapi_plus_100[,paste0("pctile.",vname)] )
  }
}
}
