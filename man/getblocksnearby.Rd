% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getblocksnearby.R
\name{getblocksnearby}
\alias{getblocksnearby}
\title{Fast way to find nearby points - finds distance to each Census block centroid nearby}
\usage{
getblocksnearby(
  sitepoints,
  cutoff = 3,
  maxcutoff = 31.07,
  avoidorphans = TRUE,
  quadtree,
  parallel = FALSE,
  ...
)
}
\arguments{
\item{sitepoints}{data.table with columns siteid, lat, lon giving point locations of sites or facilities around which are circular buffers}

\item{cutoff}{miles radius, defining circular buffer around site point}

\item{maxcutoff}{miles distance (max distance to check if not even 1 block point is within cutoff)}

\item{avoidorphans}{logical Whether to avoid case where no block points are within cutoff,
so if TRUE, it keeps looking past cutoff to find nearest one within maxcutoff.}

\item{quadtree}{(a pointer to the large quadtree object)
created from the SearchTree package example:
SearchTrees::createTree( quaddata, treeType = "quad", dataType = "point")
Takes about 2-5 seconds to create this each time it is needed.
It is automatically created when the package is loaded via the \code{\link[=.onLoad]{.onLoad()}} function}

\item{...}{passed to \code{\link[=getblocksnearbyviaQuadTree]{getblocksnearbyviaQuadTree()}} or other such functions}
}
\description{
Given a set of points and a specified radius (cutoff),
this function quickly finds all the US Census blocks near each point.
For each point, it uses the specified cutoff distance and finds the distance to
every block within the circle defined by the radius (cutoff).
Each block is defined by its Census-provided internal point, by latitude and longitude.

Each point can be the location of a regulated facility or other type of site, and
the blocks are a high-resolution source of information about where
residents live.

Finding which blocks have their internal points in a circle provides
a way to quickly estimate what fraction of a block group is
inside the circular buffer more accurately and more quickly than
areal apportionment of block groups would provide.
}
\details{
See \code{\link[=ejamit]{ejamit()}} for examples.

getblocksnearby() is a wrapper redirecting to the right version, like \code{\link[=getblocksnearbyviaQuadTree]{getblocksnearbyviaQuadTree()}}
Census block "internal points" (defined by Census Bureau) are actually what it looks for,
and they are like centroids.
The blocks are pre-indexed for the whole USA, via the data object quadtree aka localtree
}
\seealso{
\code{\link[=ejamit]{ejamit()}}  \code{\link[=getblocksnearbyviaQuadTree]{getblocksnearbyviaQuadTree()}} \code{\link[=getblocksnearbyviaQuadTree_Clustered]{getblocksnearbyviaQuadTree_Clustered()}} \code{\link[=getblocksnearbyviaQuadTree2]{getblocksnearbyviaQuadTree2()}}
}
