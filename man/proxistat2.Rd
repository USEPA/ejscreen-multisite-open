% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/proxistat2-DRAFT.R
\name{proxistat2}
\alias{proxistat2}
\title{Calculate a proximity score for every blockgroup - WORK IN PROGRESS
Indicator of proximity of each blockgroups to some set of facilities or sites.}
\usage{
proxistat2(pts, radius = 8.04672, quadtree)
}
\arguments{
\item{pts}{data.table of lat lon}

\item{radius}{distance max, in miles, default is 5km (8.04672 miles)
which is the EJScreen max search range for proximity scores}

\item{quadtree}{must be called localtree, an index of block locations,
built during use of EJAM package. see \link{quaddata}}
}
\value{
data.table with proximityscore, bgfips, lat, lon, etc.
}
\description{
Calculate a proximity score for every blockgroup - WORK IN PROGRESS
Indicator of proximity of each blockgroups to some set of facilities or sites.
}
\details{
Proximity score is sum of (1/d) where each d is distance of a given site in km,
summed over all sites within 5km, as in EJScreen.

doaggregate() has a bit of code in it to do this same thing that this function does.

*** Still need area of each block to fix this function -
the block area should get put into one of these:
\link{blockpoints} or \link{blockwts}
}
\examples{
 # pts <- testpoints_50
 # x <- proxistat2(pts = pts[1:1000,], quadtree = localtree) 
 #
 # summary(x$proximityscore)
 # # analyze.stuff   pctiles(x$proximityscore)
 # plot(x$lon, x$lat)
 # tops = x$proximityscore > 500 & !is.infinite(x$proximityscore) & !is.na(x$proximityscore)
 # points(x$lon[tops], x$lat[tops], col="red")
 
}
