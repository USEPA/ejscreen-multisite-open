% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/map_blockgroups.R
\name{map_blockgroups}
\alias{map_blockgroups}
\title{map_blockgroups - helper function using API to get boundaries of blockgroups}
\usage{
map_blockgroups(
  bgfips = "010890029222",
  outFields = "",
  myservice =
    c("https://services.arcgis.com/P3ePLMYs2RVChkJx/ArcGIS/rest/services/USA_Boundaries_2022/FeatureServer/5/query",
    "https://services.arcgis.com/P3ePLMYs2RVChkJx/ArcGIS/rest/services/USA_Block_Groups/FeatureServer/0/query",
    "https://services.arcgis.com/cJ9YHowT8TU7DUyn/ArcGIS/rest/services/EJScreen_2_21_US_Percentiles_Block_Groups/FeatureServer/0/query")[1]
)
}
\arguments{
\item{bgfips}{max of 50 for now. one or more block group FIPS codes as 12-character strings in a vector}

\item{outFields}{can be "*" for all, or can be
just some variables like SQMI, POPULATION_2020, etc., or none}

\item{myservice}{URL of feature service to get shapes from.

"https://services.arcgis.com/cJ9YHowT8TU7DUyn/ArcGIS/rest/services/
EJScreen_2_21_US_Percentiles_Block_Groups/FeatureServer/0/query"

for example provides EJScreen indicator values, NPL_CNT, TSDF_CNT, EXCEED_COUNT_90, etc.
@seealso \code{\link[=map_blockgroups_over_blocks]{map_blockgroups_over_blocks()}}}
}
\value{
spatial object via sf::read_sf()
}
\description{
map_blockgroups - helper function using API to get boundaries of blockgroups
}
\details{
This is useful mostly
}
\examples{
dontrun{
  #bgs <- fipsbg_from_anyfips(fips_counties_from_state_abbrev("NY")[2])
  # 10 blockgroups in NY with highest score for this indicator 
  bgs <-  blockgroupstats[!is.na(Demog.Index.Supp) &
    ST == "NY", ][order(Demog.Index.Supp), tail(bgfips, 10)]
  # top 10 in 1 county in LA
  bgs <-  blockgroupstats[!is.na(Demog.Index.Supp) &
    countyname == "East Baton Rouge Parish", ][order(Demog.Index.Supp), tail(bgfips, 10)]
  DT::datatable(blockgroupstats[bgfips \%in\%  bgs, ])
  x <- map_blockgroups(bgs)
  leaflet(x) \%>\% addPolygons(color = "red") \%>\% addTiles()
   }
}
