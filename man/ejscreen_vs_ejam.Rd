% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ejscreen_vs_ejam_.R
\name{ejscreen_vs_ejam}
\alias{ejscreen_vs_ejam}
\title{EJAM/EJSCREEN comparisons - compare EJScreen API vs EJAM stats near site(s)}
\usage{
ejscreen_vs_ejam(
  latlon,
  radius = 3,
  nadrop = FALSE,
  save_when_report = TRUE,
  report_every_n = 250,
  calculate_ratios = FALSE,
  include_ejindexes = TRUE,
  x100fix = TRUE,
  x100varnames = c(names_d, names_d_avg, names_d_state_avg, names_d_subgroups,
    names_d_subgroups_avg, names_d_subgroups_state_avg, "pctdisability",
    "p_own_occupied", "pctunder18", "pctover17", "pctmale", "pctfemale"),
  ...
)
}
\arguments{
\item{latlon}{data.table or data.frame with colnames lat and lon,
and one row per site}

\item{radius}{in miles, used in ejamit() and ejscreenapi_plus()}

\item{save_when_report}{see ejscreenapi_plus()}

\item{report_every_n}{see ejscreenapi_plus()}

\item{calculate_ratios}{passed to ejscreenapi_plus() and \code{\link[=ejamit]{ejamit()}}}

\item{x100fix}{whether to multiply x100 the names_d and names_d_subgroups
indicator scores to convert fractions 0 to 1 into percentages of 0 to 100,
prior to rounding and reporting EJAM results here.}

\item{x100varnames}{optional, if x100fix=T, a vector of colnames of x$EJAM to convert from
being scaled as 0 to 1 into rescaled values of 0 to 100, because some
outputs of EJSCREEN were reported as percentages 0 to 100 but as 0 to 1 in EJAM.}

\item{...}{passed to ejamit() as any additional parameters,
like include_ejindexes = FALSE}
}
\value{
a list of data frames, with names
EJSCREEN, EJAM, EJSCREEN_shown, EJAM_shown, same_shown,
ratio, diff, absdiff, pctdiff, abspctdiff

diff is EJAM - EJSCREEN

ratio is EJAM / EJSCREEN

pctdiff is ratio - 1

abs is absolute value

For each data.frame, colnames are indicators like pop, blockcount_near_site, etc.
and rows represent sites analyzed.
}
\description{
EJAM/EJSCREEN comparisons - compare EJScreen API vs EJAM stats near site(s)
}
\examples{
 \dontrun{
   pts <- testpoints_100[1:5, ]
   
  # This step can take a long time, almost 1 minute / 20 points, as it uses the EJScreen API:
  #z <- ejscreen_vs_ejam(
    testpoints_100[27, ], radius = 3, nadrop = T, include_ejindexes = TRUE)
  z <- ejscreen_vs_ejam(pts, radius = 3, include_ejindexes = TRUE)
  
  # see one site
  ejscreen_vs_ejam_see1(z, mysite = 1)
  
   # Reported key indicators - which ones do or don't match
   # when comparing EJSCREEN and EJAM results?
   keyreportnames <- c('pop', names_these, names_pctile, names_state_pctile)
   z$EJAM[z$EJAM$rname \%in\% keyreportnames &  z$same_shown, ]
   z[z$rname \%in\% keyreportnames & !z$same_shown & !is.na(z$EJSCREEN), ]
  
   # Reported (rounded) numbers match:
   z[z$same_shown , -1]
   # Reports disagree: 
   #  (and not just because of percentages being of 100 vs of 1.00)
   z[!z$same_shown & !is.na(z$EJSCREEN) & z$ratio != 0.01, -1] 
   # Reports disagree if percentages reported as 0-100 vs fractions 0-1.00
   z[z$ratio == 0.01 & !is.na(z$ratio), -1]
   
   
   
  }
}
\seealso{
\code{\link[=ejscreen_vs_ejam_alreadyrun]{ejscreen_vs_ejam_alreadyrun()}}
}
