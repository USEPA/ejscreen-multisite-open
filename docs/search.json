[{"path":"/articles/0_webapp.html","id":"using-the-ejam-web-app","dir":"Articles","previous_headings":"","what":"Using the EJAM web app","title":"0. Using EJAM as a Web App","text":"February 2024, EPA staff can try live beta test version EJAM. must inside EPA’s network (e.g. using VPN) access EJAM web app, currently. EJAM still active development, work progress, everything bug-free yet changes made, seeking feedback input bugs, usability issues, performance, clarity, ideas enhancements possible new features functionality. first complete version EJAM beta tested staging server, accessible EPA staff members using VPN/-LAN signing . EJAM beta test Information use web app may provided elsewhere point, app meant relatively easy analyst use without training user guide.","code":""},{"path":"/articles/0_webapp.html","id":"running-the-ejam-web-app-in-rrstudio-on-your-own-computer-for-analysts-or-developers","dir":"Articles","previous_headings":"","what":"Running the EJAM web app in R/RStudio on your own computer (for analysts or developers)","title":"0. Using EJAM as a Web App","text":"use R/RStudio, can run web app computer. first need install EJAM R package explained article/vignette installing EJAM. EJAM installed (access datasets needed), can launch local web app RStudio follows: Note different running simple shiny app also package via golem. use EJAM package function run_app() shiny::runApp(). Note web app (e.g., launched locally) handles loading datasets indexing blocks, assuming access server stores datasets pins board, download datasets manually indexing manually launching EJAM app locally. just need packages installed EJAM relies (see ).","code":"library(EJAM) run_app()"},{"path":"/articles/0_webapp.html","id":"using-ejam-tools-in-rrstudio-outside-the-web-app","dir":"Articles","previous_headings":"","what":"Using EJAM tools in R/RStudio, outside the web app","title":"0. Using EJAM as a Web App","text":"wanting go beyond web app, use EJAM functions directly R/RStudio, see Quick Start Guide.","code":""},{"path":"/articles/1_installing.html","id":"ejam-setup-for-r-users","dir":"Articles","previous_headings":"","what":"EJAM Setup for R users","title":"1. Installing the EJAM package","text":"EJAM web app built shiny R, also R package, using golem framework. development version app can installed github USEPA github repository. can installed locally R package, data functions can used outside shiny app interface, want reuse data code, want customized analysis explore data R.","code":""},{"path":[]},{"path":"/articles/1_installing.html","id":"to-install-directly-from-github-starting-from-rstudio","dir":"Articles","previous_headings":"EJAM Setup for R users > Install the EJAM R package (and related packages)","what":"to install directly from GitHub, starting from RStudio","title":"1. Installing the EJAM package","text":"know clone build source RStudio, feel free skip ahead topic. just want install EJAM work source code, can try approach: Try install packages like (download build source, automatically): Note install EJAM way, need access GitHub repositories EPA’s enterprise github site, USEPA GitHub. Unless/ repositories related EJAM public, need signed EPA’s network, internal-repositories, may need use VPN. installing way work, might need following: create GitHub personal access token ‘repo scope’ Go https://github.com/settings/tokens select Tokens (classic) left-hand side. click ‘Generate New Token’ -> Generate new token (classic). Give name select boxes repo scope. Scroll click ‘Generate Token’. set GitHub credentials Rstudio one-time login: console, run credentials::set_github_pat(). Paste PAT login popup ‘Token’. store credentials long-term: run usethis::edit_r_environ() open .Renviron file add line PAT format: GITHUB_PAT = 'abc' can specify extra argument scope = 'project' want PAT work particular Rstudio project. Install packages using devtools::install_github()","code":"if (!require(devtools)) {install.packages(\"devtools\")} devtools::install_github('USEPA/EJAMejscreenapi') devtools::install_github('USEPA/EJAMbatch.summarizer') devtools::install_github('USEPA/EJAM') if (!require(devtools)) {install.packages(\"devtools\")} devtools::install_github('USEPA/EJAMejscreenapi') devtools::install_github('USEPA/EJAMbatch.summarizer') devtools::install_github('USEPA/EJAM')"},{"path":"/articles/1_installing.html","id":"if-you-need-the-full-source-code-and-want-to-buildinstall-in-rstudio-on-your-own","dir":"Articles","previous_headings":"EJAM Setup for R users > Install the EJAM R package (and related packages)","what":"if you need the full source code and want to build/install in RStudio on your own","title":"1. Installing the EJAM package","text":"3 EJAM-specific packages 1/2024 EJAM needs, EPA-internal repositories: Essential packages available USEPA github (CRAN) : EJAM EJAMejscreenapi EJAMbatch.summarizer Options getting source package: One way get source package RStudio can click New Project, Version Control, Git, enter repository URL. download full source package, additional files related development need just want use package. Yet another way get full source package use browser go repository page, USEPA github click green “Code” button, download unzip zip file contains package. third way Clone Fork package via GitHub Desktop GitHub site. point, .zip .tar version bundled package provided well. Regardless got full source code, need build/install package source computer using RStudio menus using devtools package, example.","code":""},{"path":"/articles/1_installing.html","id":"cran-packages-needed","dir":"Articles","previous_headings":"EJAM Setup for R users > Install the EJAM R package (and related packages) > if you need the full source code and want to build/install in RStudio on your own","what":"CRAN packages needed","title":"1. Installing the EJAM package","text":"EJAM needs number packages installed available CRAN. Trying load attach EJAM require(EJAM) library(EJAM) alert packages need install don’t already . also see list CRAN packages needed looking DESCRIPTION file R package source code root folder (can found code repository).","code":""},{"path":"/articles/1_installing.html","id":"initialize-loadattach-package","dir":"Articles","previous_headings":"EJAM Setup for R users","what":"Initialize: load/attach package","title":"1. Installing the EJAM package","text":"right R packages installed, use EJAM console can start loading attaching package, using library require. automatically download data build index. need . Just case need details works, following describes code used package get data build index.","code":"require(EJAM) # or library(EJAM)"},{"path":"/articles/1_installing.html","id":"details-on-the-automatic-data-downloads","dir":"Articles","previous_headings":"EJAM Setup for R users > Initialize: load/attach package","what":"Details on the automatic data downloads","title":"1. Installing the EJAM package","text":"work RStudio console, EJAM needs datasets stored part package. However, already downloaded loaded memory automatically soon use require(EJAM) assuming current version [EJAM:::.Attach()] source code uses asap_aws <- TRUE; asap_index <- TRUE; asap_bg. want sure something missing, can manually: Attaching package actually checks copies memory first (e.g., exists(\"quaddata\", envir = globalenv())), local disk (using EJAM:::dataload_from_local() looking data folder (source installed) package, defined EJAM:::app_sys()), finally tries download still needed, using dataload_from_pins().","code":"dataload_from_pins('all') # It takes some time for the large downloads, while EJAM is still in development."},{"path":"/articles/1_installing.html","id":"details-on-the-indexing-of-blocks","dir":"Articles","previous_headings":"EJAM Setup for R users > Initialize: load/attach package","what":"Details on the indexing of blocks","title":"1. Installing the EJAM package","text":"EJAM also needs build index 8 million US block locations (one internal point block), takes seconds. EJAM automatically attached via require(EJAM) library(EJAM), creating object called localtree based quaddata object obtained mentioned . functions check try build index fly missing. can also (re)build manually:","code":"indexblocks()"},{"path":"/articles/2_quickstart.html","id":"ejam-analysis-in-r---quick-start-guide","dir":"Articles","previous_headings":"","what":"EJAM Analysis in R - Quick Start Guide","title":"2. Quick Start Guide","text":"’s can run EJAM analysis view results right away (EJAM set )","code":""},{"path":"/articles/2_quickstart.html","id":"install-ejam","dir":"Articles","previous_headings":"EJAM Analysis in R - Quick Start Guide","what":"Install EJAM","title":"2. Quick Start Guide","text":"See separate article/ vignette install R package.","code":""},{"path":"/articles/2_quickstart.html","id":"load-ejam-code-and-data","dir":"Articles","previous_headings":"EJAM Analysis in R - Quick Start Guide","what":"Load EJAM (code and data)","title":"2. Quick Start Guide","text":"","code":"library(EJAM)"},{"path":"/articles/2_quickstart.html","id":"analyze-a-list-of-places","dir":"Articles","previous_headings":"EJAM Analysis in R - Quick Start Guide","what":"Analyze a List of Places","title":"2. Quick Start Guide","text":"already spreadsheet columns called lat lon, can just EJAM prompt navigate select file set radius (RStudio): want try test data first:","code":"out <- ejamit()"},{"path":"/articles/2_quickstart.html","id":"map-of-results","dir":"Articles","previous_headings":"EJAM Analysis in R - Quick Start Guide","what":"Map of Results","title":"2. Quick Start Guide","text":"","code":"# out <- ejamit(testpoints_100, radius = 3,  #   silentinteractive = F, include_ejindexes = T) out <- testoutput_ejamit_100pts_1miles mapfastej(out$results_bysite) # Click a point on the map to see a popup with details about people near that point."},{"path":"/articles/2_quickstart.html","id":"report-interactive-html-file","dir":"Articles","previous_headings":"EJAM Analysis in R - Quick Start Guide","what":"Report (interactive html file)/","title":"2. Quick Start Guide","text":"","code":"out <- testoutput_ejamit_100pts_1miles ejam2report(out)"},{"path":"/articles/2_quickstart.html","id":"barplot","dir":"Articles","previous_headings":"EJAM Analysis in R - Quick Start Guide","what":"Barplot","title":"2. Quick Start Guide","text":"","code":"## Plot of demographics is default ## Updated version of this function will be able to handle output of ejamit() as input: # out <- testoutput_ejamit_100pts_1miles # plot_barplot_ratios(out) #plot_barplot_ratios(out, reference = \"State\") # see examples at ?plot_barplot_ratios"},{"path":"/articles/2_quickstart.html","id":"spreadsheet","dir":"Articles","previous_headings":"EJAM Analysis in R - Quick Start Guide","what":"Spreadsheet","title":"2. Quick Start Guide","text":"","code":"ejam2excel(out, launchexcel = T, save_now = F)"},{"path":[]},{"path":[]},{"path":[]},{"path":"/articles/2_quickstart.html","id":"use-one-point","dir":"Articles","previous_headings":"More Examples of Using these Functions in EJAM > Select Places to Analyze","what":"Use one point","title":"2. Quick Start Guide","text":"","code":"pts <- data.frame(lon = -92.380556, lat = 31.316944)"},{"path":"/articles/2_quickstart.html","id":"use-a-few-points","dir":"Articles","previous_headings":"More Examples of Using these Functions in EJAM > Select Places to Analyze","what":"Use a few points","title":"2. Quick Start Guide","text":"","code":"sitepoints2  <- data.frame(   lon = c(-92.1,      -91.8),    lat = c(34.8799123, 30.2906971),    sitenumber = 1:2 )"},{"path":"/articles/2_quickstart.html","id":"use-test-points-in-examples-that-comes-with-the-package","dir":"Articles","previous_headings":"More Examples of Using these Functions in EJAM > Select Places to Analyze","what":"Use test points in examples that comes with the package","title":"2. Quick Start Guide","text":"EJAM comes examples points can use try things :","code":"testpoints_10 #>         lat        lon sitenumber        sitename #> 1  39.74649  -74.20121          1  Example Site 1 #> 2  39.78107 -104.91286          2  Example Site 2 #> 3  35.47007  -82.87474          3  Example Site 3 #> 4  46.83040 -100.77309          4  Example Site 4 #> 5  43.81283  -94.07801          5  Example Site 5 #> 6  18.33551  -64.96360          6  Example Site 6 #> 7  31.41418 -103.51455          7  Example Site 7 #> 8  39.74874  -84.16482          8  Example Site 8 #> 9  26.06568  -80.23483          9  Example Site 9 #> 10 36.77649 -114.03794         10 Example Site 10 testpoints_100 |> head(2) # data.table, in this package #>        lat       lon sitenumber       sitename #> 1 40.66478 -74.89137          1 Example Site 1 #> 2 38.39657 -98.70086          2 Example Site 2 sitepoints100 <- data.table::copy(testpoints_100)  # [1:5, ] head(sitepoints100, 3) #>        lat       lon sitenumber       sitename #> 1 40.66478 -74.89137          1 Example Site 1 #> 2 38.39657 -98.70086          2 Example Site 2 #> 3 40.34971 -79.84964          3 Example Site 3"},{"path":"/articles/2_quickstart.html","id":"create-a-random-sample-of-points-representative-of-the-average-facility-average-resident-or-average-area","dir":"Articles","previous_headings":"More Examples of Using these Functions in EJAM > Select Places to Analyze","what":"Create a random sample of points representative of the average facility, average resident, or average area","title":"2. Quick Start Guide","text":"can create set random points function testpoints_n() can weighted represent average resident, average regulated facility, average point map weighted square meters, etc. See details documentation function testpoints_n().","code":"?testpoints_n"},{"path":"/articles/2_quickstart.html","id":"create-random-test-data-points-in-states-of-la-and-tx","dir":"Articles","previous_headings":"More Examples of Using these Functions in EJAM > Select Places to Analyze > Create a random sample of points representative of the average facility, average resident, or average area","what":"Create random test data points in States of LA and TX","title":"2. Quick Start Guide","text":"","code":"# p1k <- testpoints_n(1000) # mapfast(p1k)  mapfast(testpoints_n(300, ST_needed = c('LA','TX'), weighting = 'bg'))  #> Warning in validateCoords(lng, lat, funcName): Data contains 4 rows with either #> missing or invalid lat/lon values and will be ignored # weighting = \"frs\" better represents regulated facilities, # but requires loading the (large) frs dataset"},{"path":"/articles/2_quickstart.html","id":"use-a-table-of-latlon-coordinates-from-a-spreadsheet-xlsx-or-csv-file","dir":"Articles","previous_headings":"More Examples of Using these Functions in EJAM > Select Places to Analyze","what":"Use a table of lat/lon coordinates from a spreadsheet xlsx or csv file","title":"2. Quick Start Guide","text":"first row column names including lat lon, something can interpreted - see latlon_infer()","code":"testjunk <- file.path(tempdir(), 'testjunk.csv') write.csv(data.frame(LONG = c(-92.1, -91.8), Latitude = c(34.8, 30.2), ejam_uniq_id = 1:2), file = testjunk, row.names = FALSE) sitepoints2 <- latlon_from_anything(testjunk) sitepoints2"},{"path":"/articles/2_quickstart.html","id":"interactively-select-your-own-file-of-latlon-coordinates-without-typing-the-file-name","dir":"Articles","previous_headings":"More Examples of Using these Functions in EJAM > Select Places to Analyze","what":"Interactively select your own file of lat,lon coordinates, without typing the file name","title":"2. Quick Start Guide","text":"RStudio, can use EJAM functions interactively select file folders, upload spreadsheet (.xlsx .csv) columns called lat lon first row header row, one row per point.","code":"y <- read_csv_or_xl() names(y) head(y)  # or   # x <- ejamit(radius = 2)  #  2 mile radius, and  # prompts you to select spreadsheet with lat,lon values of points"},{"path":"/articles/2_quickstart.html","id":"map-your-sites-before-analyzing-them","dir":"Articles","previous_headings":"More Examples of Using these Functions in EJAM","what":"Map your sites before analyzing them","title":"2. Quick Start Guide","text":"can see map random blocks single State, example:","code":"mapfast(  testpoints_100)                  # input to EJAM mapfastej(testoutput_ejamit_100pts_1miles) # output, results of EJAM if (exists(\"blockid2fips\")) {   pts <- testpoints_n(1000, weighting = 'blocks', ST_needed = \"LA\")   mapfast(pts, radius = 0.1) }"},{"path":"/articles/2_quickstart.html","id":"pick-a-radius","dir":"Articles","previous_headings":"More Examples of Using these Functions in EJAM","what":"Pick a Radius","title":"2. Quick Start Guide","text":"can specify radius miles. EJAM analyze residents within many miles point (site).","code":"radius <- 3 # radius (in miles).  5 km = 3.1 miles, 10 km = 6.2 miles"},{"path":"/articles/2_quickstart.html","id":"convert-between-miles-and-kilometers","dir":"Articles","previous_headings":"More Examples of Using these Functions in EJAM > Pick a Radius","what":"Convert between miles and kilometers","title":"2. Quick Start Guide","text":"know want analyze 5 kilometers, can turn miles something like","code":"convert_units(5, 'km', 'miles') #> [1] 3.106856"},{"path":"/articles/2_quickstart.html","id":"analyze-your-sites-in-1-step-with-ejamit","dir":"Articles","previous_headings":"More Examples of Using these Functions in EJAM","what":"Analyze your Sites in 1 step with ejamit()","title":"2. Quick Start Guide","text":"","code":"out <- ejamit(testpoints_100, radius = 1) # 1 mile radius around each of 100 test/example points  # help(\"ejamit\")"},{"path":"/articles/2_quickstart.html","id":"map-the-ejam-results","dir":"Articles","previous_headings":"More Examples of Using these Functions in EJAM","what":"Map the EJAM Results","title":"2. Quick Start Guide","text":"Popups map show key stats residents near site.","code":"out <- testoutput_ejamit_100pts_1miles mapfastej(out$results_bysite) # help(\"mapfast\")"},{"path":[]},{"path":"/articles/2_quickstart.html","id":"see-results-as-a-spreadsheet-this-launches-excel","dir":"Articles","previous_headings":"More Examples of Using these Functions in EJAM","what":"See Results as a Spreadsheet (this Launches Excel)","title":"2. Quick Start Guide","text":"","code":"ejam2excel(ejamit(testpoints_10, radius = 1), launchexcel = T, save_now = F) # table_xls_from_ejam()  is another name for  ejam2excel()"},{"path":"/articles/2_quickstart.html","id":"save-results-as-a-spreadsheet-file","dir":"Articles","previous_headings":"More Examples of Using these Functions in EJAM > See Results as a Spreadsheet (this Launches Excel)","what":"Save Results as a Spreadsheet file","title":"2. Quick Start Guide","text":"","code":"ejam2excel(ejamit(testpoints_10, radius = 1), save_now = T)"},{"path":"/articles/2_quickstart.html","id":"documentation-of-functions-and-data","dir":"Articles","previous_headings":"","what":"Documentation of Functions and Data","title":"2. Quick Start Guide","text":"See README links documentation README GitHub","code":""},{"path":"/articles/3_analyzing.html","id":"key-functions-underlying-ejam","dir":"Articles","previous_headings":"","what":"Key Functions underlying EJAM","title":"3. Basics of Using EJAM for Analysis in RStudio","text":"run_app() launch web app locally (run RStudio single computer rather server) ejamit() provides results just one function. Sample input testpoints_10 sample output testoutput_ejamit_10pts_1miles. ejamit() especially relies getblocksnearby() doaggregate(): getblocksnearby() takes set points (e.g., facilities) finds Census blocks near . Sample input testpoints_100, sample output testoutput_getblocksnearby_10pts_1miles doaggregate() takes list blocks near point, joins blockgroup indicators like EJScreen, aggregates buffered point well overall set unique blocks (residents). Sample input testoutput_getblocksnearby_10pts_1miles sample output testoutput_doaggregate_10pts_1miles","code":""},{"path":"/articles/3_analyzing.html","id":"key-groups-of-functions","dir":"Articles","previous_headings":"","what":"Key groups of functions","title":"3. Basics of Using EJAM for Analysis in RStudio","text":"EJAM package reference manual complete list documented functions. several groups functions may useful know : ejam overall functions like ejamit(), ejam2report(), ejam2excel() latlon functions like latlon_from_regid(), latlon_from_naics(), latlon_df_clean(), latlon_is.valid(), etc. frs functions data like frs, frs_from_regid(), frs_from_programid(), frs_from_sitename(), frs_from_sitename() naics functions data like naics_categories(), naics_counts, naicstable, NAICS, naics_from_any(), frs_from_naics(), latlon_from_naics(), naics_url_of_code(), etc. shapefile functions like state_from_ shapes_blockgroups_from_bgfips(), shapefile_from_folder(), shapes_counties_from_countyfips() get_blockpoints_in_shape() fips functions like fipstype(), EJAM::fips_lead_zero(), fips2name(), fips_counties_from_state_abbrev(), getblocksnearby_from_fips(), fips_bg_from_anyfips(), state_from_latlon(), stateinfo, stateinfo2, states_as_sites() getblocks functions like getblocksnearby(), getblocksnearby_from_fips(), get_blockpoints_in_shape(), getblocks_diagnostics() map functions like mapfast(), mapfastej(), mapfastej_counties(), map_blockgroups_over_blocks(), map_shapes_leaflet() map_shapes_mapview(), mapfast_gg(), etc. plot functions like plot_barplot_ratios(), plot_distance_by_pctd(), etc. (work progress) percentile functions like lookup_pctile(), pctile_from_raw_lookup() distance functions plot_distance_by_pctd(), distance_by_group() calculating plotting distance varies group variable-names lists renaming metadata functions names_e, names_d, names_d_subgroups, fixcolnames(), table_rounding_info(), varinfo(), varname2vartype_ejam(), varname2varcategory_ejam(), fixcolnames2related(), namesbyvarlist() ejscreen functions like ejscreenit_for_ejam() use EJScreen API obtain exact EJScreen results directly Also see data(“EJAM”) see ?dataload_from_pins() usastats, statestats","code":""},{"path":"/articles/3_analyzing.html","id":"points-nearby-residents","dir":"Articles","previous_headings":"","what":"POINTS & NEARBY RESIDENTS","title":"3. Basics of Using EJAM for Analysis in RStudio","text":"EJAM offers variety ways specify places analyzed compared. specify list places, EJAM analyze whole (overall), also individually can compare places . Places analyzed compared can following: Points, defining residents within X miles point Polygons (shapefiles), redlining zones, higher risk areas based modeling, etc. Census Units Counties types Census Units defined FIPS code (e.g., Counties one State) Groups available another type analysis, yet implemented. Groups let get statistics group, compare categories places. Whole groups points/ polygons/ census areas treated units analysis. allow define groups points, example, get summary group, residents near facilities one type. enables comparison categories places, analyzing 3 types facilities results aggregated type, comparing redlining zones grouped grade, comparing areas feature (poor air quality, receiving grants, etc.) versus areas without trait, limited one State Region, example. analyze points circular areas around one, can specify points two basic ways: list points defined coordinates EPA ID numbers point EPA Program (e.g., greenhouse gas reporting facilities) Industry type, based NAICS code (e.g., )","code":""},{"path":[]},{"path":"/articles/3_analyzing.html","id":"specify-points-where-you-want-to-center-the-circular-buffers","dir":"Articles","previous_headings":"POINTS & NEARBY RESIDENTS","what":"Specify points (where you want to center the circular buffers)","title":"3. Basics of Using EJAM for Analysis in RStudio","text":"can define locations residents within X miles one specified points, can define points ways. One way upload table coordinates – latitude longitude point, one row per site, columns called lat lon (synonyms work). simplest way RStudio console something like x <- ejamit(radius=1), prompts upload spreadsheet lat lon columns. can also specify set facilities uploading Registry ID numbers table, using identifiers. example, function latlon_from_programid() examples . can define circular buffers around set EPA-regulated facilities ways well, NAICS (SIC) industry names codes, EPA program covering set facilities (e.g., greenhouse gas reporters), Clean Air Act MACT subpart.","code":""},{"path":"/articles/3_analyzing.html","id":"by-industry-naics","dir":"Articles","previous_headings":"POINTS & NEARBY RESIDENTS > Specify points (where you want to center the circular buffers)","what":"by Industry (NAICS)","title":"3. Basics of Using EJAM for Analysis in RStudio","text":"can specify sites NAICS, important note FRS lacks NAICS info many regulated facilities! See many examples working NAICS, section .","code":"naics_from_any(\"paint and coating\", children = T) #> Warning in naics_from_name(query_text, children = children, ignore.case = #> ignore.case, : NAs introduced by coercion #> Warning in naics_from_name(query_text, children = children, ignore.case = #> ignore.case, : mynames should be non-NA character vector of text to look for in #> industry title(s) like \"concrete\" #>      code n2  n3   n4    n5     n6                            name #> 1:  32551 32 325 3255 32551  32551 Paint and Coating Manufacturing #> 2: 325510 32 325 3255 32551 325510 Paint and Coating Manufacturing #> 3: 325510 32 325 3255 32551 325510 Paint and Coating Manufacturing #>                                    num_name #> 1:  32551 - Paint and Coating Manufacturing #> 2: 325510 - Paint and Coating Manufacturing #> 3: 325510 - Paint and Coating Manufacturing # note latlon_from_naics() requires the frs_by_naics dataset, which it tries to load on demand. head(latlon_from_naics(325510)) # has about 1,000 facilities #>         lat       lon  REGISTRY_ID  NAICS #> 1: 42.79640 -70.89044 110000310379 325510 #> 2: 42.07583 -71.40609 110000310574 325510 #> 3: 45.00411 -72.10736 110000314954 325510 #> 4: 40.94260 -74.15338 110000320144 325510 #> 5: 40.88712 -74.60105 110000320670 325510 #> 6: 40.85410 -73.84238 110000322712 325510  ## All sectors with this phrase in their NAICS title # #  x <- ejamit(frs_from_naics(\"paint and coating\"), 1)"},{"path":"/articles/3_analyzing.html","id":"by-facility-using-epa-registry-id","dir":"Articles","previous_headings":"POINTS & NEARBY RESIDENTS > Specify points (where you want to center the circular buffers)","what":"by Facility, using EPA Registry ID","title":"3. Basics of Using EJAM for Analysis in RStudio","text":"","code":"# note frs_from_regid() and latlon_from_regid() require the frs dataset, which they try to load on demand.  frs_from_regid(c(110071293460, 110000333826))  ## interactively upload file with table of REGISTRY_ID values x <- latlon_from_regid(read_csv_or_xl()$REGISTRY_ID)  ## and run through EJAM y <- ejamit(latlon_from_regid(read_csv_or_xl()$REGISTRY_ID), radius = 1) #  # still debugging Island Areas validation here!"},{"path":"/articles/3_analyzing.html","id":"by-facility-using-epa-program-system-id","dir":"Articles","previous_headings":"POINTS & NEARBY RESIDENTS > Specify points (where you want to center the circular buffers)","what":"by Facility, using EPA Program System ID","title":"3. Basics of Using EJAM for Analysis in RStudio","text":"","code":"# note latlon_from_programid() requires the frs_by_programid dataset, which it tries to load on demand.  latlon_from_programid(c(\"XJW000012435\", \"00768SRTRSROAD1\")) #>         lat        lon  REGISTRY_ID  program      pgm_sys_id #> 1: 48.39008 -122.50088 110071133925 RCRAINFO    XJW000012435 #> 2: 18.06229  -66.85967 110000307855     TRIS 00768SRTRSROAD1"},{"path":"/articles/3_analyzing.html","id":"by-epa-regulatory-program","dir":"Articles","previous_headings":"POINTS & NEARBY RESIDENTS > Specify points (where you want to center the circular buffers)","what":"by EPA Regulatory Program","title":"3. Basics of Using EJAM for Analysis in RStudio","text":"","code":"# note latlon_from_programid() requires the frs and frs_by_programid datasets, which it tries to load on demand.  head(cbind(Count.of.facilities = sort(table(frs_by_programid$program), decreasing = T)), 20) #>               Count.of.facilities #> RCRAINFO                   517725 #> NPDES                      394581 #> NJ-NJEMS                   244577 #> CA-ENVIROVIEW              198389 #> ICIS                       156855 #> AIR                        134115 #> MN-TEMPO                   123971 #> FIS                        122496 #> EIS                        119792 #> TX-TCEQ ACR                108174 #> AIRS/AFS                   101075 #> OSHA-OIS                    85069 #> NCDB                        70782 #> ACES                        65353 #> IDNR_EFD                    45963 #> SFDW                        43309 #> OR-DEQ                      42392 #> IN-TEMPO                    39970 #> WA-FSIS                     37235 #> ACRES                       35541  latlon_from_program(\"CAMDBS\")[,1:6] #>           lat       lon  REGISTRY_ID #>   1: 17.94930 -66.23170 110000307800 #>   2: 42.15698 -72.52237 110000308444 #>   3: 42.45488 -73.21734 110000308480 #>   4: 43.16180 -78.75460 110000326530 #>   5: 41.49085 -78.67752 110000330400 #>  ---                                 #> 710: 29.70204 -95.07088 110070100752 #> 711: 40.95444 -72.88500 110070696981 #> 712: 41.03170 -81.87140 110070828207 #> 713: 40.75195 -82.79389 110070828208 #> 714: 38.37147 -87.74668 110070834810 #>                                         PRIMARY_NAME #>   1:                                   PREPA AGUIRRE #>   2:                 MASSPOWER COGENERATION FACILITY #>   3:                PITTSFIELD GENERATING COMPANY LP #>   4:                  LOCKPORT COGENERATION FACILITY #>   5:                       DOMTAR - JOHNSONBURG MILL #>  ---                                                 #> 710:               EXELON LAPORTE GENERATING STATION #> 711:                             SHOREHAM ENERGY LLC #> 712:                               OMEGA JV2 SEVILLE #> 713:                   OMEGA JV2-GALION (0317030059) #> 714: GIBSON GENERATING STATION TYPE I SOUTH LANDFILL #>                               NAICS              SIC #>   1:         221112, 221121, 221122       4911, 4941 #>   2:                 221111, 221112             4931 #>   3:                 211112, 221112             4911 #>   4:                         221112 4911, 4931, 4961 #>   5: 322110, 322120, 322121, 523140 2611, 2621, 2653 #>  ---                                                 #> 710:                         221112             4911 #> 711:                         221112             4911 #> 712:                 221111, 221112             4911 #> 713:                         221112             4911 #> 714:                         221112 4911, 4931, 4953"},{"path":"/articles/3_analyzing.html","id":"by-mact-subpart-hazardous-air-pollutant-source-category","dir":"Articles","previous_headings":"POINTS & NEARBY RESIDENTS > Specify points (where you want to center the circular buffers)","what":"by MACT Subpart (hazardous air pollutant source category)","title":"3. Basics of Using EJAM for Analysis in RStudio","text":"","code":"# note latlon_from_mactsubpart() requires the frs_by_mact dataset, which it tries to load on demand  # Search by name of category mact_table[grepl(\"ethylene\", mact_table$title, ignore.case = T), ] #>     subpart                                                  title #> 66        M                         DRY CLEANERS PERCHLOROETHYLENE #> 77        O                             ETHYLENE OXIDE STERILIZERS #> 121   WWWWW                    HOSPITAL ETHYLENE OXIDE STERILIZERS #> 124      XX ETHYLENE MPF: HEAT EXCHANGE SYSTEMS & WASTE OPERATIONS #>                                                       dropdown_label    N #> 66                        M - Dry Cleaners Perchloroethylene (8,763) 8763 #> 77                              O - Ethylene Oxide Sterilizers (111)  111 #> 121                WWWWW - Hospital Ethylene Oxide Sterilizers (111)  111 #> 124 XX - Ethylene Mpf: Heat Exchange Systems & Waste Operations (23)   23 eto <- rbind(   latlon_from_mactsubpart(\"O\" ),    latlon_from_mactsubpart(\"WWWWW\") ) #  Map the category mapfast(eto) # Browse the full list of categories # mact_table[ , c(\"N\", \"subpart\", \"title\")]  # The 10 largest categories tail(mact_table[order(mact_table$N), c(\"N\", \"subpart\", \"title\")], 10) #>         N subpart #> 9     943  BBBBBB #> 72   1185       N #> 103  1255       T #> 16   1700  CCCCCC #> 22   2737   DDDDD #> 45   3169  HHHHHH #> 41   3656      HH #> 1    5052       A #> 66   8763       M #> 134 25996    ZZZZ #>                                                                           title #> 9    GASOLINE DISTRIBUTION BULK TERMINALS, BULK PLANTS, AND PIPELINE FACILITIES #> 72                                                      CHROMIUM ELECTROPLATING #> 103                                                HALOGENATED SOLVENT CLEANING #> 16                                               GASOLINE DISPENSING FACILITIES #> 22  MAJOR SOURCES: INDUSTRIAL/COMMERCIAL/INSTITUTIONAL BOILERS & PROCESS HEATER #> 45                PAINT STRIP & MISC SURFACE COATING OPERATIONS AT AREA SOURCES #> 41                                    OIL AND NATURAL GAS PRODUCTION FACILITIES #> 1                                                            GENERAL PROVISIONS #> 66                                               DRY CLEANERS PERCHLOROETHYLENE #> 134                 STATIONARY RECIPROCATING INTERNAL COMBUSTION ENGINES (RICE)  # Many facilities lack latitude longitude information in this database nrow(latlon_from_mactsubpart(\"A\", include_if_no_latlon = TRUE)) #> [1] 5052 nrow(latlon_from_mactsubpart(\"A\", include_if_no_latlon = FALSE)) #> [1] 2073  head(latlon_from_mactsubpart(\"OOOO\"), 2) #>             programid subpart #> 1: 080000003800500001    OOOO #> 2: 0900000006111R9011    OOOO #>                                                         title      lat #> 1: PRINTING, COATING AND DYEING OF FABRICS AND OTHER TEXTILES 47.97940 #> 2: PRINTING, COATING AND DYEING OF FABRICS AND OTHER TEXTILES 34.22082 #>           lon  REGISTRY_ID program #> 1:  -99.02064 110000825867     AIR #> 2: -119.02272 110043415578     AIR"},{"path":[]},{"path":"/articles/3_analyzing.html","id":"naics-codes-to-map-or-analyze-facilities-in-one-industrial-sector","dir":"Articles","previous_headings":"POINTS & NEARBY RESIDENTS > Working with NAICS Codes (Industry Codes)","what":"NAICS Codes to Map or Analyze Facilities in one Industrial Sector","title":"3. Basics of Using EJAM for Analysis in RStudio","text":"NAICS/industry categories Quick map EPA-regulated facilities one industrial category, can click see popup windows sites. (note FRS dataset lacks NAICS facilities!) Table facilities industry, plus links facility ECHO EJScreen Map facilities industry, plus popups links facility ECHO EJScreen Search using industry codes text industry names NAICS code can many “children” subcategories ","code":"naics_categories() #> Also see https://www.naics.com/search/ #>                                                                               [,1] #> 11 - Agriculture, Forestry, Fishing and Hunting                                 11 #> 21 - Mining, Quarrying, and Oil and Gas Extraction                              21 #> 22 - Utilities                                                                  22 #> 23 - Construction                                                               23 #> 42 - Wholesale Trade                                                            42 #> 51 - Information                                                                51 #> 52 - Finance and Insurance                                                      52 #> 53 - Real Estate and Rental and Leasing                                         53 #> 54 - Professional, Scientific, and Technical Services                           54 #> 55 - Management of Companies and Enterprises                                    55 #> 56 - Administrative and Support and Waste Management and Remediation Services   56 #> 61 - Educational Services                                                       61 #> 62 - Health Care and Social Assistance                                          62 #> 71 - Arts, Entertainment, and Recreation                                        71 #> 72 - Accommodation and Food Services                                            72 #> 81 - Other Services (except Public Administration)                              81 #> 92 - Public Administration                                                      92 #> 31 - Manufacturing                                                              31 #> 32 - Manufacturing                                                              32 #> 33 - Manufacturing                                                              33 #> 44 - Retail Trade                                                               44 #> 45 - Retail Trade                                                               45 #> 48 - Transportation and Warehousing                                             48 #> 49 - Transportation and Warehousing                                             49 naics_from_any(naics_categories(3))[order(name),.(name,code)][1:10,] #> Also see https://www.naics.com/search/ #>                                                                              name #>  1:                                                                 Accommodation #>  2:                                           Administration of Economic Programs #>  3:                              Administration of Environmental Quality Programs #>  4: Administration of Housing Programs, Urban Planning, and Community Development #>  5:                                     Administration of Human Resource Programs #>  6:                                           Administrative and Support Services #>  7:                                                            Air Transportation #>  8:                                               Ambulatory Health Care Services #>  9:                                Amusement, Gambling, and Recreation Industries #> 10:                                             Animal Production and Aquaculture #>     code #>  1:  721 #>  2:  926 #>  3:  924 #>  4:  925 #>  5:  923 #>  6:  561 #>  7:  481 #>  8:  621 #>  9:  713 #> 10:  112 naics_from_any(naics_categories(3))[order(code),.(code,name)][1:10,] #> Also see https://www.naics.com/search/ #>     code                                            name #>  1:  111                                 Crop Production #>  2:  112               Animal Production and Aquaculture #>  3:  113                            Forestry and Logging #>  4:  114                   Fishing, Hunting and Trapping #>  5:  115 Support Activities for Agriculture and Forestry #>  6:  211                          Oil and Gas Extraction #>  7:  212                     Mining (except Oil and Gas) #>  8:  213                   Support Activities for Mining #>  9:  221                                       Utilities #> 10:  236                       Construction of Buildings  # See a data table of facilities in one industry industryword <- \"pulp\" head( frs_from_naics(naics_from_any(industryword)$code)[,1:4] ) #> Warning in naics_from_name(query_text, children = children, ignore.case = #> ignore.case, : NAs introduced by coercion #> Warning in naics_from_name(query_text, children = children, ignore.case = #> ignore.case, : mynames should be non-NA character vector of text to look for in #> industry title(s) like \"concrete\" #>         lat       lon  REGISTRY_ID                        PRIMARY_NAME #> 1: 42.60008 -72.37838 110000308612                  ERVING PAPER MILLS #> 2: 41.49085 -78.67752 110000330400           DOMTAR - JOHNSONBURG MILL #> 3: 39.52191 -80.13012 110000344958                     ND FAIRMONT LLC #> 4: 35.21225 -77.11482 110000350478 INTERNATIONAL PAPER - NEW BERN MILL #> 5: 39.55363 -84.30568 110000392076            CHENEY PULP AND PAPER CO #> 6: 45.10800 -87.60700 110000412367                              FIBREK # note frs_from_naics() requires the frs dataset, which it tries to load on demand.  mapfast(frs_from_naics(\"smelt\")) # may be slow the 1st time, if it loads frs dataset #> Warning in naics_from_name(query_text, children = children, ignore.case = #> ignore.case, : NAs introduced by coercion #> Warning in naics_from_name(query_text, children = children, ignore.case = #> ignore.case, : mynames should be non-NA character vector of text to look for in #> industry title(s) like \"concrete\" industryword <- \"chemical manuf\" #  industryword <- \"smelt\"  mysites <- frs_from_naics(industryword, children = FALSE)[,1:5]  regids <- mysites$REGISTRY_ID link1 <- url_echo_facility_webpage(regids, as_html = T) link2 <- url_ejscreen_report(lat = mysites$lat, lon = mysites$lon, radius = 3, as_html = T) link3 <- url_ejscreenmap(lat = mysites$lat, lon = mysites$lon,  as_html = T) # # same: # my_industry <- naics_from_any(\"chemical manuf\",children = F)[,.(code,name)] # mysites <- frs_from_naics(my_industry$code)[,1:5] mysites <- cbind(`ECHO report` = link1,                   `EJScreen Report` = link2, `EJScreen Map` = link3,                  mysites) caption = paste0(nrow(mysites), ' sites have NAICS matching \"', industryword, '\"') if (nrow(mysites) > 1500) {mysites <- mysites[1:1500, ]} # >2k rows is too much for client-side DataTables cat(caption,'\\n')  print(   DT::datatable(     mysites,     escape = FALSE,     rownames = FALSE,     caption = caption,     filter = \"top\"   )[1:10, ] ) mapfast(mysites) naics_from_any(\"plastics and rubber\")  #> Warning in naics_from_name(query_text, children = children, ignore.case = #> ignore.case, : NAs introduced by coercion #> Warning in naics_from_name(query_text, children = children, ignore.case = #> ignore.case, : mynames should be non-NA character vector of text to look for in #> industry title(s) like \"concrete\" #>    code n2  n3  n4  n5  n6                                       name #> 1:  326 32 326 326 326 326 Plastics and Rubber Products Manufacturing #>                                            num_name #> 1: 326 - Plastics and Rubber Products Manufacturing  naics_from_any(326) #>    code n2  n3  n4  n5  n6                                       name #> 1:  326 32 326 326 326 326 Plastics and Rubber Products Manufacturing #>                                            num_name #> 1: 326 - Plastics and Rubber Products Manufacturing  head(naics_from_any(326, children = T)[,.(code,name)]) #>      code #> 1:    326 #> 2:   3261 #> 3:  32611 #> 4: 326111 #> 5: 326112 #> 6: 326113 #>                                                                         name #> 1:                                Plastics and Rubber Products Manufacturing #> 2:                                            Plastics Product Manufacturing #> 3: Plastics Packaging Materials and Unlaminated Film and Sheet Manufacturing #> 4:                                      Plastics Bag and Pouch Manufacturing #> 5:     Plastics Packaging Film and Sheet (including Laminated) Manufacturing #> 6:      Unlaminated Plastics Film and Sheet (except Packaging) Manufacturing  naics_from_any(\"pig\")  #> Warning in naics_from_name(query_text, children = children, ignore.case = #> ignore.case, : NAs introduced by coercion  #> Warning in naics_from_name(query_text, children = children, ignore.case = #> ignore.case, : mynames should be non-NA character vector of text to look for in #> industry title(s) like \"concrete\" #>      code n2  n3   n4    n5     n6                                    name #> 1:   1122 11 112 1122  1122   1122                     Hog and Pig Farming #> 2:  11221 11 112 1122 11221  11221                     Hog and Pig Farming #> 3: 112210 11 112 1122 11221 112210                     Hog and Pig Farming #> 4:  32513 32 325 3251 32513  32513 Synthetic Dye and Pigment Manufacturing #> 5: 325130 32 325 3251 32513 325130 Synthetic Dye and Pigment Manufacturing #>                                            num_name #> 1:                       1122 - Hog and Pig Farming #> 2:                      11221 - Hog and Pig Farming #> 3:                     112210 - Hog and Pig Farming #> 4:  32513 - Synthetic Dye and Pigment Manufacturing #> 5: 325130 - Synthetic Dye and Pigment Manufacturing naics_from_any(\"pig \") # space after g #> Warning in naics_from_name(query_text, children = children, ignore.case = #> ignore.case, : NAs introduced by coercion  #> Warning in naics_from_name(query_text, children = children, ignore.case = #> ignore.case, : mynames should be non-NA character vector of text to look for in #> industry title(s) like \"concrete\" #>      code n2  n3   n4    n5     n6                name #> 1:   1122 11 112 1122  1122   1122 Hog and Pig Farming #> 2:  11221 11 112 1122 11221  11221 Hog and Pig Farming #> 3: 112210 11 112 1122 11221 112210 Hog and Pig Farming #>                        num_name #> 1:   1122 - Hog and Pig Farming #> 2:  11221 - Hog and Pig Farming #> 3: 112210 - Hog and Pig Farming  # a OR b,  a AND b,  etc. a = naics_from_any(\"plastics\") #> Warning in naics_from_name(query_text, children = children, ignore.case = #> ignore.case, : NAs introduced by coercion  #> Warning in naics_from_name(query_text, children = children, ignore.case = #> ignore.case, : mynames should be non-NA character vector of text to look for in #> industry title(s) like \"concrete\"  b = naics_from_any(\"rubber\") #> Warning in naics_from_name(query_text, children = children, ignore.case = #> ignore.case, : NAs introduced by coercion  #> Warning in naics_from_name(query_text, children = children, ignore.case = #> ignore.case, : mynames should be non-NA character vector of text to look for in #> industry title(s) like \"concrete\"  library(data.table) #> Warning: package 'data.table' was built under R version 4.2.3 data.table::fintersect(a,b)[,.(name,code)] #  a AND b #>                                                   name   code #> 1:          Plastics and Rubber Products Manufacturing    326 #> 2: Rubber and Plastics Hoses and Belting Manufacturing  32622 #> 3: Rubber and Plastics Hoses and Belting Manufacturing 326220  head(data.table::funion(a,b)[,.(name,code)])     #  a OR  b #>                                                                         name #> 1:                                 Plastics Material and Resin Manufacturing #> 2:                                Plastics and Rubber Products Manufacturing #> 3:                                            Plastics Product Manufacturing #> 4: Plastics Packaging Materials and Unlaminated Film and Sheet Manufacturing #> 5:                                      Plastics Bag and Pouch Manufacturing #> 6:     Plastics Packaging Film and Sheet (including Laminated) Manufacturing #>      code #> 1: 325211 #> 2:    326 #> 3:   3261 #> 4:  32611 #> 5: 326111 #> 6: 326112  # naics_subcodes_from_code(funion(a,b)[,code])[,.(name,code)]   #  plus children  head(naics_from_any(funion(a,b)[,code], children = T)[,.(name,code)] ) #  same #>                                                                         name #> 1:                                Plastics and Rubber Products Manufacturing #> 2:                                            Plastics Product Manufacturing #> 3: Plastics Packaging Materials and Unlaminated Film and Sheet Manufacturing #> 4:                                      Plastics Bag and Pouch Manufacturing #> 5:     Plastics Packaging Film and Sheet (including Laminated) Manufacturing #> 6:      Unlaminated Plastics Film and Sheet (except Packaging) Manufacturing #>      code #> 1:    326 #> 2:   3261 #> 3:  32611 #> 4: 326111 #> 5: 326112 #> 6: 326113 NROW(naics_from_any(\"chem\")) #> Warning in naics_from_name(query_text, children = children, ignore.case = #> ignore.case, : NAs introduced by coercion #> Warning in naics_from_name(query_text, children = children, ignore.case = #> ignore.case, : mynames should be non-NA character vector of text to look for in #> industry title(s) like \"concrete\" #> [1] 20 # about 20 NROW(naics_from_any(\"chem\", children = T)) #> Warning in naics_from_name(query_text, children = children, ignore.case = #> ignore.case, : NAs introduced by coercion  #> Warning in naics_from_name(query_text, children = children, ignore.case = #> ignore.case, : mynames should be non-NA character vector of text to look for in #> industry title(s) like \"concrete\" #> [1] 113 # >100 NROW(frs_from_naics(naics_from_any(\"chem\")$code)) #> Warning in naics_from_name(query_text, children = children, ignore.case = #> ignore.case, : NAs introduced by coercion  #> Warning in naics_from_name(query_text, children = children, ignore.case = #> ignore.case, : mynames should be non-NA character vector of text to look for in #> industry title(s) like \"concrete\" #> [1] 4997 # a few thousand NROW(frs_from_naics(naics_from_any(\"chem\", children = T)$code)) #> Warning in naics_from_name(query_text, children = children, ignore.case = #> ignore.case, : NAs introduced by coercion  #> Warning in naics_from_name(query_text, children = children, ignore.case = #> ignore.case, : mynames should be non-NA character vector of text to look for in #> industry title(s) like \"concrete\" #> [1] 13631 # >10,000"},{"path":[]},{"path":"/articles/3_analyzing.html","id":"polygons-in-shapefiles-as-the-places-to-compare","dir":"Articles","previous_headings":"SHAPEFILES","what":"Polygons in shapefiles as the places to compare","title":"3. Basics of Using EJAM for Analysis in RStudio","text":"can upload polygons shapefile, use EJAM analyze . See Shiny app. See shapefile_from_folder() related functions.","code":""},{"path":[]},{"path":"/articles/3_analyzing.html","id":"counties-as-the-places-to-compare","dir":"Articles","previous_headings":"FIPS CODES","what":"Counties as the places to compare","title":"3. Basics of Using EJAM for Analysis in RStudio","text":"can compare places defined FIPS code, group US Counties. Compare Counties State, using EJAM indicators","code":"# Get FIPS of each county in Delaware mystate <- \"Delaware\" cfips <- fips_counties_from_statename(mystate)  ## You could launch a web browser tab for each of the counties, ##  to see each of the County reports from EJScreen, like this: # # sapply(url_ejscreen_report(areaid = cfips), browseURL)  ## Analyze EJ stats for each county in the State  x <- ejamit(fips = cfips) # radius not used DT::datatable(x$results_bysite, escape = F)  table_tall_from_overall(x$results_overall)  t(x$results_bysite[ , c(   'ejam_uniq_id', 'pop', names_d_subgroups_ratio_to_state_avg), with = F])  mapfastej_counties(x$results_bysite)  cnames <- fips2countyname(x$results_bysite$ejam_uniq_id) #cnames <- c(\"Kent County\", \"New Castle County\", \"Sussex County\") #cnames <- gsub(\" County\", \"\", cnames)  barplot(x$results_bysite$pctlowinc, names.arg = cnames,         main = paste0('% Low Income by County in ', mystate))  # Another example mystate <- \"Maryland\" vname <- \"% low income\" xmd <- ejamit(fips = fips_counties_from_statename(mystate)) ggblanket::gg_col(data = xmd$results_bysite,                   y = pctlowinc,                   x = ejam_uniq_id,                   title = paste0(vname, ' by County in ', mystate),                   y_title = vname )  mapfastej_counties(xmd$results_bysite, 'state.pctile.pctlowinc')"},{"path":[]},{"path":"/articles/3_analyzing.html","id":"site-by-site-results-in-datatable-format-in-rstudio-viewer","dir":"Articles","previous_headings":"EXPLORING RESULTS","what":"Site by site results in datatable format in RStudio viewer:","title":"3. Basics of Using EJAM for Analysis in RStudio","text":"","code":"out2 <- testoutput_ejamit_100pts_1miles DT::datatable(out2$results_bysite[1:30,   ], escape = FALSE, rownames = FALSE)  # To see all 1,000 sites in table: #DT::datatable(out2$results_bysite[1:1000, ], escape = FALSE, rownames = FALSE)"},{"path":"/articles/3_analyzing.html","id":"overall-results-for-a-few-key-indicators-as-raw-output-in-console","dir":"Articles","previous_headings":"EXPLORING RESULTS > Site by site results in datatable format in RStudio viewer:","what":"Overall results for a few key indicators, as raw output in console:","title":"3. Basics of Using EJAM for Analysis in RStudio","text":"","code":"out2 <- testoutput_ejamit_100pts_1miles names(out2) #> [1] \"results_overall\"                     \"results_bysite\"                      #> [3] \"results_bybg_people\"                 \"longnames\"                           #> [5] \"count_of_blocks_near_multiple_sites\" \"results_summarized\"                  #> [7] \"formatted\" cbind(overall = as.list( out2$results_overall[ , ..names_d])) #>                  overall    #> Demog.Index      0.4375791  #> Demog.Index.Supp 0.1559613  #> pctlowinc        0.3273222  #> pctlingiso       0.07851435 #> pctunemployed    0.06273723 #> pctlths          0.132045   #> lowlifex         0.1791878  #> pctunder5        0.05773662 #> pctover64        0.1407173  #> pctmin           0.5478361 cbind(overall = as.list( out2$results_overall[ , ..names_d_subgroups])) #>                 overall     #> pcthisp         0.2737942   #> pctnhba         0.1462381   #> pctnhaa         0.0866459   #> pctnhaiana      0.002500135 #> pctnhnhpia      0.001582896 #> pctnhotheralone 0.005025789 #> pctnhmulti      0.03204894  #> pctnhwa         0.4521639"},{"path":"/articles/3_analyzing.html","id":"overall-results-for-the-very-long-list-of-all-indicators-as-raw-output-in-console","dir":"Articles","previous_headings":"EXPLORING RESULTS > Site by site results in datatable format in RStudio viewer:","what":"Overall results for the very long list of all indicators, as raw output in console:","title":"3. Basics of Using EJAM for Analysis in RStudio","text":"","code":"out2 <- testoutput_ejamit_100pts_1miles cbind(as.list(out2$results_overall)) x <- testoutput_ejamit_1000pts_1miles  out <- x$results_bysite out <- setDF(copy(out)) ratio_benchmarks <- c(1.01, 1.50, 2, 3, 5, 10) ratiodata <- out[, names_d_ratio_to_state_avg]  findings <- count_sites_with_n_high_scores(out)  # long output to console ! #>  #> At 100% of these sites, at least 1 indicator is at least 10 times the statewide overall average.  #> At 100% of these sites, at least 1 indicator is at least 5 times the statewide overall average.  #> At 100% of these sites, at least 1 indicator is at least 3 times the statewide overall average.  #> At 100% of these sites, at least 1 indicator is at least 2 times the statewide overall average.  #> At 100% of these sites, at least 1 indicator is at least 1.5 times the statewide overall average.  #> At 100% of these sites, at least 1 indicator is at least 1.01 times the statewide overall average.  #>  #> At 100% of these sites, at least 2 indicators are at least 10 times the statewide overall average.  #> At 100% of these sites, at least 2 indicators are at least 5 times the statewide overall average.  #> At 100% of these sites, at least 2 indicators are at least 3 times the statewide overall average.  #> At 100% of these sites, at least 2 indicators are at least 2 times the statewide overall average.  #> At 100% of these sites, at least 2 indicators are at least 1.5 times the statewide overall average.  #> At 100% of these sites, at least 2 indicators are at least 1.01 times the statewide overall average.  #>  #> At 100% of these sites, at least 3 indicators are at least 10 times the statewide overall average.  #> At 100% of these sites, at least 3 indicators are at least 5 times the statewide overall average.  #> At 100% of these sites, at least 3 indicators are at least 3 times the statewide overall average.  #> At 100% of these sites, at least 3 indicators are at least 2 times the statewide overall average.  #> At 100% of these sites, at least 3 indicators are at least 1.5 times the statewide overall average.  #> At 100% of these sites, at least 3 indicators are at least 1.01 times the statewide overall average.  #>  #> At 100% of these sites, at least 4 indicators are at least 10 times the statewide overall average.  #> At 100% of these sites, at least 4 indicators are at least 5 times the statewide overall average.  #> At 100% of these sites, at least 4 indicators are at least 3 times the statewide overall average.  #> At 100% of these sites, at least 4 indicators are at least 2 times the statewide overall average.  #> At 100% of these sites, at least 4 indicators are at least 1.5 times the statewide overall average.  #> At 100% of these sites, at least 4 indicators are at least 1.01 times the statewide overall average.  #>  #> At 100% of these sites, at least 5 indicators are at least 10 times the statewide overall average.  #> At 100% of these sites, at least 5 indicators are at least 5 times the statewide overall average.  #> At 100% of these sites, at least 5 indicators are at least 3 times the statewide overall average.  #> At 100% of these sites, at least 5 indicators are at least 2 times the statewide overall average.  #> At 100% of these sites, at least 5 indicators are at least 1.5 times the statewide overall average.  #> At 100% of these sites, at least 5 indicators are at least 1.01 times the statewide overall average.  #>  #> At 100% of these sites, at least 6 indicators are at least 10 times the statewide overall average.  #> At 100% of these sites, at least 6 indicators are at least 5 times the statewide overall average.  #> At 100% of these sites, at least 6 indicators are at least 3 times the statewide overall average.  #> At 100% of these sites, at least 6 indicators are at least 2 times the statewide overall average.  #> At 100% of these sites, at least 6 indicators are at least 1.5 times the statewide overall average.  #> At 100% of these sites, at least 6 indicators are at least 1.01 times the statewide overall average.  #>  #> At 100% of these sites, at least 7 indicators are at least 10 times the statewide overall average.  #> At 100% of these sites, at least 7 indicators are at least 5 times the statewide overall average.  #> At 100% of these sites, at least 7 indicators are at least 3 times the statewide overall average.  #> At 100% of these sites, at least 7 indicators are at least 2 times the statewide overall average.  #> At 100% of these sites, at least 7 indicators are at least 1.5 times the statewide overall average.  #> At 100% of these sites, at least 7 indicators are at least 1.01 times the statewide overall average.  #>  #> At 100% of these sites, at least 8 indicators are at least 10 times the statewide overall average.  #> At 100% of these sites, at least 8 indicators are at least 5 times the statewide overall average.  #> At 100% of these sites, at least 8 indicators are at least 3 times the statewide overall average.  #> At 100% of these sites, at least 8 indicators are at least 2 times the statewide overall average.  #> At 100% of these sites, at least 8 indicators are at least 1.5 times the statewide overall average.  #> At 100% of these sites, at least 8 indicators are at least 1.01 times the statewide overall average.  #>  #> At 100% of these sites, at least 9 indicators are at least 10 times the statewide overall average.  #> At 100% of these sites, at least 9 indicators are at least 5 times the statewide overall average.  #> At 100% of these sites, at least 9 indicators are at least 3 times the statewide overall average.  #> At 100% of these sites, at least 9 indicators are at least 2 times the statewide overall average.  #> At 100% of these sites, at least 9 indicators are at least 1.5 times the statewide overall average.  #> At 100% of these sites, at least 9 indicators are at least 1.01 times the statewide overall average.  #>  #> At 100% of these sites, at least 10 indicators are at least 10 times the statewide overall average.  #> At 100% of these sites, at least 10 indicators are at least 5 times the statewide overall average.  #> At 100% of these sites, at least 10 indicators are at least 3 times the statewide overall average.  #> At 100% of these sites, at least 10 indicators are at least 2 times the statewide overall average.  #> At 100% of these sites, at least 10 indicators are at least 1.5 times the statewide overall average.  #> At 100% of these sites, at least 10 indicators are at least 1.01 times the statewide overall average.  #>  #> At 100% of these sites, at least 11 indicators are at least 10 times the statewide overall average.  #> At 100% of these sites, at least 11 indicators are at least 5 times the statewide overall average.  #> At 100% of these sites, at least 11 indicators are at least 3 times the statewide overall average.  #> At 100% of these sites, at least 11 indicators are at least 2 times the statewide overall average.  #> At 100% of these sites, at least 11 indicators are at least 1.5 times the statewide overall average.  #> At 100% of these sites, at least 11 indicators are at least 1.01 times the statewide overall average.  #>  #> At 100% of these sites, at least 12 indicators are at least 10 times the statewide overall average.  #> At 100% of these sites, at least 12 indicators are at least 5 times the statewide overall average.  #> At 100% of these sites, at least 12 indicators are at least 3 times the statewide overall average.  #> At 100% of these sites, at least 12 indicators are at least 2 times the statewide overall average.  #> At 100% of these sites, at least 12 indicators are at least 1.5 times the statewide overall average.  #> At 100% of these sites, at least 12 indicators are at least 1.01 times the statewide overall average.  #>  #> At 100% of these sites, at least 13 indicators are at least 10 times the statewide overall average.  #> At 100% of these sites, at least 13 indicators are at least 5 times the statewide overall average.  #> At 100% of these sites, at least 13 indicators are at least 3 times the statewide overall average.  #> At 100% of these sites, at least 13 indicators are at least 2 times the statewide overall average.  #> At 100% of these sites, at least 13 indicators are at least 1.5 times the statewide overall average.  #> At 100% of these sites, at least 13 indicators are at least 1.01 times the statewide overall average.  #>  #> At 99% of these sites, at least 14 indicators are at least 10 times the statewide overall average.  #> At 100% of these sites, at least 14 indicators are at least 5 times the statewide overall average.  #> At 100% of these sites, at least 14 indicators are at least 3 times the statewide overall average.  #> At 100% of these sites, at least 14 indicators are at least 2 times the statewide overall average.  #> At 100% of these sites, at least 14 indicators are at least 1.5 times the statewide overall average.  #> At 100% of these sites, at least 14 indicators are at least 1.01 times the statewide overall average.  #>  #> At 98% of these sites, at least 15 indicators are at least 10 times the statewide overall average.  #> At 100% of these sites, at least 15 indicators are at least 5 times the statewide overall average.  #> At 100% of these sites, at least 15 indicators are at least 3 times the statewide overall average.  #> At 100% of these sites, at least 15 indicators are at least 2 times the statewide overall average.  #> At 100% of these sites, at least 15 indicators are at least 1.5 times the statewide overall average.  #> At 100% of these sites, at least 15 indicators are at least 1.01 times the statewide overall average.  #>  #> At 98% of these sites, at least 16 indicators are at least 10 times the statewide overall average.  #> At 100% of these sites, at least 16 indicators are at least 5 times the statewide overall average.  #> At 100% of these sites, at least 16 indicators are at least 3 times the statewide overall average.  #> At 100% of these sites, at least 16 indicators are at least 2 times the statewide overall average.  #> At 100% of these sites, at least 16 indicators are at least 1.5 times the statewide overall average.  #> At 100% of these sites, at least 16 indicators are at least 1.01 times the statewide overall average.  #>  #> At 98% of these sites, at least 17 indicators are at least 10 times the statewide overall average.  #> At 99% of these sites, at least 17 indicators are at least 5 times the statewide overall average.  #> At 100% of these sites, at least 17 indicators are at least 3 times the statewide overall average.  #> At 100% of these sites, at least 17 indicators are at least 2 times the statewide overall average.  #> At 100% of these sites, at least 17 indicators are at least 1.5 times the statewide overall average.  #> At 100% of these sites, at least 17 indicators are at least 1.01 times the statewide overall average.  #>  #> At 98% of these sites, at least 18 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 18 indicators are at least 5 times the statewide overall average.  #> At 99% of these sites, at least 18 indicators are at least 3 times the statewide overall average.  #> At 100% of these sites, at least 18 indicators are at least 2 times the statewide overall average.  #> At 100% of these sites, at least 18 indicators are at least 1.5 times the statewide overall average.  #> At 100% of these sites, at least 18 indicators are at least 1.01 times the statewide overall average.  #>  #> At 98% of these sites, at least 19 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 19 indicators are at least 5 times the statewide overall average.  #> At 99% of these sites, at least 19 indicators are at least 3 times the statewide overall average.  #> At 99% of these sites, at least 19 indicators are at least 2 times the statewide overall average.  #> At 100% of these sites, at least 19 indicators are at least 1.5 times the statewide overall average.  #> At 100% of these sites, at least 19 indicators are at least 1.01 times the statewide overall average.  #>  #> At 98% of these sites, at least 20 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 20 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 20 indicators are at least 3 times the statewide overall average.  #> At 99% of these sites, at least 20 indicators are at least 2 times the statewide overall average.  #> At 99% of these sites, at least 20 indicators are at least 1.5 times the statewide overall average.  #> At 100% of these sites, at least 20 indicators are at least 1.01 times the statewide overall average.  #>  #> At 98% of these sites, at least 21 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 21 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 21 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 21 indicators are at least 2 times the statewide overall average.  #> At 99% of these sites, at least 21 indicators are at least 1.5 times the statewide overall average.  #> At 99% of these sites, at least 21 indicators are at least 1.01 times the statewide overall average.  #>  #> At 98% of these sites, at least 22 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 22 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 22 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 22 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 22 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 22 indicators are at least 1.01 times the statewide overall average.  #>  #> At 98% of these sites, at least 23 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 23 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 23 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 23 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 23 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 23 indicators are at least 1.01 times the statewide overall average.  #>  #> At 98% of these sites, at least 24 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 24 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 24 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 24 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 24 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 24 indicators are at least 1.01 times the statewide overall average.  #>  #> At 98% of these sites, at least 25 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 25 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 25 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 25 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 25 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 25 indicators are at least 1.01 times the statewide overall average.  #>  #> At 98% of these sites, at least 26 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 26 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 26 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 26 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 26 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 26 indicators are at least 1.01 times the statewide overall average.  #>  #> At 98% of these sites, at least 27 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 27 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 27 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 27 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 27 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 27 indicators are at least 1.01 times the statewide overall average.  #>  #> At 98% of these sites, at least 28 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 28 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 28 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 28 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 28 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 28 indicators are at least 1.01 times the statewide overall average.  #>  #> At 98% of these sites, at least 29 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 29 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 29 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 29 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 29 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 29 indicators are at least 1.01 times the statewide overall average.  #>  #> At 98% of these sites, at least 30 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 30 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 30 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 30 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 30 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 30 indicators are at least 1.01 times the statewide overall average.  #>  #> At 98% of these sites, at least 31 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 31 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 31 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 31 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 31 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 31 indicators are at least 1.01 times the statewide overall average.  #>  #> At 98% of these sites, at least 32 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 32 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 32 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 32 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 32 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 32 indicators are at least 1.01 times the statewide overall average.  #>  #> At 98% of these sites, at least 33 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 33 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 33 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 33 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 33 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 33 indicators are at least 1.01 times the statewide overall average.  #>  #> At 98% of these sites, at least 34 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 34 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 34 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 34 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 34 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 34 indicators are at least 1.01 times the statewide overall average.  #>  #> At 98% of these sites, at least 35 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 35 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 35 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 35 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 35 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 35 indicators are at least 1.01 times the statewide overall average.  #>  #> At 98% of these sites, at least 36 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 36 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 36 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 36 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 36 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 36 indicators are at least 1.01 times the statewide overall average.  #>  #> At 98% of these sites, at least 37 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 37 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 37 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 37 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 37 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 37 indicators are at least 1.01 times the statewide overall average.  #>  #> At 98% of these sites, at least 38 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 38 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 38 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 38 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 38 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 38 indicators are at least 1.01 times the statewide overall average.  #>  #> At 98% of these sites, at least 39 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 39 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 39 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 39 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 39 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 39 indicators are at least 1.01 times the statewide overall average.  #>  #> At 98% of these sites, at least 40 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 40 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 40 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 40 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 40 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 40 indicators are at least 1.01 times the statewide overall average.  #>  #> At 98% of these sites, at least 41 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 41 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 41 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 41 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 41 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 41 indicators are at least 1.01 times the statewide overall average.  #>  #> At 98% of these sites, at least 42 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 42 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 42 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 42 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 42 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 42 indicators are at least 1.01 times the statewide overall average.  #>  #> At 98% of these sites, at least 43 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 43 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 43 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 43 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 43 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 43 indicators are at least 1.01 times the statewide overall average.  #>  #> At 98% of these sites, at least 44 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 44 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 44 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 44 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 44 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 44 indicators are at least 1.01 times the statewide overall average.  #>  #> At 98% of these sites, at least 45 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 45 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 45 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 45 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 45 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 45 indicators are at least 1.01 times the statewide overall average.  #>  #> At 98% of these sites, at least 46 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 46 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 46 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 46 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 46 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 46 indicators are at least 1.01 times the statewide overall average.  #>  #> At 98% of these sites, at least 47 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 47 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 47 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 47 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 47 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 47 indicators are at least 1.01 times the statewide overall average.  #>  #> At 98% of these sites, at least 48 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 48 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 48 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 48 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 48 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 48 indicators are at least 1.01 times the statewide overall average.  #>  #> At 98% of these sites, at least 49 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 49 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 49 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 49 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 49 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 49 indicators are at least 1.01 times the statewide overall average.  #>  #> At 98% of these sites, at least 50 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 50 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 50 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 50 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 50 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 50 indicators are at least 1.01 times the statewide overall average.  #>  #> At 98% of these sites, at least 51 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 51 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 51 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 51 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 51 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 51 indicators are at least 1.01 times the statewide overall average.  #>  #> At 98% of these sites, at least 52 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 52 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 52 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 52 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 52 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 52 indicators are at least 1.01 times the statewide overall average.  #>  #> At 98% of these sites, at least 53 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 53 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 53 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 53 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 53 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 53 indicators are at least 1.01 times the statewide overall average.  #>  #> At 98% of these sites, at least 54 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 54 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 54 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 54 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 54 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 54 indicators are at least 1.01 times the statewide overall average.  #>  #> At 98% of these sites, at least 55 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 55 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 55 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 55 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 55 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 55 indicators are at least 1.01 times the statewide overall average.  #>  #> At 98% of these sites, at least 56 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 56 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 56 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 56 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 56 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 56 indicators are at least 1.01 times the statewide overall average.  #>  #> At 98% of these sites, at least 57 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 57 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 57 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 57 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 57 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 57 indicators are at least 1.01 times the statewide overall average.  #>  #> At 98% of these sites, at least 58 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 58 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 58 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 58 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 58 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 58 indicators are at least 1.01 times the statewide overall average.  #>  #> At 98% of these sites, at least 59 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 59 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 59 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 59 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 59 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 59 indicators are at least 1.01 times the statewide overall average.  #>  #> At 98% of these sites, at least 60 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 60 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 60 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 60 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 60 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 60 indicators are at least 1.01 times the statewide overall average.  #>  #> At 98% of these sites, at least 61 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 61 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 61 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 61 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 61 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 61 indicators are at least 1.01 times the statewide overall average.  #>  #> At 98% of these sites, at least 62 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 62 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 62 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 62 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 62 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 62 indicators are at least 1.01 times the statewide overall average.  #>  #> At 98% of these sites, at least 63 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 63 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 63 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 63 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 63 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 63 indicators are at least 1.01 times the statewide overall average.  #>  #> At 98% of these sites, at least 64 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 64 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 64 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 64 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 64 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 64 indicators are at least 1.01 times the statewide overall average.  #>  #> At 98% of these sites, at least 65 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 65 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 65 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 65 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 65 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 65 indicators are at least 1.01 times the statewide overall average.  #>  #> At 98% of these sites, at least 66 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 66 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 66 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 66 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 66 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 66 indicators are at least 1.01 times the statewide overall average.  #>  #> At 98% of these sites, at least 67 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 67 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 67 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 67 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 67 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 67 indicators are at least 1.01 times the statewide overall average.  #>  #> At 98% of these sites, at least 68 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 68 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 68 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 68 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 68 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 68 indicators are at least 1.01 times the statewide overall average.  #>  #> At 98% of these sites, at least 69 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 69 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 69 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 69 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 69 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 69 indicators are at least 1.01 times the statewide overall average.  #>  #> At 98% of these sites, at least 70 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 70 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 70 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 70 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 70 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 70 indicators are at least 1.01 times the statewide overall average.  #>  #> At 98% of these sites, at least 71 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 71 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 71 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 71 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 71 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 71 indicators are at least 1.01 times the statewide overall average.  #>  #> At 97% of these sites, at least 72 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 72 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 72 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 72 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 72 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 72 indicators are at least 1.01 times the statewide overall average.  #>  #> At 97% of these sites, at least 73 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 73 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 73 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 73 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 73 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 73 indicators are at least 1.01 times the statewide overall average.  #>  #> At 97% of these sites, at least 74 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 74 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 74 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 74 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 74 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 74 indicators are at least 1.01 times the statewide overall average.  #>  #> At 97% of these sites, at least 75 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 75 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 75 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 75 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 75 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 75 indicators are at least 1.01 times the statewide overall average.  #>  #> At 97% of these sites, at least 76 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 76 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 76 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 76 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 76 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 76 indicators are at least 1.01 times the statewide overall average.  #>  #> At 97% of these sites, at least 77 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 77 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 77 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 77 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 77 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 77 indicators are at least 1.01 times the statewide overall average.  #>  #> At 97% of these sites, at least 78 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 78 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 78 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 78 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 78 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 78 indicators are at least 1.01 times the statewide overall average.  #>  #> At 97% of these sites, at least 79 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 79 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 79 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 79 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 79 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 79 indicators are at least 1.01 times the statewide overall average.  #>  #> At 97% of these sites, at least 80 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 80 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 80 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 80 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 80 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 80 indicators are at least 1.01 times the statewide overall average.  #>  #> At 97% of these sites, at least 81 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 81 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 81 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 81 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 81 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 81 indicators are at least 1.01 times the statewide overall average.  #>  #> At 97% of these sites, at least 82 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 82 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 82 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 82 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 82 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 82 indicators are at least 1.01 times the statewide overall average.  #>  #> At 97% of these sites, at least 83 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 83 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 83 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 83 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 83 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 83 indicators are at least 1.01 times the statewide overall average.  #>  #> At 97% of these sites, at least 84 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 84 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 84 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 84 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 84 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 84 indicators are at least 1.01 times the statewide overall average.  #>  #> At 97% of these sites, at least 85 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 85 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 85 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 85 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 85 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 85 indicators are at least 1.01 times the statewide overall average.  #>  #> At 97% of these sites, at least 86 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 86 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 86 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 86 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 86 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 86 indicators are at least 1.01 times the statewide overall average.  #>  #> At 97% of these sites, at least 87 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 87 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 87 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 87 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 87 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 87 indicators are at least 1.01 times the statewide overall average.  #>  #> At 97% of these sites, at least 88 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 88 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 88 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 88 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 88 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 88 indicators are at least 1.01 times the statewide overall average.  #>  #> At 97% of these sites, at least 89 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 89 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 89 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 89 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 89 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 89 indicators are at least 1.01 times the statewide overall average.  #>  #> At 96% of these sites, at least 90 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 90 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 90 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 90 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 90 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 90 indicators are at least 1.01 times the statewide overall average.  #>  #> At 96% of these sites, at least 91 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 91 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 91 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 91 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 91 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 91 indicators are at least 1.01 times the statewide overall average.  #>  #> At 96% of these sites, at least 92 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 92 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 92 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 92 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 92 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 92 indicators are at least 1.01 times the statewide overall average.  #>  #> At 96% of these sites, at least 93 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 93 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 93 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 93 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 93 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 93 indicators are at least 1.01 times the statewide overall average.  #>  #> At 96% of these sites, at least 94 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 94 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 94 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 94 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 94 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 94 indicators are at least 1.01 times the statewide overall average.  #>  #> At 96% of these sites, at least 95 indicators are at least 10 times the statewide overall average.  #> At 98% of these sites, at least 95 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 95 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 95 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 95 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 95 indicators are at least 1.01 times the statewide overall average.  #>  #> At 95% of these sites, at least 96 indicators are at least 10 times the statewide overall average.  #> At 97% of these sites, at least 96 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 96 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 96 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 96 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 96 indicators are at least 1.01 times the statewide overall average.  #>  #> At 95% of these sites, at least 97 indicators are at least 10 times the statewide overall average.  #> At 97% of these sites, at least 97 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 97 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 97 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 97 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 97 indicators are at least 1.01 times the statewide overall average.  #>  #> At 95% of these sites, at least 98 indicators are at least 10 times the statewide overall average.  #> At 97% of these sites, at least 98 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 98 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 98 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 98 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 98 indicators are at least 1.01 times the statewide overall average.  #>  #> At 95% of these sites, at least 99 indicators are at least 10 times the statewide overall average.  #> At 97% of these sites, at least 99 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 99 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 99 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 99 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 99 indicators are at least 1.01 times the statewide overall average.  #>  #> At 95% of these sites, at least 100 indicators are at least 10 times the statewide overall average.  #> At 97% of these sites, at least 100 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 100 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 100 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 100 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 100 indicators are at least 1.01 times the statewide overall average.  #>  #> At 94% of these sites, at least 101 indicators are at least 10 times the statewide overall average.  #> At 97% of these sites, at least 101 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 101 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 101 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 101 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 101 indicators are at least 1.01 times the statewide overall average.  #>  #> At 94% of these sites, at least 102 indicators are at least 10 times the statewide overall average.  #> At 97% of these sites, at least 102 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 102 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 102 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 102 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 102 indicators are at least 1.01 times the statewide overall average.  #>  #> At 94% of these sites, at least 103 indicators are at least 10 times the statewide overall average.  #> At 97% of these sites, at least 103 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 103 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 103 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 103 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 103 indicators are at least 1.01 times the statewide overall average.  #>  #> At 94% of these sites, at least 104 indicators are at least 10 times the statewide overall average.  #> At 97% of these sites, at least 104 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 104 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 104 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 104 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 104 indicators are at least 1.01 times the statewide overall average.  #>  #> At 94% of these sites, at least 105 indicators are at least 10 times the statewide overall average.  #> At 97% of these sites, at least 105 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 105 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 105 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 105 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 105 indicators are at least 1.01 times the statewide overall average.  #>  #> At 93% of these sites, at least 106 indicators are at least 10 times the statewide overall average.  #> At 97% of these sites, at least 106 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 106 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 106 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 106 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 106 indicators are at least 1.01 times the statewide overall average.  #>  #> At 93% of these sites, at least 107 indicators are at least 10 times the statewide overall average.  #> At 97% of these sites, at least 107 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 107 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 107 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 107 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 107 indicators are at least 1.01 times the statewide overall average.  #>  #> At 93% of these sites, at least 108 indicators are at least 10 times the statewide overall average.  #> At 97% of these sites, at least 108 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 108 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 108 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 108 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 108 indicators are at least 1.01 times the statewide overall average.  #>  #> At 93% of these sites, at least 109 indicators are at least 10 times the statewide overall average.  #> At 97% of these sites, at least 109 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 109 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 109 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 109 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 109 indicators are at least 1.01 times the statewide overall average.  #>  #> At 93% of these sites, at least 110 indicators are at least 10 times the statewide overall average.  #> At 97% of these sites, at least 110 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 110 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 110 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 110 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 110 indicators are at least 1.01 times the statewide overall average.  #>  #> At 92% of these sites, at least 111 indicators are at least 10 times the statewide overall average.  #> At 97% of these sites, at least 111 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 111 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 111 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 111 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 111 indicators are at least 1.01 times the statewide overall average.  #>  #> At 92% of these sites, at least 112 indicators are at least 10 times the statewide overall average.  #> At 96% of these sites, at least 112 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 112 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 112 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 112 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 112 indicators are at least 1.01 times the statewide overall average.  #>  #> At 91% of these sites, at least 113 indicators are at least 10 times the statewide overall average.  #> At 96% of these sites, at least 113 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 113 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 113 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 113 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 113 indicators are at least 1.01 times the statewide overall average.  #>  #> At 91% of these sites, at least 114 indicators are at least 10 times the statewide overall average.  #> At 96% of these sites, at least 114 indicators are at least 5 times the statewide overall average.  #> At 98% of these sites, at least 114 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 114 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 114 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 114 indicators are at least 1.01 times the statewide overall average.  #>  #> At 90% of these sites, at least 115 indicators are at least 10 times the statewide overall average.  #> At 96% of these sites, at least 115 indicators are at least 5 times the statewide overall average.  #> At 97% of these sites, at least 115 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 115 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 115 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 115 indicators are at least 1.01 times the statewide overall average.  #>  #> At 90% of these sites, at least 116 indicators are at least 10 times the statewide overall average.  #> At 96% of these sites, at least 116 indicators are at least 5 times the statewide overall average.  #> At 97% of these sites, at least 116 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 116 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 116 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 116 indicators are at least 1.01 times the statewide overall average.  #>  #> At 89% of these sites, at least 117 indicators are at least 10 times the statewide overall average.  #> At 96% of these sites, at least 117 indicators are at least 5 times the statewide overall average.  #> At 97% of these sites, at least 117 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 117 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 117 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 117 indicators are at least 1.01 times the statewide overall average.  #>  #> At 89% of these sites, at least 118 indicators are at least 10 times the statewide overall average.  #> At 96% of these sites, at least 118 indicators are at least 5 times the statewide overall average.  #> At 97% of these sites, at least 118 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 118 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 118 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 118 indicators are at least 1.01 times the statewide overall average.  #>  #> At 88% of these sites, at least 119 indicators are at least 10 times the statewide overall average.  #> At 96% of these sites, at least 119 indicators are at least 5 times the statewide overall average.  #> At 97% of these sites, at least 119 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 119 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 119 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 119 indicators are at least 1.01 times the statewide overall average.  #>  #> At 88% of these sites, at least 120 indicators are at least 10 times the statewide overall average.  #> At 96% of these sites, at least 120 indicators are at least 5 times the statewide overall average.  #> At 97% of these sites, at least 120 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 120 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 120 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 120 indicators are at least 1.01 times the statewide overall average.  #>  #> At 87% of these sites, at least 121 indicators are at least 10 times the statewide overall average.  #> At 96% of these sites, at least 121 indicators are at least 5 times the statewide overall average.  #> At 97% of these sites, at least 121 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 121 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 121 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 121 indicators are at least 1.01 times the statewide overall average.  #>  #> At 87% of these sites, at least 122 indicators are at least 10 times the statewide overall average.  #> At 95% of these sites, at least 122 indicators are at least 5 times the statewide overall average.  #> At 97% of these sites, at least 122 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 122 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 122 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 122 indicators are at least 1.01 times the statewide overall average.  #>  #> At 86% of these sites, at least 123 indicators are at least 10 times the statewide overall average.  #> At 95% of these sites, at least 123 indicators are at least 5 times the statewide overall average.  #> At 97% of these sites, at least 123 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 123 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 123 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 123 indicators are at least 1.01 times the statewide overall average.  #>  #> At 86% of these sites, at least 124 indicators are at least 10 times the statewide overall average.  #> At 95% of these sites, at least 124 indicators are at least 5 times the statewide overall average.  #> At 97% of these sites, at least 124 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 124 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 124 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 124 indicators are at least 1.01 times the statewide overall average.  #>  #> At 85% of these sites, at least 125 indicators are at least 10 times the statewide overall average.  #> At 94% of these sites, at least 125 indicators are at least 5 times the statewide overall average.  #> At 97% of these sites, at least 125 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 125 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 125 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 125 indicators are at least 1.01 times the statewide overall average.  #>  #> At 85% of these sites, at least 126 indicators are at least 10 times the statewide overall average.  #> At 94% of these sites, at least 126 indicators are at least 5 times the statewide overall average.  #> At 97% of these sites, at least 126 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 126 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 126 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 126 indicators are at least 1.01 times the statewide overall average.  #>  #> At 84% of these sites, at least 127 indicators are at least 10 times the statewide overall average.  #> At 94% of these sites, at least 127 indicators are at least 5 times the statewide overall average.  #> At 97% of these sites, at least 127 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 127 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 127 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 127 indicators are at least 1.01 times the statewide overall average.  #>  #> At 83% of these sites, at least 128 indicators are at least 10 times the statewide overall average.  #> At 94% of these sites, at least 128 indicators are at least 5 times the statewide overall average.  #> At 97% of these sites, at least 128 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 128 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 128 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 128 indicators are at least 1.01 times the statewide overall average.  #>  #> At 83% of these sites, at least 129 indicators are at least 10 times the statewide overall average.  #> At 94% of these sites, at least 129 indicators are at least 5 times the statewide overall average.  #> At 97% of these sites, at least 129 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 129 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 129 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 129 indicators are at least 1.01 times the statewide overall average.  #>  #> At 82% of these sites, at least 130 indicators are at least 10 times the statewide overall average.  #> At 94% of these sites, at least 130 indicators are at least 5 times the statewide overall average.  #> At 97% of these sites, at least 130 indicators are at least 3 times the statewide overall average.  #> At 98% of these sites, at least 130 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 130 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 130 indicators are at least 1.01 times the statewide overall average.  #>  #> At 81% of these sites, at least 131 indicators are at least 10 times the statewide overall average.  #> At 94% of these sites, at least 131 indicators are at least 5 times the statewide overall average.  #> At 97% of these sites, at least 131 indicators are at least 3 times the statewide overall average.  #> At 97% of these sites, at least 131 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 131 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 131 indicators are at least 1.01 times the statewide overall average.  #>  #> At 81% of these sites, at least 132 indicators are at least 10 times the statewide overall average.  #> At 93% of these sites, at least 132 indicators are at least 5 times the statewide overall average.  #> At 96% of these sites, at least 132 indicators are at least 3 times the statewide overall average.  #> At 97% of these sites, at least 132 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 132 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 132 indicators are at least 1.01 times the statewide overall average.  #>  #> At 81% of these sites, at least 133 indicators are at least 10 times the statewide overall average.  #> At 93% of these sites, at least 133 indicators are at least 5 times the statewide overall average.  #> At 96% of these sites, at least 133 indicators are at least 3 times the statewide overall average.  #> At 97% of these sites, at least 133 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 133 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 133 indicators are at least 1.01 times the statewide overall average.  #>  #> At 80% of these sites, at least 134 indicators are at least 10 times the statewide overall average.  #> At 93% of these sites, at least 134 indicators are at least 5 times the statewide overall average.  #> At 96% of these sites, at least 134 indicators are at least 3 times the statewide overall average.  #> At 97% of these sites, at least 134 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 134 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 134 indicators are at least 1.01 times the statewide overall average.  #>  #> At 79% of these sites, at least 135 indicators are at least 10 times the statewide overall average.  #> At 93% of these sites, at least 135 indicators are at least 5 times the statewide overall average.  #> At 96% of these sites, at least 135 indicators are at least 3 times the statewide overall average.  #> At 97% of these sites, at least 135 indicators are at least 2 times the statewide overall average.  #> At 98% of these sites, at least 135 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 135 indicators are at least 1.01 times the statewide overall average.  #>  #> At 78% of these sites, at least 136 indicators are at least 10 times the statewide overall average.  #> At 93% of these sites, at least 136 indicators are at least 5 times the statewide overall average.  #> At 96% of these sites, at least 136 indicators are at least 3 times the statewide overall average.  #> At 97% of these sites, at least 136 indicators are at least 2 times the statewide overall average.  #> At 97% of these sites, at least 136 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 136 indicators are at least 1.01 times the statewide overall average.  #>  #> At 78% of these sites, at least 137 indicators are at least 10 times the statewide overall average.  #> At 92% of these sites, at least 137 indicators are at least 5 times the statewide overall average.  #> At 96% of these sites, at least 137 indicators are at least 3 times the statewide overall average.  #> At 97% of these sites, at least 137 indicators are at least 2 times the statewide overall average.  #> At 97% of these sites, at least 137 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 137 indicators are at least 1.01 times the statewide overall average.  #>  #> At 77% of these sites, at least 138 indicators are at least 10 times the statewide overall average.  #> At 91% of these sites, at least 138 indicators are at least 5 times the statewide overall average.  #> At 96% of these sites, at least 138 indicators are at least 3 times the statewide overall average.  #> At 97% of these sites, at least 138 indicators are at least 2 times the statewide overall average.  #> At 97% of these sites, at least 138 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 138 indicators are at least 1.01 times the statewide overall average.  #>  #> At 76% of these sites, at least 139 indicators are at least 10 times the statewide overall average.  #> At 91% of these sites, at least 139 indicators are at least 5 times the statewide overall average.  #> At 95% of these sites, at least 139 indicators are at least 3 times the statewide overall average.  #> At 97% of these sites, at least 139 indicators are at least 2 times the statewide overall average.  #> At 97% of these sites, at least 139 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 139 indicators are at least 1.01 times the statewide overall average.  #>  #> At 75% of these sites, at least 140 indicators are at least 10 times the statewide overall average.  #> At 90% of these sites, at least 140 indicators are at least 5 times the statewide overall average.  #> At 95% of these sites, at least 140 indicators are at least 3 times the statewide overall average.  #> At 97% of these sites, at least 140 indicators are at least 2 times the statewide overall average.  #> At 97% of these sites, at least 140 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 140 indicators are at least 1.01 times the statewide overall average.  #>  #> At 75% of these sites, at least 141 indicators are at least 10 times the statewide overall average.  #> At 90% of these sites, at least 141 indicators are at least 5 times the statewide overall average.  #> At 95% of these sites, at least 141 indicators are at least 3 times the statewide overall average.  #> At 97% of these sites, at least 141 indicators are at least 2 times the statewide overall average.  #> At 97% of these sites, at least 141 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 141 indicators are at least 1.01 times the statewide overall average.  #>  #> At 74% of these sites, at least 142 indicators are at least 10 times the statewide overall average.  #> At 90% of these sites, at least 142 indicators are at least 5 times the statewide overall average.  #> At 94% of these sites, at least 142 indicators are at least 3 times the statewide overall average.  #> At 97% of these sites, at least 142 indicators are at least 2 times the statewide overall average.  #> At 97% of these sites, at least 142 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 142 indicators are at least 1.01 times the statewide overall average.  #>  #> At 73% of these sites, at least 143 indicators are at least 10 times the statewide overall average.  #> At 89% of these sites, at least 143 indicators are at least 5 times the statewide overall average.  #> At 94% of these sites, at least 143 indicators are at least 3 times the statewide overall average.  #> At 97% of these sites, at least 143 indicators are at least 2 times the statewide overall average.  #> At 97% of these sites, at least 143 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 143 indicators are at least 1.01 times the statewide overall average.  #>  #> At 73% of these sites, at least 144 indicators are at least 10 times the statewide overall average.  #> At 89% of these sites, at least 144 indicators are at least 5 times the statewide overall average.  #> At 94% of these sites, at least 144 indicators are at least 3 times the statewide overall average.  #> At 97% of these sites, at least 144 indicators are at least 2 times the statewide overall average.  #> At 97% of these sites, at least 144 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 144 indicators are at least 1.01 times the statewide overall average.  #>  #> At 72% of these sites, at least 145 indicators are at least 10 times the statewide overall average.  #> At 88% of these sites, at least 145 indicators are at least 5 times the statewide overall average.  #> At 94% of these sites, at least 145 indicators are at least 3 times the statewide overall average.  #> At 96% of these sites, at least 145 indicators are at least 2 times the statewide overall average.  #> At 97% of these sites, at least 145 indicators are at least 1.5 times the statewide overall average.  #> At 98% of these sites, at least 145 indicators are at least 1.01 times the statewide overall average.  #>  #> At 72% of these sites, at least 146 indicators are at least 10 times the statewide overall average.  #> At 87% of these sites, at least 146 indicators are at least 5 times the statewide overall average.  #> At 93% of these sites, at least 146 indicators are at least 3 times the statewide overall average.  #> At 96% of these sites, at least 146 indicators are at least 2 times the statewide overall average.  #> At 97% of these sites, at least 146 indicators are at least 1.5 times the statewide overall average.  #> At 97% of these sites, at least 146 indicators are at least 1.01 times the statewide overall average.  #>  #> At 71% of these sites, at least 147 indicators are at least 10 times the statewide overall average.  #> At 87% of these sites, at least 147 indicators are at least 5 times the statewide overall average.  #> At 93% of these sites, at least 147 indicators are at least 3 times the statewide overall average.  #> At 96% of these sites, at least 147 indicators are at least 2 times the statewide overall average.  #> At 97% of these sites, at least 147 indicators are at least 1.5 times the statewide overall average.  #> At 97% of these sites, at least 147 indicators are at least 1.01 times the statewide overall average.  #>  #> At 71% of these sites, at least 148 indicators are at least 10 times the statewide overall average.  #> At 86% of these sites, at least 148 indicators are at least 5 times the statewide overall average.  #> At 93% of these sites, at least 148 indicators are at least 3 times the statewide overall average.  #> At 96% of these sites, at least 148 indicators are at least 2 times the statewide overall average.  #> At 97% of these sites, at least 148 indicators are at least 1.5 times the statewide overall average.  #> At 97% of these sites, at least 148 indicators are at least 1.01 times the statewide overall average.  #>  #> At 70% of these sites, at least 149 indicators are at least 10 times the statewide overall average.  #> At 86% of these sites, at least 149 indicators are at least 5 times the statewide overall average.  #> At 93% of these sites, at least 149 indicators are at least 3 times the statewide overall average.  #> At 96% of these sites, at least 149 indicators are at least 2 times the statewide overall average.  #> At 97% of these sites, at least 149 indicators are at least 1.5 times the statewide overall average.  #> At 97% of these sites, at least 149 indicators are at least 1.01 times the statewide overall average.  #>  #> At 69% of these sites, at least 150 indicators are at least 10 times the statewide overall average.  #> At 85% of these sites, at least 150 indicators are at least 5 times the statewide overall average.  #> At 92% of these sites, at least 150 indicators are at least 3 times the statewide overall average.  #> At 95% of these sites, at least 150 indicators are at least 2 times the statewide overall average.  #> At 97% of these sites, at least 150 indicators are at least 1.5 times the statewide overall average.  #> At 97% of these sites, at least 150 indicators are at least 1.01 times the statewide overall average.  #>  #> At 68% of these sites, at least 151 indicators are at least 10 times the statewide overall average.  #> At 85% of these sites, at least 151 indicators are at least 5 times the statewide overall average.  #> At 92% of these sites, at least 151 indicators are at least 3 times the statewide overall average.  #> At 95% of these sites, at least 151 indicators are at least 2 times the statewide overall average.  #> At 97% of these sites, at least 151 indicators are at least 1.5 times the statewide overall average.  #> At 97% of these sites, at least 151 indicators are at least 1.01 times the statewide overall average.  #>  #> At 68% of these sites, at least 152 indicators are at least 10 times the statewide overall average.  #> At 84% of these sites, at least 152 indicators are at least 5 times the statewide overall average.  #> At 92% of these sites, at least 152 indicators are at least 3 times the statewide overall average.  #> At 95% of these sites, at least 152 indicators are at least 2 times the statewide overall average.  #> At 97% of these sites, at least 152 indicators are at least 1.5 times the statewide overall average.  #> At 97% of these sites, at least 152 indicators are at least 1.01 times the statewide overall average.  #>  #> At 67% of these sites, at least 153 indicators are at least 10 times the statewide overall average.  #> At 83% of these sites, at least 153 indicators are at least 5 times the statewide overall average.  #> At 91% of these sites, at least 153 indicators are at least 3 times the statewide overall average.  #> At 95% of these sites, at least 153 indicators are at least 2 times the statewide overall average.  #> At 96% of these sites, at least 153 indicators are at least 1.5 times the statewide overall average.  #> At 97% of these sites, at least 153 indicators are at least 1.01 times the statewide overall average.  #>  #> At 66% of these sites, at least 154 indicators are at least 10 times the statewide overall average.  #> At 83% of these sites, at least 154 indicators are at least 5 times the statewide overall average.  #> At 91% of these sites, at least 154 indicators are at least 3 times the statewide overall average.  #> At 95% of these sites, at least 154 indicators are at least 2 times the statewide overall average.  #> At 96% of these sites, at least 154 indicators are at least 1.5 times the statewide overall average.  #> At 97% of these sites, at least 154 indicators are at least 1.01 times the statewide overall average.  #>  #> At 65% of these sites, at least 155 indicators are at least 10 times the statewide overall average.  #> At 82% of these sites, at least 155 indicators are at least 5 times the statewide overall average.  #> At 91% of these sites, at least 155 indicators are at least 3 times the statewide overall average.  #> At 94% of these sites, at least 155 indicators are at least 2 times the statewide overall average.  #> At 96% of these sites, at least 155 indicators are at least 1.5 times the statewide overall average.  #> At 97% of these sites, at least 155 indicators are at least 1.01 times the statewide overall average.  #>  #> At 64% of these sites, at least 156 indicators are at least 10 times the statewide overall average.  #> At 81% of these sites, at least 156 indicators are at least 5 times the statewide overall average.  #> At 91% of these sites, at least 156 indicators are at least 3 times the statewide overall average.  #> At 94% of these sites, at least 156 indicators are at least 2 times the statewide overall average.  #> At 96% of these sites, at least 156 indicators are at least 1.5 times the statewide overall average.  #> At 97% of these sites, at least 156 indicators are at least 1.01 times the statewide overall average.  #>  #> At 63% of these sites, at least 157 indicators are at least 10 times the statewide overall average.  #> At 81% of these sites, at least 157 indicators are at least 5 times the statewide overall average.  #> At 90% of these sites, at least 157 indicators are at least 3 times the statewide overall average.  #> At 94% of these sites, at least 157 indicators are at least 2 times the statewide overall average.  #> At 96% of these sites, at least 157 indicators are at least 1.5 times the statewide overall average.  #> At 97% of these sites, at least 157 indicators are at least 1.01 times the statewide overall average.  #>  #> At 61% of these sites, at least 158 indicators are at least 10 times the statewide overall average.  #> At 80% of these sites, at least 158 indicators are at least 5 times the statewide overall average.  #> At 89% of these sites, at least 158 indicators are at least 3 times the statewide overall average.  #> At 93% of these sites, at least 158 indicators are at least 2 times the statewide overall average.  #> At 96% of these sites, at least 158 indicators are at least 1.5 times the statewide overall average.  #> At 97% of these sites, at least 158 indicators are at least 1.01 times the statewide overall average.  #>  #> At 61% of these sites, at least 159 indicators are at least 10 times the statewide overall average.  #> At 79% of these sites, at least 159 indicators are at least 5 times the statewide overall average.  #> At 89% of these sites, at least 159 indicators are at least 3 times the statewide overall average.  #> At 93% of these sites, at least 159 indicators are at least 2 times the statewide overall average.  #> At 95% of these sites, at least 159 indicators are at least 1.5 times the statewide overall average.  #> At 97% of these sites, at least 159 indicators are at least 1.01 times the statewide overall average.  #>  #> At 60% of these sites, at least 160 indicators are at least 10 times the statewide overall average.  #> At 79% of these sites, at least 160 indicators are at least 5 times the statewide overall average.  #> At 88% of these sites, at least 160 indicators are at least 3 times the statewide overall average.  #> At 93% of these sites, at least 160 indicators are at least 2 times the statewide overall average.  #> At 95% of these sites, at least 160 indicators are at least 1.5 times the statewide overall average.  #> At 97% of these sites, at least 160 indicators are at least 1.01 times the statewide overall average.  #>  #> At 60% of these sites, at least 161 indicators are at least 10 times the statewide overall average.  #> At 78% of these sites, at least 161 indicators are at least 5 times the statewide overall average.  #> At 88% of these sites, at least 161 indicators are at least 3 times the statewide overall average.  #> At 93% of these sites, at least 161 indicators are at least 2 times the statewide overall average.  #> At 95% of these sites, at least 161 indicators are at least 1.5 times the statewide overall average.  #> At 97% of these sites, at least 161 indicators are at least 1.01 times the statewide overall average.  #>  #> At 59% of these sites, at least 162 indicators are at least 10 times the statewide overall average.  #> At 78% of these sites, at least 162 indicators are at least 5 times the statewide overall average.  #> At 87% of these sites, at least 162 indicators are at least 3 times the statewide overall average.  #> At 92% of these sites, at least 162 indicators are at least 2 times the statewide overall average.  #> At 95% of these sites, at least 162 indicators are at least 1.5 times the statewide overall average.  #> At 97% of these sites, at least 162 indicators are at least 1.01 times the statewide overall average.  #>  #> At 57% of these sites, at least 163 indicators are at least 10 times the statewide overall average.  #> At 77% of these sites, at least 163 indicators are at least 5 times the statewide overall average.  #> At 87% of these sites, at least 163 indicators are at least 3 times the statewide overall average.  #> At 92% of these sites, at least 163 indicators are at least 2 times the statewide overall average.  #> At 95% of these sites, at least 163 indicators are at least 1.5 times the statewide overall average.  #> At 97% of these sites, at least 163 indicators are at least 1.01 times the statewide overall average.  #>  #> At 56% of these sites, at least 164 indicators are at least 10 times the statewide overall average.  #> At 76% of these sites, at least 164 indicators are at least 5 times the statewide overall average.  #> At 86% of these sites, at least 164 indicators are at least 3 times the statewide overall average.  #> At 92% of these sites, at least 164 indicators are at least 2 times the statewide overall average.  #> At 94% of these sites, at least 164 indicators are at least 1.5 times the statewide overall average.  #> At 97% of these sites, at least 164 indicators are at least 1.01 times the statewide overall average.  #>  #> At 55% of these sites, at least 165 indicators are at least 10 times the statewide overall average.  #> At 75% of these sites, at least 165 indicators are at least 5 times the statewide overall average.  #> At 86% of these sites, at least 165 indicators are at least 3 times the statewide overall average.  #> At 91% of these sites, at least 165 indicators are at least 2 times the statewide overall average.  #> At 94% of these sites, at least 165 indicators are at least 1.5 times the statewide overall average.  #> At 97% of these sites, at least 165 indicators are at least 1.01 times the statewide overall average.  #>  #> At 54% of these sites, at least 166 indicators are at least 10 times the statewide overall average.  #> At 75% of these sites, at least 166 indicators are at least 5 times the statewide overall average.  #> At 85% of these sites, at least 166 indicators are at least 3 times the statewide overall average.  #> At 91% of these sites, at least 166 indicators are at least 2 times the statewide overall average.  #> At 94% of these sites, at least 166 indicators are at least 1.5 times the statewide overall average.  #> At 96% of these sites, at least 166 indicators are at least 1.01 times the statewide overall average.  #>  #> At 53% of these sites, at least 167 indicators are at least 10 times the statewide overall average.  #> At 74% of these sites, at least 167 indicators are at least 5 times the statewide overall average.  #> At 85% of these sites, at least 167 indicators are at least 3 times the statewide overall average.  #> At 90% of these sites, at least 167 indicators are at least 2 times the statewide overall average.  #> At 94% of these sites, at least 167 indicators are at least 1.5 times the statewide overall average.  #> At 96% of these sites, at least 167 indicators are at least 1.01 times the statewide overall average.  #>  #> At 52% of these sites, at least 168 indicators are at least 10 times the statewide overall average.  #> At 73% of these sites, at least 168 indicators are at least 5 times the statewide overall average.  #> At 84% of these sites, at least 168 indicators are at least 3 times the statewide overall average.  #> At 90% of these sites, at least 168 indicators are at least 2 times the statewide overall average.  #> At 93% of these sites, at least 168 indicators are at least 1.5 times the statewide overall average.  #> At 96% of these sites, at least 168 indicators are at least 1.01 times the statewide overall average.  #>  #> At 51% of these sites, at least 169 indicators are at least 10 times the statewide overall average.  #> At 73% of these sites, at least 169 indicators are at least 5 times the statewide overall average.  #> At 83% of these sites, at least 169 indicators are at least 3 times the statewide overall average.  #> At 89% of these sites, at least 169 indicators are at least 2 times the statewide overall average.  #> At 93% of these sites, at least 169 indicators are at least 1.5 times the statewide overall average.  #> At 96% of these sites, at least 169 indicators are at least 1.01 times the statewide overall average.  #>  #> At 50% of these sites, at least 170 indicators are at least 10 times the statewide overall average.  #> At 72% of these sites, at least 170 indicators are at least 5 times the statewide overall average.  #> At 83% of these sites, at least 170 indicators are at least 3 times the statewide overall average.  #> At 89% of these sites, at least 170 indicators are at least 2 times the statewide overall average.  #> At 93% of these sites, at least 170 indicators are at least 1.5 times the statewide overall average.  #> At 96% of these sites, at least 170 indicators are at least 1.01 times the statewide overall average.  #>  #> At 49% of these sites, at least 171 indicators are at least 10 times the statewide overall average.  #> At 72% of these sites, at least 171 indicators are at least 5 times the statewide overall average.  #> At 82% of these sites, at least 171 indicators are at least 3 times the statewide overall average.  #> At 89% of these sites, at least 171 indicators are at least 2 times the statewide overall average.  #> At 92% of these sites, at least 171 indicators are at least 1.5 times the statewide overall average.  #> At 96% of these sites, at least 171 indicators are at least 1.01 times the statewide overall average.  #>  #> At 47% of these sites, at least 172 indicators are at least 10 times the statewide overall average.  #> At 71% of these sites, at least 172 indicators are at least 5 times the statewide overall average.  #> At 82% of these sites, at least 172 indicators are at least 3 times the statewide overall average.  #> At 88% of these sites, at least 172 indicators are at least 2 times the statewide overall average.  #> At 92% of these sites, at least 172 indicators are at least 1.5 times the statewide overall average.  #> At 95% of these sites, at least 172 indicators are at least 1.01 times the statewide overall average.  #>  #> At 46% of these sites, at least 173 indicators are at least 10 times the statewide overall average.  #> At 70% of these sites, at least 173 indicators are at least 5 times the statewide overall average.  #> At 81% of these sites, at least 173 indicators are at least 3 times the statewide overall average.  #> At 88% of these sites, at least 173 indicators are at least 2 times the statewide overall average.  #> At 91% of these sites, at least 173 indicators are at least 1.5 times the statewide overall average.  #> At 95% of these sites, at least 173 indicators are at least 1.01 times the statewide overall average.  #>  #> At 45% of these sites, at least 174 indicators are at least 10 times the statewide overall average.  #> At 70% of these sites, at least 174 indicators are at least 5 times the statewide overall average.  #> At 80% of these sites, at least 174 indicators are at least 3 times the statewide overall average.  #> At 87% of these sites, at least 174 indicators are at least 2 times the statewide overall average.  #> At 91% of these sites, at least 174 indicators are at least 1.5 times the statewide overall average.  #> At 95% of these sites, at least 174 indicators are at least 1.01 times the statewide overall average.  #>  #> At 44% of these sites, at least 175 indicators are at least 10 times the statewide overall average.  #> At 69% of these sites, at least 175 indicators are at least 5 times the statewide overall average.  #> At 79% of these sites, at least 175 indicators are at least 3 times the statewide overall average.  #> At 86% of these sites, at least 175 indicators are at least 2 times the statewide overall average.  #> At 91% of these sites, at least 175 indicators are at least 1.5 times the statewide overall average.  #> At 95% of these sites, at least 175 indicators are at least 1.01 times the statewide overall average.  #>  #> At 43% of these sites, at least 176 indicators are at least 10 times the statewide overall average.  #> At 68% of these sites, at least 176 indicators are at least 5 times the statewide overall average.  #> At 79% of these sites, at least 176 indicators are at least 3 times the statewide overall average.  #> At 85% of these sites, at least 176 indicators are at least 2 times the statewide overall average.  #> At 90% of these sites, at least 176 indicators are at least 1.5 times the statewide overall average.  #> At 94% of these sites, at least 176 indicators are at least 1.01 times the statewide overall average.  #>  #> At 42% of these sites, at least 177 indicators are at least 10 times the statewide overall average.  #> At 68% of these sites, at least 177 indicators are at least 5 times the statewide overall average.  #> At 78% of these sites, at least 177 indicators are at least 3 times the statewide overall average.  #> At 85% of these sites, at least 177 indicators are at least 2 times the statewide overall average.  #> At 89% of these sites, at least 177 indicators are at least 1.5 times the statewide overall average.  #> At 94% of these sites, at least 177 indicators are at least 1.01 times the statewide overall average.  #>  #> At 41% of these sites, at least 178 indicators are at least 10 times the statewide overall average.  #> At 67% of these sites, at least 178 indicators are at least 5 times the statewide overall average.  #> At 77% of these sites, at least 178 indicators are at least 3 times the statewide overall average.  #> At 84% of these sites, at least 178 indicators are at least 2 times the statewide overall average.  #> At 89% of these sites, at least 178 indicators are at least 1.5 times the statewide overall average.  #> At 94% of these sites, at least 178 indicators are at least 1.01 times the statewide overall average.  #>  #> At 40% of these sites, at least 179 indicators are at least 10 times the statewide overall average.  #> At 66% of these sites, at least 179 indicators are at least 5 times the statewide overall average.  #> At 77% of these sites, at least 179 indicators are at least 3 times the statewide overall average.  #> At 84% of these sites, at least 179 indicators are at least 2 times the statewide overall average.  #> At 89% of these sites, at least 179 indicators are at least 1.5 times the statewide overall average.  #> At 94% of these sites, at least 179 indicators are at least 1.01 times the statewide overall average.  #>  #> At 39% of these sites, at least 180 indicators are at least 10 times the statewide overall average.  #> At 66% of these sites, at least 180 indicators are at least 5 times the statewide overall average.  #> At 76% of these sites, at least 180 indicators are at least 3 times the statewide overall average.  #> At 83% of these sites, at least 180 indicators are at least 2 times the statewide overall average.  #> At 88% of these sites, at least 180 indicators are at least 1.5 times the statewide overall average.  #> At 93% of these sites, at least 180 indicators are at least 1.01 times the statewide overall average.  #>  #> At 38% of these sites, at least 181 indicators are at least 10 times the statewide overall average.  #> At 64% of these sites, at least 181 indicators are at least 5 times the statewide overall average.  #> At 76% of these sites, at least 181 indicators are at least 3 times the statewide overall average.  #> At 83% of these sites, at least 181 indicators are at least 2 times the statewide overall average.  #> At 88% of these sites, at least 181 indicators are at least 1.5 times the statewide overall average.  #> At 93% of these sites, at least 181 indicators are at least 1.01 times the statewide overall average.  #>  #> At 37% of these sites, at least 182 indicators are at least 10 times the statewide overall average.  #> At 63% of these sites, at least 182 indicators are at least 5 times the statewide overall average.  #> At 75% of these sites, at least 182 indicators are at least 3 times the statewide overall average.  #> At 82% of these sites, at least 182 indicators are at least 2 times the statewide overall average.  #> At 87% of these sites, at least 182 indicators are at least 1.5 times the statewide overall average.  #> At 93% of these sites, at least 182 indicators are at least 1.01 times the statewide overall average.  #>  #> At 35% of these sites, at least 183 indicators are at least 10 times the statewide overall average.  #> At 62% of these sites, at least 183 indicators are at least 5 times the statewide overall average.  #> At 74% of these sites, at least 183 indicators are at least 3 times the statewide overall average.  #> At 82% of these sites, at least 183 indicators are at least 2 times the statewide overall average.  #> At 87% of these sites, at least 183 indicators are at least 1.5 times the statewide overall average.  #> At 93% of these sites, at least 183 indicators are at least 1.01 times the statewide overall average.  #>  #> At 34% of these sites, at least 184 indicators are at least 10 times the statewide overall average.  #> At 61% of these sites, at least 184 indicators are at least 5 times the statewide overall average.  #> At 74% of these sites, at least 184 indicators are at least 3 times the statewide overall average.  #> At 81% of these sites, at least 184 indicators are at least 2 times the statewide overall average.  #> At 86% of these sites, at least 184 indicators are at least 1.5 times the statewide overall average.  #> At 93% of these sites, at least 184 indicators are at least 1.01 times the statewide overall average.  #>  #> At 33% of these sites, at least 185 indicators are at least 10 times the statewide overall average.  #> At 59% of these sites, at least 185 indicators are at least 5 times the statewide overall average.  #> At 73% of these sites, at least 185 indicators are at least 3 times the statewide overall average.  #> At 80% of these sites, at least 185 indicators are at least 2 times the statewide overall average.  #> At 85% of these sites, at least 185 indicators are at least 1.5 times the statewide overall average.  #> At 92% of these sites, at least 185 indicators are at least 1.01 times the statewide overall average.  #>  #> At 32% of these sites, at least 186 indicators are at least 10 times the statewide overall average.  #> At 58% of these sites, at least 186 indicators are at least 5 times the statewide overall average.  #> At 72% of these sites, at least 186 indicators are at least 3 times the statewide overall average.  #> At 79% of these sites, at least 186 indicators are at least 2 times the statewide overall average.  #> At 85% of these sites, at least 186 indicators are at least 1.5 times the statewide overall average.  #> At 92% of these sites, at least 186 indicators are at least 1.01 times the statewide overall average.  #>  #> At 31% of these sites, at least 187 indicators are at least 10 times the statewide overall average.  #> At 57% of these sites, at least 187 indicators are at least 5 times the statewide overall average.  #> At 71% of these sites, at least 187 indicators are at least 3 times the statewide overall average.  #> At 78% of these sites, at least 187 indicators are at least 2 times the statewide overall average.  #> At 84% of these sites, at least 187 indicators are at least 1.5 times the statewide overall average.  #> At 91% of these sites, at least 187 indicators are at least 1.01 times the statewide overall average.  #>  #> At 30% of these sites, at least 188 indicators are at least 10 times the statewide overall average.  #> At 57% of these sites, at least 188 indicators are at least 5 times the statewide overall average.  #> At 71% of these sites, at least 188 indicators are at least 3 times the statewide overall average.  #> At 77% of these sites, at least 188 indicators are at least 2 times the statewide overall average.  #> At 84% of these sites, at least 188 indicators are at least 1.5 times the statewide overall average.  #> At 91% of these sites, at least 188 indicators are at least 1.01 times the statewide overall average.  #>  #> At 30% of these sites, at least 189 indicators are at least 10 times the statewide overall average.  #> At 55% of these sites, at least 189 indicators are at least 5 times the statewide overall average.  #> At 70% of these sites, at least 189 indicators are at least 3 times the statewide overall average.  #> At 77% of these sites, at least 189 indicators are at least 2 times the statewide overall average.  #> At 83% of these sites, at least 189 indicators are at least 1.5 times the statewide overall average.  #> At 90% of these sites, at least 189 indicators are at least 1.01 times the statewide overall average.  #>  #> At 29% of these sites, at least 190 indicators are at least 10 times the statewide overall average.  #> At 54% of these sites, at least 190 indicators are at least 5 times the statewide overall average.  #> At 69% of these sites, at least 190 indicators are at least 3 times the statewide overall average.  #> At 76% of these sites, at least 190 indicators are at least 2 times the statewide overall average.  #> At 82% of these sites, at least 190 indicators are at least 1.5 times the statewide overall average.  #> At 90% of these sites, at least 190 indicators are at least 1.01 times the statewide overall average.  #>  #> At 28% of these sites, at least 191 indicators are at least 10 times the statewide overall average.  #> At 52% of these sites, at least 191 indicators are at least 5 times the statewide overall average.  #> At 68% of these sites, at least 191 indicators are at least 3 times the statewide overall average.  #> At 76% of these sites, at least 191 indicators are at least 2 times the statewide overall average.  #> At 81% of these sites, at least 191 indicators are at least 1.5 times the statewide overall average.  #> At 89% of these sites, at least 191 indicators are at least 1.01 times the statewide overall average.  #>  #> At 26% of these sites, at least 192 indicators are at least 10 times the statewide overall average.  #> At 51% of these sites, at least 192 indicators are at least 5 times the statewide overall average.  #> At 68% of these sites, at least 192 indicators are at least 3 times the statewide overall average.  #> At 75% of these sites, at least 192 indicators are at least 2 times the statewide overall average.  #> At 80% of these sites, at least 192 indicators are at least 1.5 times the statewide overall average.  #> At 89% of these sites, at least 192 indicators are at least 1.01 times the statewide overall average.  #>  #> At 25% of these sites, at least 193 indicators are at least 10 times the statewide overall average.  #> At 50% of these sites, at least 193 indicators are at least 5 times the statewide overall average.  #> At 67% of these sites, at least 193 indicators are at least 3 times the statewide overall average.  #> At 74% of these sites, at least 193 indicators are at least 2 times the statewide overall average.  #> At 80% of these sites, at least 193 indicators are at least 1.5 times the statewide overall average.  #> At 88% of these sites, at least 193 indicators are at least 1.01 times the statewide overall average.  #>  #> At 23% of these sites, at least 194 indicators are at least 10 times the statewide overall average.  #> At 49% of these sites, at least 194 indicators are at least 5 times the statewide overall average.  #> At 66% of these sites, at least 194 indicators are at least 3 times the statewide overall average.  #> At 73% of these sites, at least 194 indicators are at least 2 times the statewide overall average.  #> At 79% of these sites, at least 194 indicators are at least 1.5 times the statewide overall average.  #> At 88% of these sites, at least 194 indicators are at least 1.01 times the statewide overall average.  #>  #> At 22% of these sites, at least 195 indicators are at least 10 times the statewide overall average.  #> At 48% of these sites, at least 195 indicators are at least 5 times the statewide overall average.  #> At 65% of these sites, at least 195 indicators are at least 3 times the statewide overall average.  #> At 72% of these sites, at least 195 indicators are at least 2 times the statewide overall average.  #> At 78% of these sites, at least 195 indicators are at least 1.5 times the statewide overall average.  #> At 87% of these sites, at least 195 indicators are at least 1.01 times the statewide overall average.  #>  #> At 22% of these sites, at least 196 indicators are at least 10 times the statewide overall average.  #> At 47% of these sites, at least 196 indicators are at least 5 times the statewide overall average.  #> At 63% of these sites, at least 196 indicators are at least 3 times the statewide overall average.  #> At 71% of these sites, at least 196 indicators are at least 2 times the statewide overall average.  #> At 78% of these sites, at least 196 indicators are at least 1.5 times the statewide overall average.  #> At 87% of these sites, at least 196 indicators are at least 1.01 times the statewide overall average.  #>  #> At 21% of these sites, at least 197 indicators are at least 10 times the statewide overall average.  #> At 46% of these sites, at least 197 indicators are at least 5 times the statewide overall average.  #> At 62% of these sites, at least 197 indicators are at least 3 times the statewide overall average.  #> At 71% of these sites, at least 197 indicators are at least 2 times the statewide overall average.  #> At 77% of these sites, at least 197 indicators are at least 1.5 times the statewide overall average.  #> At 86% of these sites, at least 197 indicators are at least 1.01 times the statewide overall average.  #>  #> At 20% of these sites, at least 198 indicators are at least 10 times the statewide overall average.  #> At 45% of these sites, at least 198 indicators are at least 5 times the statewide overall average.  #> At 60% of these sites, at least 198 indicators are at least 3 times the statewide overall average.  #> At 70% of these sites, at least 198 indicators are at least 2 times the statewide overall average.  #> At 76% of these sites, at least 198 indicators are at least 1.5 times the statewide overall average.  #> At 86% of these sites, at least 198 indicators are at least 1.01 times the statewide overall average.  #>  #> At 20% of these sites, at least 199 indicators are at least 10 times the statewide overall average.  #> At 43% of these sites, at least 199 indicators are at least 5 times the statewide overall average.  #> At 59% of these sites, at least 199 indicators are at least 3 times the statewide overall average.  #> At 69% of these sites, at least 199 indicators are at least 2 times the statewide overall average.  #> At 75% of these sites, at least 199 indicators are at least 1.5 times the statewide overall average.  #> At 86% of these sites, at least 199 indicators are at least 1.01 times the statewide overall average.  #>  #> At 19% of these sites, at least 200 indicators are at least 10 times the statewide overall average.  #> At 42% of these sites, at least 200 indicators are at least 5 times the statewide overall average.  #> At 58% of these sites, at least 200 indicators are at least 3 times the statewide overall average.  #> At 68% of these sites, at least 200 indicators are at least 2 times the statewide overall average.  #> At 75% of these sites, at least 200 indicators are at least 1.5 times the statewide overall average.  #> At 84% of these sites, at least 200 indicators are at least 1.01 times the statewide overall average.  #>  #> At 18% of these sites, at least 201 indicators are at least 10 times the statewide overall average.  #> At 41% of these sites, at least 201 indicators are at least 5 times the statewide overall average.  #> At 57% of these sites, at least 201 indicators are at least 3 times the statewide overall average.  #> At 68% of these sites, at least 201 indicators are at least 2 times the statewide overall average.  #> At 74% of these sites, at least 201 indicators are at least 1.5 times the statewide overall average.  #> At 84% of these sites, at least 201 indicators are at least 1.01 times the statewide overall average.  #>  #> At 18% of these sites, at least 202 indicators are at least 10 times the statewide overall average.  #> At 39% of these sites, at least 202 indicators are at least 5 times the statewide overall average.  #> At 56% of these sites, at least 202 indicators are at least 3 times the statewide overall average.  #> At 67% of these sites, at least 202 indicators are at least 2 times the statewide overall average.  #> At 73% of these sites, at least 202 indicators are at least 1.5 times the statewide overall average.  #> At 83% of these sites, at least 202 indicators are at least 1.01 times the statewide overall average.  #>  #> At 17% of these sites, at least 203 indicators are at least 10 times the statewide overall average.  #> At 38% of these sites, at least 203 indicators are at least 5 times the statewide overall average.  #> At 54% of these sites, at least 203 indicators are at least 3 times the statewide overall average.  #> At 66% of these sites, at least 203 indicators are at least 2 times the statewide overall average.  #> At 72% of these sites, at least 203 indicators are at least 1.5 times the statewide overall average.  #> At 82% of these sites, at least 203 indicators are at least 1.01 times the statewide overall average.  #>  #> At 16% of these sites, at least 204 indicators are at least 10 times the statewide overall average.  #> At 37% of these sites, at least 204 indicators are at least 5 times the statewide overall average.  #> At 52% of these sites, at least 204 indicators are at least 3 times the statewide overall average.  #> At 64% of these sites, at least 204 indicators are at least 2 times the statewide overall average.  #> At 72% of these sites, at least 204 indicators are at least 1.5 times the statewide overall average.  #> At 82% of these sites, at least 204 indicators are at least 1.01 times the statewide overall average.  #>  #> At 15% of these sites, at least 205 indicators are at least 10 times the statewide overall average.  #> At 35% of these sites, at least 205 indicators are at least 5 times the statewide overall average.  #> At 51% of these sites, at least 205 indicators are at least 3 times the statewide overall average.  #> At 63% of these sites, at least 205 indicators are at least 2 times the statewide overall average.  #> At 70% of these sites, at least 205 indicators are at least 1.5 times the statewide overall average.  #> At 80% of these sites, at least 205 indicators are at least 1.01 times the statewide overall average.  #>  #> At 15% of these sites, at least 206 indicators are at least 10 times the statewide overall average.  #> At 35% of these sites, at least 206 indicators are at least 5 times the statewide overall average.  #> At 50% of these sites, at least 206 indicators are at least 3 times the statewide overall average.  #> At 62% of these sites, at least 206 indicators are at least 2 times the statewide overall average.  #> At 69% of these sites, at least 206 indicators are at least 1.5 times the statewide overall average.  #> At 80% of these sites, at least 206 indicators are at least 1.01 times the statewide overall average.  #>  #> At 14% of these sites, at least 207 indicators are at least 10 times the statewide overall average.  #> At 33% of these sites, at least 207 indicators are at least 5 times the statewide overall average.  #> At 49% of these sites, at least 207 indicators are at least 3 times the statewide overall average.  #> At 61% of these sites, at least 207 indicators are at least 2 times the statewide overall average.  #> At 69% of these sites, at least 207 indicators are at least 1.5 times the statewide overall average.  #> At 79% of these sites, at least 207 indicators are at least 1.01 times the statewide overall average.  #>  #> At 13% of these sites, at least 208 indicators are at least 10 times the statewide overall average.  #> At 32% of these sites, at least 208 indicators are at least 5 times the statewide overall average.  #> At 47% of these sites, at least 208 indicators are at least 3 times the statewide overall average.  #> At 59% of these sites, at least 208 indicators are at least 2 times the statewide overall average.  #> At 68% of these sites, at least 208 indicators are at least 1.5 times the statewide overall average.  #> At 79% of these sites, at least 208 indicators are at least 1.01 times the statewide overall average.  #>  #> At 12% of these sites, at least 209 indicators are at least 10 times the statewide overall average.  #> At 31% of these sites, at least 209 indicators are at least 5 times the statewide overall average.  #> At 45% of these sites, at least 209 indicators are at least 3 times the statewide overall average.  #> At 58% of these sites, at least 209 indicators are at least 2 times the statewide overall average.  #> At 66% of these sites, at least 209 indicators are at least 1.5 times the statewide overall average.  #> At 78% of these sites, at least 209 indicators are at least 1.01 times the statewide overall average.  #>  #> At 11% of these sites, at least 210 indicators are at least 10 times the statewide overall average.  #> At 29% of these sites, at least 210 indicators are at least 5 times the statewide overall average.  #> At 44% of these sites, at least 210 indicators are at least 3 times the statewide overall average.  #> At 56% of these sites, at least 210 indicators are at least 2 times the statewide overall average.  #> At 65% of these sites, at least 210 indicators are at least 1.5 times the statewide overall average.  #> At 77% of these sites, at least 210 indicators are at least 1.01 times the statewide overall average.  #>  #> At 10% of these sites, at least 211 indicators are at least 10 times the statewide overall average.  #> At 28% of these sites, at least 211 indicators are at least 5 times the statewide overall average.  #> At 43% of these sites, at least 211 indicators are at least 3 times the statewide overall average.  #> At 54% of these sites, at least 211 indicators are at least 2 times the statewide overall average.  #> At 64% of these sites, at least 211 indicators are at least 1.5 times the statewide overall average.  #> At 76% of these sites, at least 211 indicators are at least 1.01 times the statewide overall average.  #>  #> At 10% of these sites, at least 212 indicators are at least 10 times the statewide overall average.  #> At 27% of these sites, at least 212 indicators are at least 5 times the statewide overall average.  #> At 41% of these sites, at least 212 indicators are at least 3 times the statewide overall average.  #> At 52% of these sites, at least 212 indicators are at least 2 times the statewide overall average.  #> At 62% of these sites, at least 212 indicators are at least 1.5 times the statewide overall average.  #> At 75% of these sites, at least 212 indicators are at least 1.01 times the statewide overall average.  #>  #> At 9% of these sites, at least 213 indicators are at least 10 times the statewide overall average.  #> At 25% of these sites, at least 213 indicators are at least 5 times the statewide overall average.  #> At 40% of these sites, at least 213 indicators are at least 3 times the statewide overall average.  #> At 51% of these sites, at least 213 indicators are at least 2 times the statewide overall average.  #> At 61% of these sites, at least 213 indicators are at least 1.5 times the statewide overall average.  #> At 75% of these sites, at least 213 indicators are at least 1.01 times the statewide overall average.  #>  #> At 8% of these sites, at least 214 indicators are at least 10 times the statewide overall average.  #> At 24% of these sites, at least 214 indicators are at least 5 times the statewide overall average.  #> At 38% of these sites, at least 214 indicators are at least 3 times the statewide overall average.  #> At 48% of these sites, at least 214 indicators are at least 2 times the statewide overall average.  #> At 60% of these sites, at least 214 indicators are at least 1.5 times the statewide overall average.  #> At 75% of these sites, at least 214 indicators are at least 1.01 times the statewide overall average.  #>  #> At 7% of these sites, at least 215 indicators are at least 10 times the statewide overall average.  #> At 23% of these sites, at least 215 indicators are at least 5 times the statewide overall average.  #> At 37% of these sites, at least 215 indicators are at least 3 times the statewide overall average.  #> At 47% of these sites, at least 215 indicators are at least 2 times the statewide overall average.  #> At 58% of these sites, at least 215 indicators are at least 1.5 times the statewide overall average.  #> At 74% of these sites, at least 215 indicators are at least 1.01 times the statewide overall average.  #>  #> At 7% of these sites, at least 216 indicators are at least 10 times the statewide overall average.  #> At 21% of these sites, at least 216 indicators are at least 5 times the statewide overall average.  #> At 34% of these sites, at least 216 indicators are at least 3 times the statewide overall average.  #> At 45% of these sites, at least 216 indicators are at least 2 times the statewide overall average.  #> At 57% of these sites, at least 216 indicators are at least 1.5 times the statewide overall average.  #> At 73% of these sites, at least 216 indicators are at least 1.01 times the statewide overall average.  #>  #> At 6% of these sites, at least 217 indicators are at least 10 times the statewide overall average.  #> At 20% of these sites, at least 217 indicators are at least 5 times the statewide overall average.  #> At 33% of these sites, at least 217 indicators are at least 3 times the statewide overall average.  #> At 44% of these sites, at least 217 indicators are at least 2 times the statewide overall average.  #> At 55% of these sites, at least 217 indicators are at least 1.5 times the statewide overall average.  #> At 72% of these sites, at least 217 indicators are at least 1.01 times the statewide overall average.  #>  #> At 4% of these sites, at least 218 indicators are at least 10 times the statewide overall average.  #> At 19% of these sites, at least 218 indicators are at least 5 times the statewide overall average.  #> At 31% of these sites, at least 218 indicators are at least 3 times the statewide overall average.  #> At 42% of these sites, at least 218 indicators are at least 2 times the statewide overall average.  #> At 53% of these sites, at least 218 indicators are at least 1.5 times the statewide overall average.  #> At 71% of these sites, at least 218 indicators are at least 1.01 times the statewide overall average.  #>  #> At 3% of these sites, at least 219 indicators are at least 10 times the statewide overall average.  #> At 18% of these sites, at least 219 indicators are at least 5 times the statewide overall average.  #> At 29% of these sites, at least 219 indicators are at least 3 times the statewide overall average.  #> At 40% of these sites, at least 219 indicators are at least 2 times the statewide overall average.  #> At 52% of these sites, at least 219 indicators are at least 1.5 times the statewide overall average.  #> At 70% of these sites, at least 219 indicators are at least 1.01 times the statewide overall average.  #>  #> At 3% of these sites, at least 220 indicators are at least 10 times the statewide overall average.  #> At 17% of these sites, at least 220 indicators are at least 5 times the statewide overall average.  #> At 28% of these sites, at least 220 indicators are at least 3 times the statewide overall average.  #> At 39% of these sites, at least 220 indicators are at least 2 times the statewide overall average.  #> At 50% of these sites, at least 220 indicators are at least 1.5 times the statewide overall average.  #> At 69% of these sites, at least 220 indicators are at least 1.01 times the statewide overall average.  #>  #> At 2% of these sites, at least 221 indicators are at least 10 times the statewide overall average.  #> At 15% of these sites, at least 221 indicators are at least 5 times the statewide overall average.  #> At 26% of these sites, at least 221 indicators are at least 3 times the statewide overall average.  #> At 37% of these sites, at least 221 indicators are at least 2 times the statewide overall average.  #> At 48% of these sites, at least 221 indicators are at least 1.5 times the statewide overall average.  #> At 68% of these sites, at least 221 indicators are at least 1.01 times the statewide overall average.  #>  #> At 1% of these sites, at least 222 indicators are at least 10 times the statewide overall average.  #> At 14% of these sites, at least 222 indicators are at least 5 times the statewide overall average.  #> At 25% of these sites, at least 222 indicators are at least 3 times the statewide overall average.  #> At 35% of these sites, at least 222 indicators are at least 2 times the statewide overall average.  #> At 47% of these sites, at least 222 indicators are at least 1.5 times the statewide overall average.  #> At 67% of these sites, at least 222 indicators are at least 1.01 times the statewide overall average.  #>  #> At 1% of these sites, at least 223 indicators are at least 10 times the statewide overall average.  #> At 12% of these sites, at least 223 indicators are at least 5 times the statewide overall average.  #> At 23% of these sites, at least 223 indicators are at least 3 times the statewide overall average.  #> At 34% of these sites, at least 223 indicators are at least 2 times the statewide overall average.  #> At 45% of these sites, at least 223 indicators are at least 1.5 times the statewide overall average.  #> At 65% of these sites, at least 223 indicators are at least 1.01 times the statewide overall average.  #>  #> At 11% of these sites, at least 224 indicators are at least 5 times the statewide overall average.  #> At 22% of these sites, at least 224 indicators are at least 3 times the statewide overall average.  #> At 32% of these sites, at least 224 indicators are at least 2 times the statewide overall average.  #> At 43% of these sites, at least 224 indicators are at least 1.5 times the statewide overall average.  #> At 65% of these sites, at least 224 indicators are at least 1.01 times the statewide overall average.  #>  #> At 10% of these sites, at least 225 indicators are at least 5 times the statewide overall average.  #> At 20% of these sites, at least 225 indicators are at least 3 times the statewide overall average.  #> At 30% of these sites, at least 225 indicators are at least 2 times the statewide overall average.  #> At 42% of these sites, at least 225 indicators are at least 1.5 times the statewide overall average.  #> At 63% of these sites, at least 225 indicators are at least 1.01 times the statewide overall average.  #>  #> At 9% of these sites, at least 226 indicators are at least 5 times the statewide overall average.  #> At 18% of these sites, at least 226 indicators are at least 3 times the statewide overall average.  #> At 28% of these sites, at least 226 indicators are at least 2 times the statewide overall average.  #> At 40% of these sites, at least 226 indicators are at least 1.5 times the statewide overall average.  #> At 62% of these sites, at least 226 indicators are at least 1.01 times the statewide overall average.  #>  #> At 8% of these sites, at least 227 indicators are at least 5 times the statewide overall average.  #> At 17% of these sites, at least 227 indicators are at least 3 times the statewide overall average.  #> At 26% of these sites, at least 227 indicators are at least 2 times the statewide overall average.  #> At 38% of these sites, at least 227 indicators are at least 1.5 times the statewide overall average.  #> At 61% of these sites, at least 227 indicators are at least 1.01 times the statewide overall average.  #>  #> At 6% of these sites, at least 228 indicators are at least 5 times the statewide overall average.  #> At 16% of these sites, at least 228 indicators are at least 3 times the statewide overall average.  #> At 25% of these sites, at least 228 indicators are at least 2 times the statewide overall average.  #> At 36% of these sites, at least 228 indicators are at least 1.5 times the statewide overall average.  #> At 60% of these sites, at least 228 indicators are at least 1.01 times the statewide overall average.  #>  #> At 4% of these sites, at least 229 indicators are at least 5 times the statewide overall average.  #> At 15% of these sites, at least 229 indicators are at least 3 times the statewide overall average.  #> At 23% of these sites, at least 229 indicators are at least 2 times the statewide overall average.  #> At 35% of these sites, at least 229 indicators are at least 1.5 times the statewide overall average.  #> At 59% of these sites, at least 229 indicators are at least 1.01 times the statewide overall average.  #>  #> At 3% of these sites, at least 230 indicators are at least 5 times the statewide overall average.  #> At 13% of these sites, at least 230 indicators are at least 3 times the statewide overall average.  #> At 22% of these sites, at least 230 indicators are at least 2 times the statewide overall average.  #> At 33% of these sites, at least 230 indicators are at least 1.5 times the statewide overall average.  #> At 57% of these sites, at least 230 indicators are at least 1.01 times the statewide overall average.  #>  #> At 2% of these sites, at least 231 indicators are at least 5 times the statewide overall average.  #> At 11% of these sites, at least 231 indicators are at least 3 times the statewide overall average.  #> At 21% of these sites, at least 231 indicators are at least 2 times the statewide overall average.  #> At 32% of these sites, at least 231 indicators are at least 1.5 times the statewide overall average.  #> At 56% of these sites, at least 231 indicators are at least 1.01 times the statewide overall average.  #>  #> At 2% of these sites, at least 232 indicators are at least 5 times the statewide overall average.  #> At 10% of these sites, at least 232 indicators are at least 3 times the statewide overall average.  #> At 19% of these sites, at least 232 indicators are at least 2 times the statewide overall average.  #> At 30% of these sites, at least 232 indicators are at least 1.5 times the statewide overall average.  #> At 54% of these sites, at least 232 indicators are at least 1.01 times the statewide overall average.  #>  #> At 1% of these sites, at least 233 indicators are at least 5 times the statewide overall average.  #> At 9% of these sites, at least 233 indicators are at least 3 times the statewide overall average.  #> At 18% of these sites, at least 233 indicators are at least 2 times the statewide overall average.  #> At 29% of these sites, at least 233 indicators are at least 1.5 times the statewide overall average.  #> At 53% of these sites, at least 233 indicators are at least 1.01 times the statewide overall average.  #>  #> At 1% of these sites, at least 234 indicators are at least 5 times the statewide overall average.  #> At 7% of these sites, at least 234 indicators are at least 3 times the statewide overall average.  #> At 16% of these sites, at least 234 indicators are at least 2 times the statewide overall average.  #> At 28% of these sites, at least 234 indicators are at least 1.5 times the statewide overall average.  #> At 51% of these sites, at least 234 indicators are at least 1.01 times the statewide overall average.  #>  #> At 6% of these sites, at least 235 indicators are at least 3 times the statewide overall average.  #> At 15% of these sites, at least 235 indicators are at least 2 times the statewide overall average.  #> At 26% of these sites, at least 235 indicators are at least 1.5 times the statewide overall average.  #> At 50% of these sites, at least 235 indicators are at least 1.01 times the statewide overall average.  #>  #> At 5% of these sites, at least 236 indicators are at least 3 times the statewide overall average.  #> At 14% of these sites, at least 236 indicators are at least 2 times the statewide overall average.  #> At 25% of these sites, at least 236 indicators are at least 1.5 times the statewide overall average.  #> At 48% of these sites, at least 236 indicators are at least 1.01 times the statewide overall average.  #>  #> At 4% of these sites, at least 237 indicators are at least 3 times the statewide overall average.  #> At 13% of these sites, at least 237 indicators are at least 2 times the statewide overall average.  #> At 23% of these sites, at least 237 indicators are at least 1.5 times the statewide overall average.  #> At 47% of these sites, at least 237 indicators are at least 1.01 times the statewide overall average.  #>  #> At 3% of these sites, at least 238 indicators are at least 3 times the statewide overall average.  #> At 12% of these sites, at least 238 indicators are at least 2 times the statewide overall average.  #> At 21% of these sites, at least 238 indicators are at least 1.5 times the statewide overall average.  #> At 45% of these sites, at least 238 indicators are at least 1.01 times the statewide overall average.  #>  #> At 2% of these sites, at least 239 indicators are at least 3 times the statewide overall average.  #> At 11% of these sites, at least 239 indicators are at least 2 times the statewide overall average.  #> At 20% of these sites, at least 239 indicators are at least 1.5 times the statewide overall average.  #> At 43% of these sites, at least 239 indicators are at least 1.01 times the statewide overall average.  #>  #> At 1% of these sites, at least 240 indicators are at least 3 times the statewide overall average.  #> At 9% of these sites, at least 240 indicators are at least 2 times the statewide overall average.  #> At 19% of these sites, at least 240 indicators are at least 1.5 times the statewide overall average.  #> At 42% of these sites, at least 240 indicators are at least 1.01 times the statewide overall average.  #>  #> At 1% of these sites, at least 241 indicators are at least 3 times the statewide overall average.  #> At 8% of these sites, at least 241 indicators are at least 2 times the statewide overall average.  #> At 18% of these sites, at least 241 indicators are at least 1.5 times the statewide overall average.  #> At 41% of these sites, at least 241 indicators are at least 1.01 times the statewide overall average.  #>  #> At 7% of these sites, at least 242 indicators are at least 2 times the statewide overall average.  #> At 16% of these sites, at least 242 indicators are at least 1.5 times the statewide overall average.  #> At 39% of these sites, at least 242 indicators are at least 1.01 times the statewide overall average.  #>  #> At 6% of these sites, at least 243 indicators are at least 2 times the statewide overall average.  #> At 16% of these sites, at least 243 indicators are at least 1.5 times the statewide overall average.  #> At 37% of these sites, at least 243 indicators are at least 1.01 times the statewide overall average.  #>  #> At 4% of these sites, at least 244 indicators are at least 2 times the statewide overall average.  #> At 15% of these sites, at least 244 indicators are at least 1.5 times the statewide overall average.  #> At 37% of these sites, at least 244 indicators are at least 1.01 times the statewide overall average.  #>  #> At 4% of these sites, at least 245 indicators are at least 2 times the statewide overall average.  #> At 14% of these sites, at least 245 indicators are at least 1.5 times the statewide overall average.  #> At 36% of these sites, at least 245 indicators are at least 1.01 times the statewide overall average.  #>  #> At 3% of these sites, at least 246 indicators are at least 2 times the statewide overall average.  #> At 12% of these sites, at least 246 indicators are at least 1.5 times the statewide overall average.  #> At 34% of these sites, at least 246 indicators are at least 1.01 times the statewide overall average.  #>  #> At 2% of these sites, at least 247 indicators are at least 2 times the statewide overall average.  #> At 12% of these sites, at least 247 indicators are at least 1.5 times the statewide overall average.  #> At 33% of these sites, at least 247 indicators are at least 1.01 times the statewide overall average.  #>  #> At 2% of these sites, at least 248 indicators are at least 2 times the statewide overall average.  #> At 10% of these sites, at least 248 indicators are at least 1.5 times the statewide overall average.  #> At 31% of these sites, at least 248 indicators are at least 1.01 times the statewide overall average.  #>  #> At 2% of these sites, at least 249 indicators are at least 2 times the statewide overall average.  #> At 9% of these sites, at least 249 indicators are at least 1.5 times the statewide overall average.  #> At 29% of these sites, at least 249 indicators are at least 1.01 times the statewide overall average.  #>  #> At 2% of these sites, at least 250 indicators are at least 2 times the statewide overall average.  #> At 8% of these sites, at least 250 indicators are at least 1.5 times the statewide overall average.  #> At 29% of these sites, at least 250 indicators are at least 1.01 times the statewide overall average.  #>  #> At 1% of these sites, at least 251 indicators are at least 2 times the statewide overall average.  #> At 8% of these sites, at least 251 indicators are at least 1.5 times the statewide overall average.  #> At 28% of these sites, at least 251 indicators are at least 1.01 times the statewide overall average.  #>  #> At 1% of these sites, at least 252 indicators are at least 2 times the statewide overall average.  #> At 7% of these sites, at least 252 indicators are at least 1.5 times the statewide overall average.  #> At 26% of these sites, at least 252 indicators are at least 1.01 times the statewide overall average.  #>  #> At 1% of these sites, at least 253 indicators are at least 2 times the statewide overall average.  #> At 6% of these sites, at least 253 indicators are at least 1.5 times the statewide overall average.  #> At 25% of these sites, at least 253 indicators are at least 1.01 times the statewide overall average.  #>  #> At 5% of these sites, at least 254 indicators are at least 1.5 times the statewide overall average.  #> At 24% of these sites, at least 254 indicators are at least 1.01 times the statewide overall average.  #>  #> At 5% of these sites, at least 255 indicators are at least 1.5 times the statewide overall average.  #> At 22% of these sites, at least 255 indicators are at least 1.01 times the statewide overall average.  #>  #> At 4% of these sites, at least 256 indicators are at least 1.5 times the statewide overall average.  #> At 21% of these sites, at least 256 indicators are at least 1.01 times the statewide overall average.  #>  #> At 3% of these sites, at least 257 indicators are at least 1.5 times the statewide overall average.  #> At 20% of these sites, at least 257 indicators are at least 1.01 times the statewide overall average.  #>  #> At 3% of these sites, at least 258 indicators are at least 1.5 times the statewide overall average.  #> At 19% of these sites, at least 258 indicators are at least 1.01 times the statewide overall average.  #>  #> At 2% of these sites, at least 259 indicators are at least 1.5 times the statewide overall average.  #> At 18% of these sites, at least 259 indicators are at least 1.01 times the statewide overall average.  #>  #> At 2% of these sites, at least 260 indicators are at least 1.5 times the statewide overall average.  #> At 17% of these sites, at least 260 indicators are at least 1.01 times the statewide overall average.  #>  #> At 2% of these sites, at least 261 indicators are at least 1.5 times the statewide overall average.  #> At 17% of these sites, at least 261 indicators are at least 1.01 times the statewide overall average.  #>  #> At 1% of these sites, at least 262 indicators are at least 1.5 times the statewide overall average.  #> At 16% of these sites, at least 262 indicators are at least 1.01 times the statewide overall average.  #>  #> At 1% of these sites, at least 263 indicators are at least 1.5 times the statewide overall average.  #> At 15% of these sites, at least 263 indicators are at least 1.01 times the statewide overall average.  #>  #> At 1% of these sites, at least 264 indicators are at least 1.5 times the statewide overall average.  #> At 14% of these sites, at least 264 indicators are at least 1.01 times the statewide overall average.  #>  #> At 13% of these sites, at least 265 indicators are at least 1.01 times the statewide overall average.  #>  #> At 11% of these sites, at least 266 indicators are at least 1.01 times the statewide overall average.  #>  #> At 10% of these sites, at least 267 indicators are at least 1.01 times the statewide overall average.  #>  #> At 10% of these sites, at least 268 indicators are at least 1.01 times the statewide overall average.  #>  #> At 8% of these sites, at least 269 indicators are at least 1.01 times the statewide overall average.  #>  #> At 8% of these sites, at least 270 indicators are at least 1.01 times the statewide overall average.  #>  #> At 7% of these sites, at least 271 indicators are at least 1.01 times the statewide overall average.  #>  #> At 6% of these sites, at least 272 indicators are at least 1.01 times the statewide overall average.  #>  #> At 5% of these sites, at least 273 indicators are at least 1.01 times the statewide overall average.  #>  #> At 5% of these sites, at least 274 indicators are at least 1.01 times the statewide overall average.  #>  #> At 4% of these sites, at least 275 indicators are at least 1.01 times the statewide overall average.  #>  #> At 3% of these sites, at least 276 indicators are at least 1.01 times the statewide overall average.  #>  #> At 2% of these sites, at least 277 indicators are at least 1.01 times the statewide overall average.  #>  #> At 2% of these sites, at least 278 indicators are at least 1.01 times the statewide overall average.  #>  #> At 1% of these sites, at least 279 indicators are at least 1.01 times the statewide overall average.  #>  #> At 1% of these sites, at least 280 indicators are at least 1.01 times the statewide overall average.  #>  #> At 1% of these sites, at least 281 indicators are at least 1.01 times the statewide overall average. dimnames(findings) #> NULL findings$text[2] #> [1] \"At 100% of these sites, at least 1 indicator is at least 1.01 times the statewide overall average.\" head(findings$stats[ , , 1], 15) #>      cut #> count 1.01 1.5 2 3 5 10 #>    0     0   0 0 0 0  0 #>    1     0   0 0 0 0  0 #>    2     0   0 0 0 0  0 #>    3     0   0 0 0 0  0 #>    4     0   0 0 0 0  0 #>    5     0   0 0 0 0  0 #>    6     0   0 0 0 0  0 #>    7     0   0 0 0 0  0 #>    8     0   0 0 0 0  0 #>    9     0   0 0 0 0  0 #>    10    0   0 0 0 0  0 #>    11    0   0 0 0 0  0 #>    12    0   0 0 0 0  0 #>    13    0   0 0 0 0 10 #>    14    0   0 0 0 1  7 head(findings$stats[ , 1, ], 21) #>      stat #> count count cum pct cum_pct #>    0      0 987   0     100 #>    1      0 987   0     100 #>    2      0 987   0     100 #>    3      0 987   0     100 #>    4      0 987   0     100 #>    5      0 987   0     100 #>    6      0 987   0     100 #>    7      0 987   0     100 #>    8      0 987   0     100 #>    9      0 987   0     100 #>    10     0 987   0     100 #>    11     0 987   0     100 #>    12     0 987   0     100 #>    13     0 987   0     100 #>    14     0 987   0     100 #>    15     0 987   0     100 #>    16     0 987   0     100 #>    17     0 987   0     100 #>    18     1 987   0     100 #>    19     3 986   0     100 #>    20     6 983   1     100 x = findings$stats[ , 1, ]  x[x[, \"cum_pct\"] >= 50 & x[, \"cum_pct\"] <= 80, ] #>      stat #> count count cum pct cum_pct #>   205     4 794   0      80 #>   206    10 790   1      80 #>   207     5 780   1      79 #>   208     9 775   1      79 #>   209     6 766   1      78 #>   210     6 760   1      77 #>   211     9 754   1      76 #>   212     3 745   0      75 #>   213     5 742   1      75 #>   214     9 737   1      75 #>   215     6 728   1      74 #>   216    11 722   1      73 #>   217    10 711   1      72 #>   218    10 701   1      71 #>   219     7 691   1      70 #>   220    13 684   1      69 #>   221    14 671   1      68 #>   222    11 657   1      67 #>   223     7 646   1      65 #>   224    14 639   1      65 #>   225    10 625   1      63 #>   226    12 615   1      62 #>   227     7 603   1      61 #>   228    14 596   1      60 #>   229    20 582   2      59 #>   230    12 562   1      57 #>   231    18 550   2      56 #>   232    10 532   1      54 #>   233    16 522   2      53 #>   234    17 506   2      51 #>   235    17 489   2      50 findings$stats[ 1, , ] #>       stat #> cut    count cum pct cum_pct #>   1.01     0 987   0     100 #>   1.5      0 987   0     100 #>   2        0 987   0     100 #>   3        0 987   0     100 #>   5        0 987   0     100 #>   10       0 987   0     100"},{"path":[]},{"path":[]},{"path":"/articles/3_analyzing.html","id":"getblocksnearby-will-find-residentsblocks-that-are-within-specified-distance","dir":"Articles","previous_headings":"DETAILS OF BLOCKS NEAR ONE SITE","what":"getblocksnearby() will find residents/blocks that are within specified distance","title":"3. Basics of Using EJAM for Analysis in RStudio","text":"Less 1 second 100 sites, seconds 1,000 sites, 500k / hour step","code":"sitepoints <- data.table::copy(testpoints_100)  # or  # sitepoints <- testpoints_n(100,\"block\") # random points radius <- 3 elapsed <- system.time({      sites2blocks <- getblocksnearby(     sitepoints = sitepoints,     radius = radius   )    }) # end of timed function print(elapsed) sites2blocks"},{"path":"/articles/3_analyzing.html","id":"doaggregate-will-summarize-indicators-within-each-buffer-and-overall","dir":"Articles","previous_headings":"DETAILS OF BLOCKS NEAR ONE SITE > getblocksnearby() will find residents/blocks that are within specified distance","what":"doaggregate() will summarize indicators within each buffer and overall","title":"3. Basics of Using EJAM for Analysis in RStudio","text":"","code":"# out <- doaggregate(testoutput_getblocksnearby_10pts_1miles) sites2blocks <- data.table::copy(testoutput_getblocksnearby_10pts_1miles) elapsed <- system.time({   out <- suppressWarnings(      doaggregate(sites2blocks = sites2blocks)    ) })  #> Inferring approximate radius is 1 miles, based on distances found. print(elapsed) #>    user  system elapsed  #>    0.79    0.16    1.76  names(out) #> [1] \"results_overall\"                     \"results_bysite\"                      #> [3] \"results_bybg_people\"                 \"longnames\"                           #> [5] \"count_of_blocks_near_multiple_sites\" dim(out$results_bysite) #> [1]   9 287"},{"path":"/articles/3_analyzing.html","id":"see-indicators-aggregated-over-all-people-across-all-sites","dir":"Articles","previous_headings":"DETAILS OF BLOCKS NEAR ONE SITE > getblocksnearby() will find residents/blocks that are within specified distance","what":"See indicators aggregated over all people across all sites","title":"3. Basics of Using EJAM for Analysis in RStudio","text":"","code":"## view output of batch run aggregation #### head(cbind(overall = as.list( out$results_overall))) #>                          overall  #> pop                      60740.3  #> lon                      NA       #> lat                      NA       #> ST                       NA       #> statename                NA       #> ratio.to.avg.Demog.Index 1.155091  ## To see just some subset of indicators, like Environmental only: cbind(overall = as.list( out$results_overall[ , ..names_e])) #>                 overall    #> pm              8.033511   #> o3              60.62275   #> cancer          26.52724   #> resp            0.2887633  #> dpm             0.3634965  #> pctpre1960      0.4127978  #> traffic.score   179.1214   #> proximity.npl   0.3872596  #> proximity.rmp   0.5952604  #> proximity.tsdf  1.353144   #> proximity.npdes 0.01370324 #> ust             5.488647   #> rsei            6492.776 cbind(overall = as.list( out$results_overall[ , ..names_d])) #>                  overall    #> Demog.Index      0.402214   #> Demog.Index.Supp 0.1772926  #> pctlowinc        0.3960105  #> pctlingiso       0.0681899  #> pctunemployed    0.05715225 #> pctlths          0.148745   #> lowlifex         0.2163654  #> pctunder5        0.06424071 #> pctover64        0.1083218  #> pctmin           0.4084175 cbind(overall = as.list( out$results_overall[ , ..names_d_subgroups])) #>                 overall      #> pcthisp         0.2547057    #> pctnhba         0.08590507   #> pctnhaa         0.0296854    #> pctnhaiana      0.008840918  #> pctnhnhpia      1.481718e-05 #> pctnhotheralone 0.0009054944 #> pctnhmulti      0.02836008   #> pctnhwa         0.5915825 cbind(overall = as.list( out$results_overall[ , ..names_e_pctile])) #>                        overall #> pctile.pm              45      #> pctile.o3              46      #> pctile.cancer          5       #> pctile.resp            4       #> pctile.dpm             79      #> pctile.pctpre1960      67      #> pctile.traffic.score   72      #> pctile.proximity.npl   93      #> pctile.proximity.rmp   79      #> pctile.proximity.tsdf  66      #> pctile.proximity.npdes 70      #> pctile.ust             79      #> pctile.rsei            89 cbind(overall = as.list( out$results_overall[ , ..names_d_pctile])) #>                         overall #> pctile.Demog.Index      64      #> pctile.Demog.Index.Supp 72      #> pctile.pctlowinc        69      #> pctile.pctlingiso       80      #> pctile.pctunemployed    63      #> pctile.pctlths          71      #> pctile.lowlifex         70      #> pctile.pctunder5        64      #> pctile.pctover64        30      #> pctile.pctmin           59 # cbind(overall = as.list( out$results_overall[ , ..names_ej_pctile]))"},{"path":[]},{"path":"/articles/3_analyzing.html","id":"histogram-of-indicators-distribution-over-all-people-across-all-sites","dir":"Articles","previous_headings":"VISUALIZATION OF FINDINGS","what":"Histogram of indicators distribution over all people across all sites","title":"3. Basics of Using EJAM for Analysis in RStudio","text":"","code":"hist(out$results_bysite$pctile.traffic.score, 10, xlab = \"Local traffic scores (expressed as a percentile)\",       ylab = \"count of sites in each bin, out of 1,000 sites\", freq = TRUE,       main = \"Actual distribution of scores nearby, as percentiles,       vs flat line = USA overall\") abline(h = nrow(out$results_bysite)/10)"},{"path":[]},{"path":"/articles/3_analyzing.html","id":"mean-distance-of-each-group","dir":"Articles","previous_headings":"VISUALIZATION OF FINDINGS > Distance plots","what":"Mean distance of each group","title":"3. Basics of Using EJAM for Analysis in RStudio","text":"","code":"# plot_distance_mean_by_group(testoutput_ejamit_1000pts_1miles$results_bybg_people)  # larger radius reveals more information y <- ejamit(testpoints_100, radius = 3)  plot_distance_mean_by_group(y$results_bybg_people) # or distance_mean_by_group() is a synonym print(distance_by_group(   y$results_bybg_people,    demogvarname = 'pctlowinc', demoglabel = 'Low Income')) distance_by_group_plot(   y$results_bybg_people,   demogvarname = 'pctlowinc', demoglabel = 'Low Income')"},{"path":"/articles/3_analyzing.html","id":"map-blocks-near-1-site","dir":"Articles","previous_headings":"VISUALIZATION OF FINDINGS > Distance plots","what":"Map blocks near 1 site","title":"3. Basics of Using EJAM for Analysis in RStudio","text":"","code":"x = plotblocksnearby(testpoints_n(1), radius = 3, returnmap = FALSE) #> Warning in testpoints_n(1): just want one point? whatever. #> Analyzing 1 points, radius of 3 miles around each. #> Finding Census blocks with internal point within  3  miles of the site (point), for each of 1  sites (points)... #> Stats via getblocks_diagnostics(), but BEFORE ADJUSTING UP FOR VERY SHORT DISTANCES:  #> min distance before adjustment:  0.0353608  #> max distance before adjustment:  2.99955  #>  #>  #>    Summary stats on distances reported from any sites to any nearby blocks #> Warning in max(x$distance_unadjusted, na.rm = TRUE): no non-missing arguments #> to max; returning -Inf #> -Inf miles is max. distance to block internal point (distance_unadjusted)    #> 2.99955 miles is max. distance to average resident in block (distance reported) #> Warning in min(x$distance_unadjusted, na.rm = TRUE): no non-missing arguments #> to min; returning Inf #> Inf miles is shortest distance to block internal point (distance_unadjusted)    #> 0.0353608 miles is shortest distance to average resident in block (distance reported) #> Warning in max(x$distance_unadjusted, na.rm = TRUE): no non-missing arguments #> to max; returning -Inf #> Warning in min(x$distance_unadjusted, na.rm = TRUE): no non-missing arguments #> to min; returning Inf #> 1 unique output sites #> 4,234 blocks are near the avg site or in avg buffer #>              (based on their block internal point, like a centroid) #> 4,234 blocks including doublecounting in overlaps,  #>              in final row count (block-to-site pairs table) #> 4,234 actual unique blocks total #> 4,234 blocks (and their residents) have exactly 1 site nearby  #> 0 blocks (and their residents) have exactly 2 sites nearby  #> 0 blocks (and their residents) have exactly 3 sites nearby  #> 1 is ratio of blocks including multicounting / actual count of unique blocks #> 0% of unique blocks could get counted more than once  #>              because those residents are near two or more sites  #>              (assuming they live at the block internal point #>  #>  #> Adjusting upwards the very short distances now... #>  Stats via getblocks_diagnostics(), AFTER ADJUSTING up FOR SHORT DISTANCES:  #> min distance AFTER adjustment:  0.0353608  #> max distance AFTER adjustment:  2.99955 #  returnmap= TRUE is to actually return the leaflet map"},{"path":[]},{"path":"/articles/3_analyzing.html","id":"sites-vary-widely-in-count-of-blocks-nearby-depending-on-population-density","dir":"Articles","previous_headings":"POPULATION DENSITY - AVG SITE VS AVG RESIDENT","what":"Sites vary widely in count of blocks nearby, depending on population density","title":"3. Basics of Using EJAM for Analysis in RStudio","text":"blocks near site far many blocks typically near given site (population density varies) many sites near block (residents > 1 site nearby)","code":"out <- testoutput_ejamit_100pts_1miles cat(\"  \", popshare_p_lives_at_what_pct(out$results_bysite$pop, p = 0.50, astext = TRUE), \"\\n\") #>    6% of places account for 50% of the total population (approx.) cat(\"  \", popshare_at_top_n(out$results_bysite$pop, c(1, 5, 10), astext = TRUE), \"\\n\\n\") #>    1, 5, 10 places account for 18%, 46%, 58% of the total population ## Also could use this example intermediate step dataset  ## of n sites, with thousands of nearby blocks: # sites2blocks <- data.table::copy(testoutput_getblocksnearby_10pts_1miles) radius <- 3 sitepoints <- data.table::copy(testpoints_100)  sites2blocks <- getblocksnearby(sitepoints, radius, quadtree = localtree) #> Analyzing 100 points, radius of 3 miles around each. #> Finding Census blocks with internal point within  3  miles of the site (point), for each of 100  sites (points)... #> Stats via getblocks_diagnostics(), but BEFORE ADJUSTING UP FOR VERY SHORT DISTANCES:  #> min distance before adjustment:  0.01569589  #> max distance before adjustment:  2.999998  #>  #>  #>    Summary stats on distances reported from any sites to any nearby blocks #> Warning in max(x$distance_unadjusted, na.rm = TRUE): no non-missing arguments #> to max; returning -Inf #> -Inf miles is max. distance to block internal point (distance_unadjusted)    #> 2.999998 miles is max. distance to average resident in block (distance reported) #> Warning in min(x$distance_unadjusted, na.rm = TRUE): no non-missing arguments #> to min; returning Inf #> Inf miles is shortest distance to block internal point (distance_unadjusted)    #> 0.01569589 miles is shortest distance to average resident in block (distance reported) #> Warning in max(x$distance_unadjusted, na.rm = TRUE): no non-missing arguments #> to max; returning -Inf #> Warning in min(x$distance_unadjusted, na.rm = TRUE): no non-missing arguments #> to min; returning Inf #> 100 unique output sites #> 1,046 blocks are near the avg site or in avg buffer #>              (based on their block internal point, like a centroid) #> 104,621 blocks including doublecounting in overlaps,  #>              in final row count (block-to-site pairs table) #> 94,859 actual unique blocks total #> 85,097 blocks (and their residents) have exactly 1 site nearby  #> 9,762 blocks (and their residents) have exactly 2 sites nearby  #> 0 blocks (and their residents) have exactly 3 sites nearby  #> 1.102911 is ratio of blocks including multicounting / actual count of unique blocks #> 10.3% of unique blocks could get counted more than once  #>              because those residents are near two or more sites  #>              (assuming they live at the block internal point #>  #>  #> Adjusting upwards the very short distances now... #>  Stats via getblocks_diagnostics(), AFTER ADJUSTING up FOR SHORT DISTANCES:  #> min distance AFTER adjustment:  0.027  #> max distance AFTER adjustment:  2.999998 names(sites2blocks) #> [1] \"ejam_uniq_id\"        \"blockid\"             \"distance\"            #> [4] \"blockwt\"             \"bgid\"                \"distance_unadjusted\" getblocks_summarize_blocks_per_site(sites2blocks)  #> Range and mean of count of blocks nearby the various sites: #>  #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>      11     136     602    1046    1336    5735 # print() shows more info returned invisibly getblocks_diagnostics(sites2blocks) #>  #>    Summary stats on distances reported from any sites to any nearby blocks #>  #> 2.999998 miles is max. distance to block internal point (distance_unadjusted)    #> 2.999998 miles is max. distance to average resident in block (distance reported)    #> 0.01569589 miles is shortest distance to block internal point (distance_unadjusted)    #> 0.027 miles is shortest distance to average resident in block (distance reported)    #> 112 block distances were adjusted (these stats may count some blocks twice if adjusted at 2+ sites) #>   81 block distances were adjusted up (reported dist to avg resident is > dist to block internal point) #>   31 block distances were adjusted down (reported < unadjusted) #> 76 unique sites had one or more block distances adjusted due to large block and short distance to block point #>  #> 100 unique output sites #> 1,046 blocks are near the avg site or in avg buffer #>              (based on their block internal point, like a centroid) #> 104,621 blocks including doublecounting in overlaps,  #>              in final row count (block-to-site pairs table) #> 94,859 actual unique blocks total #> 85,097 blocks (and their residents) have exactly 1 site nearby  #> 9,762 blocks (and their residents) have exactly 2 sites nearby  #> 0 blocks (and their residents) have exactly 3 sites nearby  #> 1.102911 is ratio of blocks including multicounting / actual count of unique blocks #> 10.3% of unique blocks could get counted more than once  #>              because those residents are near two or more sites  #>              (assuming they live at the block internal point # Use data.table package here library(data.table) # Very few blocks are within a radius of 1/4 mile. # Hundreds are often within 1 mile, but sometimes there are  # only a handful or even zero. s2b_stats <- sites2blocks[ , .(   avgDistance = round(mean(distance), 2),   blocksfound = .N,    blocks_within_1mile = sum(distance <= 1),   blocks_within_0.75   = sum(distance <= 0.75),   blocks_within_0.25  = sum(distance <= 0.25) ), by = 'ejam_uniq_id'][order(blocksfound), ] setorder(s2b_stats, ejam_uniq_id) head(s2b_stats) #>    ejam_uniq_id avgDistance blocksfound blocks_within_1mile blocks_within_0.75 #> 1:            1        1.66         341                  88                 61 #> 2:            2        2.13          56                   3                  2 #> 3:            3        1.50        2111                 620                378 #> 4:            4        1.65         735                 210                130 #> 5:            5        0.90         405                 298                255 #> 6:            6        2.00          48                   4                  4 #>    blocks_within_0.25 #> 1:                  6 #> 2:                  0 #> 3:                 36 #> 4:                 12 #> 5:                 50 #> 6:                  0 # CDF of how many blocks are nearby a site plot(sort(s2b_stats$blocks_within_1mile),       main = \"How many blocks are near each facility?\",       ylab = \"# of blocks (whose internal point is) within 1 mile of each site\",       xlab = paste0(nrow(s2b_stats),\" facilities ranked by # of blocks nearby\")) abline(h = quantile(s2b_stats$blocks_within_1mile, probs = (0:4) * 0.25)) abline(h = mean(s2b_stats$blocks_within_1mile), col = \"red\") # Histogram of how many blocks are nearby a site hist(sites2blocks[,.N, by = \"ejam_uniq_id\"][, N], 20,       xlab = \"How many blocks are nearby?\",       ylab = \"Frequency (# of sites)\",       main = \"A given site may have zero to hundreds of blocks nearby\",       sub = \"A typical site in this example has about 100 blocks nearby\") DT::datatable(s2b_stats,  rownames = FALSE) # more summaries showing there may be only 1 block or hundreds within 1 mile quantile(s2b_stats$blocks_within_1mile, probs = (0:4) * 0.25) t(summary(s2b_stats)) # map the sites with popups about how many blocks were found near each if (!('ejam_uniq_id' %in% names(sitepoints))) {sitepoints$ejam_uniq_id <- seq.int(length.out = NROW(sitepoints))} s2b_stats <- merge(sitepoints, s2b_stats, by = \"ejam_uniq_id\") mapfast(s2b_stats, radius = radius) # Some places have very few -- if any -- blocks within 1 mile  tail(s2b_stats[order(s2b_stats$blocks_within_1mile, decreasing = T),                 c('ejam_uniq_id', 'blocks_within_1mile')], 3)  #>    ejam_uniq_id blocks_within_1mile #> 14           14                   1 #> 19           19                   1 #> 45           45                   1  # Some places have hundreds nearby: a 1 mile radius is huge  # within a dense urban area  head(s2b_stats[order(s2b_stats$blocks_within_1mile, decreasing = T),                 c('ejam_uniq_id', 'blocks_within_1mile')], 3) #>    ejam_uniq_id blocks_within_1mile #> 57           57                 791 #> 42           42                 762 #> 21           21                 732 densest <- s2b_stats$ejam_uniq_id[order(   s2b_stats$blocks_within_1mile, decreasing = T)][1] plotblocksnearby(sitepoints = sitepoints[sitepoints$ejam_uniq_id == densest, ]) #> Analyzing 1 points, radius of 3 miles around each. #> Finding Census blocks with internal point within  3  miles of the site (point), for each of 1  sites (points)... #> Stats via getblocks_diagnostics(), but BEFORE ADJUSTING UP FOR VERY SHORT DISTANCES:  #> min distance before adjustment:  0.02342987  #> max distance before adjustment:  2.999248  #>  #>  #>    Summary stats on distances reported from any sites to any nearby blocks #> Warning in max(x$distance_unadjusted, na.rm = TRUE): no non-missing arguments #> to max; returning -Inf #> -Inf miles is max. distance to block internal point (distance_unadjusted)    #> 2.999248 miles is max. distance to average resident in block (distance reported) #> Warning in min(x$distance_unadjusted, na.rm = TRUE): no non-missing arguments #> to min; returning Inf #> Inf miles is shortest distance to block internal point (distance_unadjusted)    #> 0.02342987 miles is shortest distance to average resident in block (distance reported) #> Warning in max(x$distance_unadjusted, na.rm = TRUE): no non-missing arguments #> to max; returning -Inf #> Warning in min(x$distance_unadjusted, na.rm = TRUE): no non-missing arguments #> to min; returning Inf #> 1 unique output sites #> 4,596 blocks are near the avg site or in avg buffer #>              (based on their block internal point, like a centroid) #> 4,596 blocks including doublecounting in overlaps,  #>              in final row count (block-to-site pairs table) #> 4,596 actual unique blocks total #> 4,596 blocks (and their residents) have exactly 1 site nearby  #> 0 blocks (and their residents) have exactly 2 sites nearby  #> 0 blocks (and their residents) have exactly 3 sites nearby  #> 1 is ratio of blocks including multicounting / actual count of unique blocks #> 0% of unique blocks could get counted more than once  #>              because those residents are near two or more sites  #>              (assuming they live at the block internal point #>  #>  #> Adjusting upwards the very short distances now... #>  Stats via getblocks_diagnostics(), AFTER ADJUSTING up FOR SHORT DISTANCES:  #> min distance AFTER adjustment:  0.027  #> max distance AFTER adjustment:  2.999248 #> Warning in plotblocksnearby(sitepoints = sitepoints[sitepoints$ejam_uniq_id == #> : siteidvarname specified ('ejam_uniq_id') is already a colname of sitepoints, #> but note it is not equal to rownumbers as assumed by getblocksnearby() # Within a 1 mile radius, the blocks found tend to be about 2/3 of a mile from the site at the center. summary(s2b_stats$avgDistance) #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>   0.900   1.765   1.930   1.855   2.042   2.500"},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"/articles/4_advanced.html","id":"speed-tests-for-ejam-analysis","dir":"Articles","previous_headings":"TO BE WRITTEN > etc.","what":"Speed tests for EJAM analysis","title":"4. Advanced Features","text":"EJAM designed provide results large numbers sites quickly, can analyze well 100,000 sites per hour, can analyze 1,000 sites something like 10 20 seconds (assuming already initialized loaded data indexing, needs done front can take minute).","code":""},{"path":"/articles/5_ejscreenapi.html","id":"ejams-tools-for-using-the-ejscreen-api","dir":"Articles","previous_headings":"","what":"EJAM’s tools for using the EJScreen API","title":"5. Using the EJScreen API via EJAM","text":"EJAM includes EJAMejscreen package, set functions data facilitate access EJScreen data reports, using API provided EJScreen. things: API wrapper: Makes easier use EJScreen API R Batch processor: Includes function lets obtain batch EJScreen results via API, assembled table. Web App: Provides shiny R web app interface helps use batch tool. provides access EJScreen API loop batch mode. uses EJScreen run reports multiple places one time, somewhat slow handful places, exactly replicates EJScreen results. Web Module: EJAM include shiny module within EJAM’s web app UI, provides access one place.","code":""},{"path":"/articles/5_ejscreenapi.html","id":"get-one-ejscreen-report-in-your-web-browser","dir":"Articles","previous_headings":"EJAM’s tools for using the EJScreen API","what":"Get one EJScreen report in your web browser","title":"5. Using the EJScreen API via EJAM","text":"works best one site time, provide results table, just formatted web page EJScreen Community Report directly EJScreen.","code":"# Browser opens to view one site report browseURL(   url_ejscreen_report(     lon = -92.380556,      lat = 31.316944,      radius = 3   ) )  # Get the URL for each site report url_ejscreen_report(   lon = testpoints_10$lon,    lat = testpoints_10$lat,    radius = 3 )  # Open each webpage in a browser for (i in 1:2) {   browseURL(url_ejscreen_report(     lon = testpoints_10$lon[1:2],      lat = testpoints_10$lat[1:2],      radius = 3)[i]) }"},{"path":"/articles/5_ejscreenapi.html","id":"get-ejscreen-results-tables-in-rstudio-in-tables-for-a-list-of-sites","dir":"Articles","previous_headings":"EJAM’s tools for using the EJScreen API","what":"Get EJScreen results tables in RStudio (in tables, for a list of sites)","title":"5. Using the EJScreen API via EJAM","text":"RStudio, can use EJAM’s EJScreen API code like :","code":"# To interactively pick your own spreadsheet file from your local drive,  # that has lat and lon as two column headings and then one row per site:  x <- ejscreenit(radius = 1) # will prompt you for excel file with lat lon in it x <- ejscreenit(data.frame(lon = c(-111,-113), lat = c(41,43)), radius = 2) names(x) x$map x$table # ejscreenit_see_table(x)"},{"path":"/articles/5_ejscreenapi.html","id":"get-ejscreen-results-tables-in-a-local-web-app-not-tested","dir":"Articles","previous_headings":"EJAM’s tools for using the EJScreen API","what":"Get EJScreen results tables in a local web app ***not tested","title":"5. Using the EJScreen API via EJAM","text":"","code":"### *** NOT TESTED - MAY NO LONGER WORK AS SHIFT TO USING MODULE VERSION # If you have the local source package EJAMejscreenapi you can do this: # setwd(\"YOUR PATH GOES HERE  EJAMejscreenapi\") library(EJAMejscreenapi) EJAMejscreenapi::run_app()"},{"path":"/articles/5_ejscreenapi.html","id":"get-ejscreen-results-tables-in-a-local-web-app-module-not-tested","dir":"Articles","previous_headings":"EJAM’s tools for using the EJScreen API","what":"Get EJScreen results tables in a local web app module ***not tested","title":"5. Using the EJScreen API via EJAM","text":"","code":"library(EJAMejscreenapi)  library(shiny); library(magrittr); library(leaflet)   # must attach all of those manually for this to work? source(system.file(\"global.R\", package = \"EJAMejscreenapi\")) default_calculate_ratios <- TRUE use_ejscreenit_tf <- FALSE ######################### # TEST_UI <- function(request) {   shiny::fluidPage(     tabsetPanel(       tabPanel(         title = \"api app\",         shiny::h2('EJScreen API batch tool packaged with EJAM'),          # EJAM:::mod_ejscreenapi_ui(\"TESTID\", simpleradius_default_for_ui = 2),         mod_ejscreenapi_ui(\"TESTID\", simpleradius_default_for_ui = 2),         br()       ))) } ######################### # TEST_SERVER <- function(input, output, session) {   #x <- EJAM:::mod_ejscreenapi_server(   x <-     mod_ejscreenapi_server(     \"TESTID\",      default_points_shown_at_startup_react = reactive(testpoints_5[1:2,]),     use_ejscreenit = use_ejscreenit_tf   )   output$testinfo2 <- renderText(     cat(\"x names:  \", paste0(names(x()), collapse = \", \"), \"\\n\")   )   output$results <- DT::renderDataTable({x()},                                          options = list(                                           selection = 'multiple',                                           dom = 'rtip', # specify 4 DOM elements:                                            # processing, table, info, pagination                                            # per https://datatables.net/examples/basic_init/dom.html                                           scrollX = TRUE,                                            searchPanes = TRUE  # does this work?                                         ),                                         escape = FALSE    )   # *** CAUTION ***   # escape= TRUE is better for security reasons (XSS attacks).   # escape= FALSE lets ejscreen URL links work,    #   but not links from ECHO table download. } ######################### #  shinyApp(ui = TEST_UI, server = TEST_SERVER) # Try module in mini/test app"},{"path":"/articles/5_ejscreenapi.html","id":"compare-numbers-provided-by-ejam-and-ejscreen-api-comparing-estimated-population-indicator-scores-etc-","dir":"Articles","previous_headings":"","what":"Compare numbers provided by EJAM and EJScreen API (comparing estimated population, indicator scores, etc.)","title":"5. Using the EJScreen API via EJAM","text":"","code":"# Pick sample of randomly selected EPA-regulated facilities in the FRS: n <- 30 # or 1,000 sites, e.g. pts <- testpoints_n(n, weighting = 'frs') radius <- 3  # Run (potentially long) analysis in EJScreen,  # (approx 40 minutes for 1,000 points, maybe ) # and also in EJAM ## vs <- ejscreen_vs_ejam(pts, radius = radius, include_ejindexes = TRUE) # or to save time,   out1 = testoutput_ejscreenit_500$table out1 = out1[!is.na(out1$pm), ] out1$id = 1:NROW(out1) ejamsite = ejamit(   sitepoints = out1[ , c(\"lat\", \"lon\")], radius = 1)$results_bysite ejamsite$id <- ejamsite$ejam_uniq_id missingdatarows <- setdiff(1:NROW(out1), ejamsite$ejam_uniq_id) out1 <- out1[!(1:NROW(out1) %in% missingdatarows), ]   # see summary stats on comparisons sum_vs <- ejscreen_vs_ejam_summary(vs)   q <- ejscreen_vs_ejam_summary_quantiles(   vs, mystat = 'ratio',    myvars = c('pop',  \"blockcount_near_site\", names_these), digits = 2) q[order(q[, \"95%\"], decreasing = F), c(\"50%\", \"95%\")]  ## examine one site closely ejscreen_vs_ejam_see1(   vs, mysite = 1,    myvars = c('pop', \"blockcount_near_site\")) ejscreen_vs_ejam_see1(vs, mysite = 1,                        myvars = c('lowlifex', \"Demog.Index.Supp\")) ejscreen_vs_ejam_see1map(1, x = vs)"},{"path":"/articles/5_ejscreenapi.html","id":"compare-speeds-for-ejam-and-ejscreen-api","dir":"Articles","previous_headings":"","what":"Compare Speeds for EJAM and EJScreen API","title":"5. Using the EJScreen API via EJAM","text":"EJAM designed provide results large numbers sites quickly, can analyze well 100,000 sites per hour, can analyze 1,000 sites something like 10 20 seconds (assuming already initialized loaded data indexing, needs done front can take minute). internal (exported) EJAM EJAMejscreenapi functions: speedreport speedmessage speedtest speedtest_plot speedtable_summarize speedtable_expand","code":"speeds <- EJAM:::speedtest(n = 100, radii = c(1,3,5,6.2,10)) ## ejamit() just combines getblocksnearby() and doaggregate() sitepoints <- testpoints_1000 radius <- 1 # elapsed <- system.time({ began = Sys.time() out2 <- ejamit(   sitepoints =  sitepoints  ,   radius = radius ) #> Finding blocks nearby. #> Analyzing 1000 points, radius of 1 miles around each. #> Aggregating at each buffer and overall. #> Restricting this analysis to blocks (residents) at distances smaller than radius of 1 #> as specified in radius parameter passed to doaggregate(), or else inferred from distances reported to doaggregate() #> even though some larger distances were found in sites2blocks table passed from getblocksnearby() to doaggregate() #> which sometimes occurs if small radius is used where blocks are very large (low pop density) #> so reported distance to avg person was > radius requested for analysis #> Among these results, all raw scores were NA (so percentiles will be reported as NA) in zone = AK for pm. #> Among these results, all raw scores were NA (so percentiles will be reported as NA) in zone = PR for pm. #> Among these results, all raw scores were NA (so percentiles will be reported as NA) in zone = HI for pm. #> Among these results, all raw scores were NA (so percentiles will be reported as NA) in zone = AK for o3. #> Among these results, all raw scores were NA (so percentiles will be reported as NA) in zone = PR for o3. #> Among these results, all raw scores were NA (so percentiles will be reported as NA) in zone = HI for o3. #> Among these results, all raw scores were NA (so percentiles will be reported as NA) in zone = AK for traffic.score. #> Among these results, all raw scores were NA (so percentiles will be reported as NA) in zone = AK for proximity.npdes. #> Among these results, all raw scores were NA (so percentiles will be reported as NA) in zone = PR for Demog.Index.Supp. #> Among these results, all raw scores were NA (so percentiles will be reported as NA) in zone = PR for lowlifex. #> Warning in table_round(x): Percentages stored as 0 to 1 rather than 0 to 100 will not be shown correctly unless adjusted,  #>           because rounding info says 0 digits when the intent is to show 0 digits after the 0-100 percent number. #EJAM:::speedreport(began, Sys.time(), n = NROW(sitepoints)) # }) # print(elapsed)"},{"path":"/articles/6_future_plans.html","id":"public-access","dir":"Articles","previous_headings":"","what":"Public Access","title":"6. Future Plans and Ideas for EJAM","text":"Ultimately, version EJAM made available public, initially tested used within EPA, just EJScreen launched internally 2012 went public 2015. public version carefully designed balance user-friendliness, relevance public find useful, support includes appropriate documentation user support. 2024, EJAM tested launch internally within EPA, explore works still needed, including ideas plans listed .","code":""},{"path":"/articles/6_future_plans.html","id":"written-report","dir":"Articles","previous_headings":"","what":"Written Report","title":"6. Future Plans and Ideas for EJAM","text":"EJAM designed provide default, standard written report, feature still active development early 2024. EJAM provide written report text, graphics, maps, ready user print, download, share, use. report Word document, one can edit offline needed. Users also can choose use just selected tables graphics data files (individual sites summary statistics).","code":""},{"path":"/articles/6_future_plans.html","id":"methods-for-identifying-and-focusing-on-key-findings","dir":"Articles","previous_headings":"","what":"Methods for Identifying and Focusing on Key Findings","title":"6. Future Plans and Ideas for EJAM","text":"Communicating key findings challenging large number metrics available across multiple locations multiple demographic groups. simple tools may able help initial filtering results, suggest might highlighted. explored written report, particularly ways provide Executive Summary.","code":""},{"path":"/articles/6_future_plans.html","id":"visualization-tools","dir":"Articles","previous_headings":"","what":"Visualization Tools","title":"6. Future Plans and Ideas for EJAM","text":"variety plots maps explored ways communicate rich data results calculated EJAM. example, EJAM R functions can calculate display detailed estimates range residential distances facilities within demographic subgroup - type visualization incorporated web app appears interest . Another possibility plots, maps, tables made interact sync , supports useful data exploration.","code":""},{"path":"/articles/6_future_plans.html","id":"counts-of-nearby-points-of-interest","dir":"Articles","previous_headings":"","what":"Counts of nearby points of interest","title":"6. Future Plans and Ideas for EJAM","text":"feature planned able report number user-specified points interest (e.g., schools) location. example, report many schools analyzed location. report counts analysis circular buffers (e.g., # schools near facility analyzed), also FIPS Census units (e.g., # schools County) polygons/shapefiles (e.g., # schools high-risk zone).","code":""},{"path":"/articles/6_future_plans.html","id":"facility-density-scores-for-all-epa-regulated-facilities","dir":"Articles","previous_headings":"","what":"Facility Density Scores for all EPA-regulated Facilities","title":"6. Future Plans and Ideas for EJAM","text":"facility density indicator may explored pre-calculated, summarize proximity types EPA-regulated facilities, certain subcategories, every community US within one State interest. similar existing proximity indicators RMP score EJScreen, cover larger range facilities.","code":""},{"path":"/articles/6_future_plans.html","id":"proximity-scores-for-user-specified-sites","dir":"Articles","previous_headings":"","what":"Proximity Scores for User-Specified Sites","title":"6. Future Plans and Ideas for EJAM","text":"feature planned able quickly calculate new proximity indicator every block group US, represent counts distances user-specified points facilities. similar existing proximity indicators RMP score EJScreen, calculated fly user-specified set points.","code":""},{"path":"/articles/6_future_plans.html","id":"user-specified-indicators","dir":"Articles","previous_headings":"","what":"User-specified Indicators","title":"6. Future Plans and Ideas for EJAM","text":"EJAM future also able analyze, aggregate, report demographic indicators (e.g., Census ACS variables), include user-selected EPA-hosted layers, even user-provided data. words, analysis able include layers risks concentrations (block group resolution), user-provided scores block group.","code":""},{"path":"/articles/6_future_plans.html","id":"api","dir":"Articles","previous_headings":"","what":"API","title":"6. Future Plans and Ideas for EJAM","text":"provide flexibility help avoid duplication effort, EJAM API planned, provide access services fast buffering, summarization, data.","code":""},{"path":"/articles/6_future_plans.html","id":"resolution","dir":"Articles","previous_headings":"","what":"Resolution","title":"6. Future Plans and Ideas for EJAM","text":"EJAM designed growth mind, assuming specific indicators interest expand change time. even possible multiple resolutions data need analyzed, block, block group, tract data different indicators. subsequent refinement might even use high-resolution raster grid population estimates rather Census Block counts currently used buffering weighting block group scores partially included block groups.","code":""},{"path":[]},{"path":"/articles/what_is_ejam.html","id":"epas-environmental-justice-analysis-multi-site-ejam-tool","dir":"Articles","previous_headings":"What is EJAM?","what":"EPA’s Environmental Justice Analysis Multi-site (EJAM) tool","title":"What is EJAM?","text":"EJAM user-friendly web app, developed United States Environmental Protection Agency (US EPA) makes easy see demographic environmental information summarized across list places nation. Using EJAM like running EJScreen report, hundreds thousands places, time. web app lets quickly check summary report, explore interactive maps, tables, plots, download summary detailed spreadsheet. provides interactive results formatted, ready--share report written explanations results, tables, graphics. report can provide EJ-related information people live communities near industrial facilities list, example.","code":""},{"path":"/articles/what_is_ejam.html","id":"overview","dir":"Articles","previous_headings":"What is EJAM?","what":"Overview","title":"What is EJAM?","text":"EJAM user-friendly web application can summarize demographics environmental conditions list places nation. provides interactive results formatted, ready--share report written explanations results, tables, graphics. report can provide EJ-related information people live communities near industrial facilities list, example. use tool, one first selects places analyzed. , example, everyone within 2 miles EPA-regulated facility specific NAICS code (industrial sector). tool runs fast “buffer” proximity analysis location, similar EJScreen provides standard report single location, except EJAM large number locations quickly. , importantly, EJAM provides complete overview report, summarize environmental conditions demographics across populations locations. results can explored interactively downloaded written report text, tables, graphics. EJAM report can quickly easily show demographic groups live near selected facilities. also provides new insights environmental stressors may affect certain demographic subgroups disproportionately, varying degrees, near regulated sector overall individual sites. allows EJ analysis move beyond looking small number indicators demographic groups, one site single permitting decision, complete picture conditions near whole set facilities focus risk analysis new regulation considered, example.","code":""},{"path":"/articles/what_is_ejam.html","id":"ejam-features-and-benefits","dir":"Articles","previous_headings":"What is EJAM?","what":"EJAM features and benefits","title":"What is EJAM?","text":"EJAM provides ready--use summary report, plus flexibility, accuracy, speed tools . web-based app quickly provides results fly – circular buffering module optimized extremely fast (allowing realtime exploratory work app), still using block-population calculation EJScreen uses, making consistent EJScreen accurate approaches. EJAM also lets one pick locations several different approaches, - specifying facility points industry categories various types (NAICS, SIC, EPA program, etc.) - providing table latitudes/longitudes list points - using shapefiles polygons - selecting Census units compare, Counties, based FIPS codes default demographic indicators EJScreen basic demographic indicators, addition race/ethnicity subgroups. data software shared reusable, well-documented functions modules R package, allow software developers analysts take advantage resources running analyses building supplementing tools, websites, mobile apps.","code":""},{"path":"/articles/what_is_ejam.html","id":"updates","dir":"Articles","previous_headings":"What is EJAM? > EJAM features and benefits","what":"Updates","title":"What is EJAM?","text":"EJAM data updates meant match EJScreen scheduled updates main version numbers, EJAM 2.2 uses basic data EJScreen 2.2. 2.2 version EJScreen (released July 2023, revisions late 2023) --date demographic data (e.g., Census 2020 block weights ACS 2017-2021 block group demographics).","code":""},{"path":"/articles/what_is_ejam.html","id":"speed","dir":"Articles","previous_headings":"What is EJAM? > EJAM features and benefits","what":"Speed","title":"What is EJAM?","text":"power tool enables faster accurate results tools generally able provide. also much cost-effective easy use standard geospatial analysis solutions . tool lets user quickly see analysis large number places, immediately get ready--use report provides perspective entire industrial sector set places.","code":""},{"path":"/articles/what_is_ejam.html","id":"accuracy","dir":"Articles","previous_headings":"What is EJAM? > EJAM features and benefits","what":"Accuracy","title":"What is EJAM?","text":"Compared often-used approaches, EJAM high-resolution buffering provides accurate information populations live inside buffer, important rural areas single blockgroup can cover large area. circular buffers, EJAM 2.2 uses locations internal points Census 2020 blocks, areal apportionment block groups, estimate residents live within block group. avoids simplistic assumption people evenly spread within block group. Instead, uses blocks get information part block group residents actually live. several million blocks US, compared fewer quarter million block groups. accurate approaches EJAM uses 1) use areal apportionment blocks (block groups), slow, 2) use 30x30 meter grid EPA developed based dasymetric estimates people live even higher resolution block, requires large amounts storage computer time. EJAM designed replicate EJScreen methods results given location, total population count within 1 mile, maintain consistency avoid confusion. EJAM also takes note residences near sites, avoid double-counting people summary statistics still allow user view results one site time. something tools analyses often provide - aggregate across sites typically retain statistics individual sites, rarely ever keep track communities near multiple facilities. Keeping track also allow analyst explore many people near multiple sites, ask sites communities already multiple sites nearby. EJAM designed can provide continuous distribution distances, distributed across blocks people one nearby facilities. enables exploration complete picture proximities, rather using arbitrary single distance defining near versus far. distribution can sliced later summary statistics distance, can summarized distribution distances within demographic group.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Mark Corrales. Maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Corrales M (2024). EJAM: EJAM Environmental Justice Analysis Multisite tool. R package version 2.2.1, https://github.com/USEPA/EJAM.","code":"@Manual{,   title = {EJAM: EJAM Environmental Justice Analysis Multisite tool},   author = {Mark Corrales},   year = {2024},   note = {R package version 2.2.1},   url = {https://github.com/USEPA/EJAM}, }"},{"path":"/index.html","id":"ejam-environmental-justice-analysis-multisite-tool","dir":"","previous_headings":"","what":"EJAM Environmental Justice Analysis Multisite tool","title":"EJAM Environmental Justice Analysis Multisite tool","text":"EJAM Web App makes easy see demographic environmental information summarized across list places nation. Using EJAM like running EJScreen report, hundreds thousands places, time. web app lets quickly check summary report, explore interactive maps, tables, plots, download summary detailed spreadsheet. EJAM R Package Analysts Developers written R programming language, source code GitHub. provides functions help work block group data, points, polygons, quickly aggregate compare large numbers locations. EJAM provided US Environmental Protection Agency (US EPA).","code":""},{"path":"/index.html","id":"the-ejam-web-app","dir":"","previous_headings":"","what":"The EJAM Web App","title":"EJAM Environmental Justice Analysis Multisite tool","text":"EJAM? Using EJAM Web App EJAM live beta test** (must EPA offices VPN)","code":""},{"path":"/index.html","id":"the-ejam-r-package-for-analysts-and-developers","dir":"","previous_headings":"","what":"The EJAM R Package for Analysts and Developers","title":"EJAM Environmental Justice Analysis Multisite tool","text":"1. Installing EJAM R package 2. Quick Start Guide EJAM R package 3. Basics Using EJAM Analysis RStudio 4. Advanced Features EJAM R package 5. Accessing Batch EJScreen Reports via EJAM 6. Future Plans EJAM Reference Manual Documenting EJAM Package Functions Data GitHub Repository - Code Data, USEPA/EJAM (via EPA VPN LAN -office)","code":""},{"path":"/index.html","id":"disclaimer-for-app","dir":"","previous_headings":"","what":"Disclaimer for App","title":"EJAM Environmental Justice Analysis Multisite tool","text":"software/application approved release U.S. Environmental Protection Agency (USEPA). Although software subjected rigorous review, USEPA reserves right update software needed pursuant analysis review. warranty, expressed implied, made USEPA U.S. Government functionality software related material shall fact release constitute warranty. Furthermore, software released condition neither USEPA U.S. Government shall held liable damages resulting authorized unauthorized use.","code":""},{"path":"/index.html","id":"disclaimer-for-github-repository-content","dir":"","previous_headings":"","what":"Disclaimer for GitHub Repository Content","title":"EJAM Environmental Justice Analysis Multisite tool","text":"United States Environmental Protection Agency (EPA) GitHub project code provided “” basis user assumes responsibility use. EPA relinquished control information longer responsibility protect integrity, confidentiality, availability information. reference specific commercial products, processes, services service mark, trademark, manufacturer, otherwise, constitute imply endorsement, recommendation favoring EPA. EPA seal logo shall used manner imply endorsement commercial product activity EPA United States Government.","code":""},{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 U.S. Federal Government (countries recognized) Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/reference/all_equal_functions.html","id":null,"dir":"Reference","previous_headings":"","what":"UTILITY - check different versions of function with same name in 2 packages — all_equal_functions","title":"UTILITY - check different versions of function with same name in 2 packages — all_equal_functions","text":"used dupenames() check different versions function name 2 packages","code":""},{"path":"/reference/all_equal_functions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UTILITY - check different versions of function with same name in 2 packages — all_equal_functions","text":"","code":"all_equal_functions(   fun = \"latlon_infer\",   package1 = \"EJAM\",   package2 = \"EJAMejscreenapi\" )"},{"path":"/reference/all_equal_functions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"UTILITY - check different versions of function with same name in 2 packages — all_equal_functions","text":"fun quoted name function, like \"latlon_infer\" package1 quoted name package, like \"EJAM\" package2 quoted name package, like \"EJAMejscreenapi\"","code":""},{"path":"/reference/all_equal_functions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"UTILITY - check different versions of function with same name in 2 packages — all_equal_functions","text":"TRUE FALSE","code":""},{"path":[]},{"path":"/reference/app_run_EJAM.html","id":null,"dir":"Reference","previous_headings":"","what":"Launch EJAM as shiny web app — app_run_EJAM","title":"Launch EJAM as shiny web app — app_run_EJAM","text":"launch Shiny web app RStudio","code":""},{"path":"/reference/app_run_EJAM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Launch EJAM as shiny web app — app_run_EJAM","text":"","code":"app_run_EJAM(   onStart = NULL,   options = list(),   enableBookmarking = \"server\",   uiPattern = \"/\",   ... )"},{"path":"/reference/app_run_EJAM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Launch EJAM as shiny web app — app_run_EJAM","text":"alias run_app()","code":""},{"path":[]},{"path":"/reference/app_server.html","id":null,"dir":"Reference","previous_headings":"","what":"app_server - EJAM app server — app_server","title":"app_server - EJAM app server — app_server","text":"app_server - EJAM app server","code":""},{"path":"/reference/app_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"app_server - EJAM app server — app_server","text":"","code":"app_server(input, output, session)"},{"path":"/reference/app_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"app_server - EJAM app server — app_server","text":"input, output, session Internal parameters shiny. REMOVE.","code":""},{"path":"/reference/app_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"app_ui - The application User-Interface — app_ui","title":"app_ui - The application User-Interface — app_ui","text":"app_ui - application User-Interface","code":""},{"path":"/reference/app_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"app_ui - The application User-Interface — app_ui","text":"","code":"app_ui(request)"},{"path":"/reference/app_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"app_ui - The application User-Interface — app_ui","text":"request Internal parameter {shiny}. REMOVE.","code":""},{"path":"/reference/ask_number.html","id":null,"dir":"Reference","previous_headings":"","what":"utility - interactive prompt in RStudio to ask user to specify number like radius — ask_number","title":"utility - interactive prompt in RStudio to ask user to specify number like radius — ask_number","text":"askradius()","code":""},{"path":"/reference/ask_number.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"utility - interactive prompt in RStudio to ask user to specify number like radius — ask_number","text":"","code":"ask_number(   default = 3,   title = \"Radius\",   message = \"Within how many miles of each point?\" )"},{"path":"/reference/ask_number.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"utility - interactive prompt in RStudio to ask user to specify number like radius — ask_number","text":"default default value number provided returned title title popup dialog box, like \"Radius\" message question, like, \"Within many miles point?\"","code":""},{"path":"/reference/ask_number.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"utility - interactive prompt in RStudio to ask user to specify number like radius — ask_number","text":"single number","code":""},{"path":[]},{"path":"/reference/avg.in.us.html","id":null,"dir":"Reference","previous_headings":"","what":"avg.in.us (DATA) national averages of key indicators, for convenience — avg.in.us","title":"avg.in.us (DATA) national averages of key indicators, for convenience — avg.in.us","text":"also available via usastats created /data-raw/datacreate_avg..us","code":""},{"path":"/reference/bgej.html","id":null,"dir":"Reference","previous_headings":"","what":"bgej (DATA) EJScreen EJ Indexes for Census block groups — bgej","title":"bgej (DATA) EJScreen EJ Indexes for Census block groups — bgej","text":"bgej (DATA) EJScreen EJ Indexes Census block groups","code":""},{"path":"/reference/bgej.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"bgej (DATA) EJScreen EJ Indexes for Census block groups — bgej","text":"08/2023 EJScreen 2.2 version data, used ACS 2017-2021. year re-created latest version. See https://www.epa.gov/ejscreen","code":""},{"path":"/reference/bgpts.html","id":null,"dir":"Reference","previous_headings":"","what":"bgpts (DATA) lat lon of popwtd center of blockgroup, and count of blocks per block group — bgpts","title":"bgpts (DATA) lat lon of popwtd center of blockgroup, and count of blocks per block group — bgpts","text":"just list US block groups many blocks ... also lat lon roughly blockgroup","code":""},{"path":"/reference/bgpts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"bgpts (DATA) lat lon of popwtd center of blockgroup, and count of blocks per block group — bgpts","text":"point used bg Census 2020 population weighted mean blocks' internal points. gives approximation people live bg , useful situations.","code":"As of 8/2023 it is the EJScreen 2.2 version of data, which uses ACS 2017-2021   and Census 2020. it has all US States, DC, PR, but not  \"AS\" \"GU\" \"MP\" \"VI\"      How lat lon were estimated:   # Now, for Census 2020 blocks, create pop wtd centroids lat lon for each block group ####   #  using  blockwts and   blockpoints    bgpts_blocks <- copy(blockpoints) # not essential but ok to make sure we do not change blockpoints itself by reference in data.table operations  # all.equal(bgpts$blockid , blockwts$blockid)  bgpts_blocks[ , bgid    := blockwts$bgid]  bgpts_blocks[ , blockwt := blockwts$blockwt]  # get pop wtd mean of lat, and same for lon, by bgid  bgpts <- bgpts_blocks[ , lapply(.SD, FUN = function(x) stats::weighted.mean(x, w = blockwt, na.rm = TRUE)), .SDcols = c('lat', 'lon') , by = 'bgid']  rm( bgpts_blocks)  # add the bgfips column, so it has bgfips, bgid, lat, lon  # all.equal(bgpts$bgid,bgid2fips$bgid)  bgpts[ , bgfips := bgid2fips$bgfips]  # setnames(bgpts, 'bgfips', 'FIPS')    # BUT NOTE this census2020 block table has PR but lacks \"AS\" \"GU\" \"MP\" \"VI\" ####  # > uniqueN( blockid2fips[,substr(blockfips,1,2)])  # [1] 52  # length(unique(EJSCREEN_Full_with_AS_CNMI_GU_VI$ST_ABBREV)) # which is in the package EJAMejscreendata  # [1] 56  #   dim(bgejam)  # [1] 242,940    155  #   dim(bg22)  # [1] 242,335    157  #  # so how do we get latlon for bg in as/gu/mp/vi ?  ?####    # view those block group points on a map (plot only a subset which is enough)  sam <- sample(seq_along(bgpts$bgid),5000)   plot(x = bgpts$lon[sam], y = bgpts$lat[sam], pch = '.')    # view one state, florida, where 12 are the 1st 2 digits of the FIPS:  # bgpts[bgid2fips[substr(bgfips,1,2) == '12', ], on = 'bgid']  xx='12'  mystate <- bgpts[bgid2fips[substr(bgfips, 1, 2) == xx, ], on = 'bgid'][ , .(lon, lat)]   plot(mystate, pch = '.')  rm(mystate, xx)          How blockcounts were done:       need  data.table pkg   bg_blockcounts <- blockwts[ , .(blockcount = uniqueN(.SD)), by=bgid]   sum(bg_blockcounts$blockcount == 1)     # [1] 1874 blockgroups have only 1 block   sum(bg_blockcounts$blockcount == 1000)  the max is 1000 blocks in a bg     # # [1] 22   round(100*table(bg_blockcounts[blockcount <20, blockcount]) / nrow(bg_blockcounts) ,1)     # about 1 to 3      #   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19      # 0.8 1.2 1.3 1.4 1.5 2.1 2.2 2.4 2.6 2.8 2.8 3.0 3.0 2.9 3.0 2.9 2.8 2.7 2.5      all.equal(bgpts$bgid, bg_blockcounts$bgid)   bgpts[ , blockcount := bg_blockcounts$blockcount]   dim(bgpts)          # 242335  x    5   usethis::use_data(bgpts) # saved for EJAM package"},{"path":"/reference/bg_cenpop2020.html","id":null,"dir":"Reference","previous_headings":"","what":"bg_cenpop2020 (DATA) data.table with all US Census 2020 block groups, Census 2020 population count,\r\nand lat/lon of Census2020-population-weighted centroid of block group — bg_cenpop2020","title":"bg_cenpop2020 (DATA) data.table with all US Census 2020 block groups, Census 2020 population count,\r\nand lat/lon of Census2020-population-weighted centroid of block group — bg_cenpop2020","text":"bg_cenpop2020 (DATA) data.table US Census 2020 block groups, Census 2020 population count, lat/lon Census2020-population-weighted centroid block group","code":""},{"path":"/reference/bg_cenpop2020.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"bg_cenpop2020 (DATA) data.table with all US Census 2020 block groups, Census 2020 population count,\r\nand lat/lon of Census2020-population-weighted centroid of block group — bg_cenpop2020","text":"also see attributes(bg_cenpop2020) source URL date","code":""},{"path":[]},{"path":"/reference/blockgroupstats.html","id":null,"dir":"Reference","previous_headings":"","what":"blockgroupstats (DATA) EJScreen demographic and environmental indicators for Census block groups — blockgroupstats","title":"blockgroupstats (DATA) EJScreen demographic and environmental indicators for Census block groups — blockgroupstats","text":"EJScreen dataset (demographic, environmental indicators). EJ Indexes, see bgej","code":""},{"path":"/reference/blockgroupstats.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"blockgroupstats (DATA) EJScreen demographic and environmental indicators for Census block groups — blockgroupstats","text":"08/2023 EJScreen 2.2 version data, used ACS 2017-2021. year re-created latest version. See attributes(blockgroupstats) data.table US Census blockgroups (blocks). PR, Island Areas See https://www.epa.gov/ejscreen Column names include bgfips, bgid (join blockwt$bgid), pop, pctlowinc, etc.","code":""},{"path":"/reference/boxplots_ratios.html","id":null,"dir":"Reference","previous_headings":"","what":"quick boxplots of demographics across sites as ratios to US means — boxplots_ratios","title":"quick boxplots of demographics across sites as ratios to US means — boxplots_ratios","text":"boxplots show range scores vs range US overall","code":""},{"path":"/reference/boxplots_ratios.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"quick boxplots of demographics across sites as ratios to US means — boxplots_ratios","text":"","code":"boxplots_ratios(   x,   selected_dvar_colname = \"Demog.Index\",   selected_dvar_nicename = selected_dvar_colname,   towhat_nicename = \"US average\",   wheretext = \"Near\" )"},{"path":"/reference/boxplots_ratios.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"quick boxplots of demographics across sites as ratios to US means — boxplots_ratios","text":"x data.frame output ejscreen analysis, example:   selected_dvar_colname default \"Demog.Index\" selected_dvar_nicename default \"Demog.Index\" towhat_nicename default \"US average\" wheretext Use plot subtitle. Default \"Near\" \"Within 5km \" example. number, n, set wheretext \"Within n miles \"","code":"x <- ejscreenit(testpoints_5)$table  x <- testoutput_ejscreenapi_plus_50"},{"path":"/reference/boxplots_ratios.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"quick boxplots of demographics across sites as ratios to US means — boxplots_ratios","text":"graphic just quick interim solution replaced. May want compare boxplots nationwide range indicator values. communicate whether skewed right (high scores might expect) also say X% SITES PEOPLE scores top Y% US range, >= 100-Y percentile. e.g., 20% sites scores least top 5% US scores (/less one might expect leaving aside statistical significance ie whether chance sites randomly picked US block groups people's bg scores)","code":""},{"path":"/reference/boxplots_ratios.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"quick boxplots of demographics across sites as ratios to US means — boxplots_ratios","text":"","code":"# x <- testoutput_ejscreenit_50$table # or   x <- testoutput_ejscreenapi_plus_5   myradius <- x$radius.miles[1]   boxplots_ratios(ratios_to_avg(x)$ratios_d, wheretext = myradius)   #boxplots_ratios(ratios_to_avg(x)$ratios_e, wheretext = myradius)"},{"path":"/reference/build_community_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate EJAM Summary Report in HTML within shiny app — build_community_report","title":"Generate EJAM Summary Report in HTML within shiny app — build_community_report","text":"Creates 2 page report overall results one site, demographic environmental indicators, EJ Indexes needed. function use RStudio, see ejam2report() relies build_community_report()","code":""},{"path":"/reference/build_community_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate EJAM Summary Report in HTML within shiny app — build_community_report","text":"","code":"build_community_report(   output_df,   analysis_title,   totalpop,   locationstr,   include_ejindexes = FALSE,   in_shiny = FALSE,   filename = NULL )"},{"path":"/reference/build_community_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate EJAM Summary Report in HTML within shiny app — build_community_report","text":"output_df, single row results table doaggregate - either results_overall one row bysite analysis_title, title use header report totalpop, total population included location(s) analyzed locationstr, description location(s) analyzed include_ejindexes, whether build tables EJ EJ supp. indexes in_shiny, whether function called outside shiny - affects location header filename, path file save HTML content ; null, returns string (used Shiny app)","code":""},{"path":"/reference/calc_byformula.html","id":null,"dir":"Reference","previous_headings":"","what":"DRAFT utility to use formulas provided as text, to calculate indicators — calc_byformula","title":"DRAFT utility to use formulas provided as text, to calculate indicators — calc_byformula","text":"DRAFT utility use formulas provided text, calculate indicators","code":""},{"path":"/reference/calc_byformula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DRAFT utility to use formulas provided as text, to calculate indicators — calc_byformula","text":"","code":"calc_byformula(mydf, formulas = NULL, keep = formula_varname(formulas))"},{"path":"/reference/calc_byformula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DRAFT utility to use formulas provided as text, to calculate indicators — calc_byformula","text":"mydf data.frame//table indicators variables use formulas text strings formulas keep etc.","code":""},{"path":"/reference/calc_ejam.html","id":null,"dir":"Reference","previous_headings":"","what":"DRAFT utility to use formulas provided as text, to calculate indicators — calc_ejam","title":"DRAFT utility to use formulas provided as text, to calculate indicators — calc_ejam","text":"DRAFT utility use formulas provided text, calculate indicators","code":""},{"path":"/reference/calc_ejam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DRAFT utility to use formulas provided as text, to calculate indicators — calc_ejam","text":"","code":"calc_ejam(bg, keep.old = c(\"bgid\", \"pop\"), keep.new = \"all\", formulas)"},{"path":"/reference/calc_ejam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DRAFT utility to use formulas provided as text, to calculate indicators — calc_ejam","text":"bg data.frame//table indicators variables use keep.old names columns (variables) retain among provided bg keep.new names calculated variables retain output formulas text strings formulas","code":""},{"path":"/reference/calc_ejam.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DRAFT utility to use formulas provided as text, to calculate indicators — calc_ejam","text":"data.frame calculated variables one row per bg row","code":""},{"path":"/reference/calc_ejam.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"DRAFT utility to use formulas provided as text, to calculate indicators — calc_ejam","text":"may used doaggregate_custom()","code":""},{"path":"/reference/censusplaces.html","id":null,"dir":"Reference","previous_headings":"","what":"censusplaces (DATA) Census FIPS and other basic info on 41,414 cities/towns/places — censusplaces","title":"censusplaces (DATA) Census FIPS and other basic info on 41,414 cities/towns/places — censusplaces","text":"just list US cities similar places defined Census","code":""},{"path":"/reference/censusplaces.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"censusplaces (DATA) Census FIPS and other basic info on 41,414 cities/towns/places — censusplaces","text":"(https://www2.census.gov/geo/docs/reference/codes/PLACElist.txt) Column names:  \"EPA_REGION\" \"STATE\" \"ST_FIPS\" \"COUNTY\" \"CO_FIPS\" \"PLACE\" \"PL_FIPS\"","code":""},{"path":"/reference/colcounter.html","id":null,"dir":"Reference","previous_headings":"","what":"Count columns with Value (at or) above (or below) threshold — colcounter","title":"Count columns with Value (at or) above (or below) threshold — colcounter","text":"Count columns Value () () threshold","code":""},{"path":"/reference/colcounter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count columns with Value (at or) above (or below) threshold — colcounter","text":"","code":"colcounter(   x,   threshold,   or.tied = TRUE,   na.rm = TRUE,   below = FALSE,   one.cut.per.col = FALSE )"},{"path":"/reference/colcounter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count columns with Value (at or) above (or below) threshold — colcounter","text":"x Data.frame matrix numbers compared threshold value. threshold numeric threshold value compare .tied TRUE, include ties (value x equals threshold) na.rm TRUE, used colcounter count non-NA columns given row TRUE, count x threshold threshold one.cut.per.col FALSE, compare 1 threshold x. TRUE, specify one threshold per column.","code":""},{"path":"/reference/colcounter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count columns with Value (at or) above (or below) threshold — colcounter","text":"vector counts long NROW(x)","code":""},{"path":[]},{"path":"/reference/colcounter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count columns with Value (at or) above (or below) threshold — colcounter","text":"","code":"if (FALSE) {  pdata <- data.frame(a=rep(80,4),b=rep(93,4), col3=c(49,98,100,100))   ### pdata <- EJAM::blockgroupstats[ , names_e_pctile]   ## or ## pdata <- ejscreen package file bg22[ , ejscreen package file names.e.pctile]  pcuts <-  5 * (0:20)  # <- as.vector(keystats_e['highcut', ]) colcounter_summary(        pdata, pcuts) colcounter_summary_pct(    pdata, pcuts) colcounter_summary_cum(    pdata, pcuts) colcounter_summary_cum_pct(pdata, pcuts) colcounter_summary_cum_pct(pdata, 5 * (10:20))  x80 <- colcounter(pdata, threshold = 80, or.tied = T) x95 <- colcounter(pdata, threshold = 95, or.tied = T) table(x95) tablefixed(x95, NCOL(pdata)) cbind(at80=tablefixed(x80, NCOL(pdata)), at95=tablefixed(x95, NCOL(pdata)))   }"},{"path":"/reference/colcounter_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize how many rows have N columns at or above (or below) various thresholds? — colcounter_summary","title":"Summarize how many rows have N columns at or above (or below) various thresholds? — colcounter_summary","text":"Like colcounter() cols..count() handle multiple thresholds compare indicator, etc. Table counts, percents, cumulative counts, cumulative percents places N, least N, indicators benchmark(s)","code":""},{"path":"/reference/colcounter_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize how many rows have N columns at or above (or below) various thresholds? — colcounter_summary","text":"","code":"colcounter_summary(   x,   thresholdlist,   or.tied = TRUE,   na.rm = TRUE,   below = FALSE,   one.cut.per.col = FALSE )"},{"path":"/reference/colcounter_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize how many rows have N columns at or above (or below) various thresholds? — colcounter_summary","text":"x Data.frame matrix numbers compared threshold value, like percentiles example. thresholdlist vector numeric threshold values compare .tied TRUE, include ties (value x equals threshold) na.rm TRUE, used colcounter() count non-NA columns given row TRUE, count x threshold threshold one.cut.per.col FALSE, compare threshold x. TRUE, specify one threshold use column.","code":""},{"path":"/reference/colcounter_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize how many rows have N columns at or above (or below) various thresholds? — colcounter_summary","text":"table frequency counts","code":""},{"path":[]},{"path":"/reference/colcounter_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize how many rows have N columns at or above (or below) various thresholds? — colcounter_summary","text":"","code":"pdata <- data.frame(a=rep(80,4),b=rep(93,4), col3=c(49,98,100,100))   ### pdata <- EJAM::blockgroupstats[ , names_e_pctile]  pcuts <-  5 * (0:20)  # <- as.vector(keystats_e['highcut', ]) colcounter_summary(        pdata, pcuts) colcounter_summary_pct(    pdata, pcuts) colcounter_summary_cum(    pdata, pcuts) colcounter_summary_cum_pct(pdata, pcuts) colcounter_summary_cum_pct(pdata, 5 * (10:20)) a3 <- colcounter_summary_all(    pdata, pcuts)  x80 <- colcounter(pdata, threshold = 80, or.tied = T) x95 <- colcounter(pdata, threshold = 95, or.tied = T) table(x95) tablefixed(x95, NCOL(pdata)) cbind(at80=tablefixed(x80, NCOL(pdata)), at95=tablefixed(x95, NCOL(pdata)))"},{"path":"/reference/colcounter_summary_all.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize count (and percent) of rows with exactly (and at least) N cols >= various thresholds — colcounter_summary_all","title":"Summarize count (and percent) of rows with exactly (and at least) N cols >= various thresholds — colcounter_summary_all","text":"wraps 4 functions return 4 tables: using colcounter_summary(), colcounter_summary_pct(), colcounter_summary_cum(), colcounter_summary_cum_pct() another view text explanations findings, see count_sites_with_n_high_scores()","code":""},{"path":"/reference/colcounter_summary_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize count (and percent) of rows with exactly (and at least) N cols >= various thresholds — colcounter_summary_all","text":"","code":"colcounter_summary_all(x, thresholdlist, ...)"},{"path":"/reference/colcounter_summary_all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize count (and percent) of rows with exactly (and at least) N cols >= various thresholds — colcounter_summary_all","text":"x Data.frame matrix numbers compared threshold value, like percentiles example. thresholdlist vector numeric threshold values compare ... passed 4 functions like .tied=TRUE, na.rm=TRUE, =FALSE, one.cut.per.col=FALSE","code":""},{"path":"/reference/colcounter_summary_all.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize count (and percent) of rows with exactly (and at least) N cols >= various thresholds — colcounter_summary_all","text":"table cumulative frequency counts etc., including count, cum, pct, cum_pct","code":""},{"path":[]},{"path":"/reference/colcounter_summary_all.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize count (and percent) of rows with exactly (and at least) N cols >= various thresholds — colcounter_summary_all","text":"","code":"# df <-  bg22[ , names.ej.pctile]  df <- data.frame(a=rep(80,4),b=rep(93,4), col3=c(49,98,100,100))  bench <- 5 * (0:20)  a3 <- colcounter_summary_all(df, bench)  a3[,'95',]  a3[,,'cum_pct']  a3['0',,]; a3[1,,]  a3[dim(a3)[1],,]  # a3['12',,]; a3[13,,]    if (FALSE) {  barplot(colcounter_summary_cum_pct(pdata, pcuts)[ , '80'],     ylab='% of places', xlab='# of indicators at/above threshold',     main='% of places with at least N/12 indicators >=80th percentile')   barplot(colcounter_summary(pdata, pcuts)[2:13 , '95'],     ylab='# of places', xlab='# of indicators at/above threshold',     main='# of places with exactly N/12 indicators >=95th percentile')    # pdata <- ejscreen package file bg22[ , names.e.pctile]   colcounter_summary_cum_pct(pdata,c(50,80,90,95))   xs <- 1:12   plot(x=xs, y=colcounter_summary_cum_pct(pdata, 50)[xs+1],    type='b', col='gray', ylim=c(0, 100),     main='% of places with at least x/12 indicators >=Nth percentile',      ylab='% of places', xlab='# of indicators')   points(xs, colcounter_summary_cum_pct(pdata, 80)[xs+1], type='b', col='blue')   points(xs, colcounter_summary_cum_pct(pdata, 90)[xs+1], type='b', col='orange')   points(xs, colcounter_summary_cum_pct(pdata, 95)[xs+1], type='b', col='red')   legend(x = 'topright', legend = paste0('>= ', c(50, 80, 90, 95),'th percentile'),    fill = c('gray', 'blue', 'orange', 'red'))    # pdata <- bg22[ ,  names.ej.pctile]   colcounter_summary_cum_pct(pdata,c(50,80,90,95))   xs <- 1:12   plot(x=xs, y=colcounter_summary_cum_pct(pdata, 50)[xs+1],      type='b', col='gray', ylim=c(0, 40),     main='% of places with at least x/12 indicators >=Nth percentile', ylab='% of places',      xlab='# of indicators')   points(xs, colcounter_summary_cum_pct(pdata, 80)[xs+1], type='b', col='blue')   points(xs, colcounter_summary_cum_pct(pdata, 90)[xs+1], type='b', col='orange')   points(xs, colcounter_summary_cum_pct(pdata, 95)[xs+1], type='b', col='red')   legend(x = 'topright', legend = paste0('>= ', c(50, 80, 90, 95),'th percentile'),      fill = c('gray', 'blue', 'orange', 'red')) }"},{"path":"/reference/colcounter_summary_cum.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize how many rows have AT LEAST N columns at or above (or below) various thresholds — colcounter_summary_cum","title":"Summarize how many rows have AT LEAST N columns at or above (or below) various thresholds — colcounter_summary_cum","text":"See colcounter_summary() details examples","code":""},{"path":"/reference/colcounter_summary_cum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize how many rows have AT LEAST N columns at or above (or below) various thresholds — colcounter_summary_cum","text":"","code":"colcounter_summary_cum(   x,   thresholdlist,   or.tied = TRUE,   na.rm = TRUE,   below = FALSE,   one.cut.per.col = FALSE )"},{"path":"/reference/colcounter_summary_cum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize how many rows have AT LEAST N columns at or above (or below) various thresholds — colcounter_summary_cum","text":"x Data.frame matrix numbers compared threshold value, like percentiles example. thresholdlist vector numeric threshold values compare .tied TRUE, include ties (value x equals threshold) na.rm TRUE, used colcounter count non-NA columns given row TRUE, count x threshold threshold one.cut.per.col FALSE, compare threshold x. TRUE, specify one threshold use column.","code":""},{"path":[]},{"path":"/reference/colcounter_summary_cum_pct.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize what percent of rows have AT LEAST N columns at or above (or below) various thresholds — colcounter_summary_cum_pct","title":"Summarize what percent of rows have AT LEAST N columns at or above (or below) various thresholds — colcounter_summary_cum_pct","text":"Summarize percent rows LEAST N columns () various thresholds","code":""},{"path":"/reference/colcounter_summary_cum_pct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize what percent of rows have AT LEAST N columns at or above (or below) various thresholds — colcounter_summary_cum_pct","text":"","code":"colcounter_summary_cum_pct(x, thresholdlist, ...)"},{"path":"/reference/colcounter_summary_cum_pct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize what percent of rows have AT LEAST N columns at or above (or below) various thresholds — colcounter_summary_cum_pct","text":"x Data.frame matrix numbers compared threshold value, like percentiles example. thresholdlist vector numeric threshold values compare ... passed colcounter_summary_cum() like .tied=TRUE, na.rm=TRUE, =FALSE, one.cut.per.col=FALSE","code":""},{"path":[]},{"path":"/reference/colcounter_summary_pct.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize what percent of rows have N columns at or above (or below) various thresholds — colcounter_summary_pct","title":"Summarize what percent of rows have N columns at or above (or below) various thresholds — colcounter_summary_pct","text":"See colcounter_summary() details examples","code":""},{"path":"/reference/colcounter_summary_pct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize what percent of rows have N columns at or above (or below) various thresholds — colcounter_summary_pct","text":"","code":"colcounter_summary_pct(x, thresholdlist, ...)"},{"path":"/reference/colcounter_summary_pct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize what percent of rows have N columns at or above (or below) various thresholds — colcounter_summary_pct","text":"x Data.frame matrix numbers compared threshold value, like percentiles example. thresholdlist vector numeric threshold values compare ... passed colcounter_summary() like .tied=TRUE, na.rm=TRUE, =FALSE, one.cut.per.col=FALSE","code":""},{"path":[]},{"path":"/reference/convert_units.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert units of distance or area — convert_units","title":"Convert units of distance or area — convert_units","text":"convert_units converts distance area specified units specified units.","code":""},{"path":"/reference/convert_units.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert units of distance or area — convert_units","text":"","code":"convert_units(x, from = \"km\", towhat = \"mi\")"},{"path":"/reference/convert_units.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert units of distance or area — convert_units","text":"x number vector numbers converted. string specifying original units input parameter. Default 'km' kilometers. Note must units. Units can specified following: c( 'millimeter', 'millimeters', 'centimeter', 'centimeters', 'meter', 'meters', 'kilometer', 'kilometers', \"mm\", \"cm\", \"m\", \"km\", \"sqmm\", \"sqcm\", \"sqm\", \"sqkm\", \"mm2\", \"cm2\", \"m2\", \"km2\", 'inch', 'inches', 'foot', 'feet', 'yard', 'yards', 'mile', 'miles', \"\", \"ft\", \"yd\", \"mi\", \"sqin\", \"sqft\", \"sqyd\", \"sqmi\", \"in2\", 'ft2', 'yd2', 'mi2' ) Note m2 square meters square miles. towhat strings specifying new units convert . Default 'mi' miles.","code":""},{"path":"/reference/convert_units.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert units of distance or area — convert_units","text":"Returns number vector numbers length input x, element corresponding input element converted new units.","code":""},{"path":"/reference/convert_units.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert units of distance or area — convert_units","text":"function takes number, vector numbers, representing distance/length area one type specified units, miles, returns corresponding number(s) converted units, kilometers. Units can specified various ways. inputs must units. outputs must single set units well. NOTE: purposes, Census Bureau : \"ANSI standard converting square kilometers square miles used ( 1 square mile = 2.58998811 square kilometers).\" see https://www.census.gov/geo/reference/state-area.html conversions function use 2.5899881034 2.58998811 sqkm/sqmi. difference 6.6 per billion (roughly 1 152 million), less one tenth square kilometer entire USA.","code":""},{"path":[]},{"path":"/reference/convert_units.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert units of distance or area — convert_units","text":"","code":"convert_units(1, 'mi', 'km') convert_units(c(1e6, 1), 'sqm', 'sqkm')"},{"path":"/reference/counties_as_sites.html","id":null,"dir":"Reference","previous_headings":"","what":"FIPS - Analyze US Counties as if they were sites, to get EJ indicators summary for each county — counties_as_sites","title":"FIPS - Analyze US Counties as if they were sites, to get EJ indicators summary for each county — counties_as_sites","text":"FIPS - Analyze US Counties sites, get EJ indicators summary county","code":""},{"path":"/reference/counties_as_sites.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FIPS - Analyze US Counties as if they were sites, to get EJ indicators summary for each county — counties_as_sites","text":"","code":"counties_as_sites(fips)"},{"path":"/reference/counties_as_sites.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FIPS - Analyze US Counties as if they were sites, to get EJ indicators summary for each county — counties_as_sites","text":"fips County FIPS vector (ideally character numeric values), like fips_counties_from_state_abbrev(\"DE\")","code":""},{"path":"/reference/counties_as_sites.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FIPS - Analyze US Counties as if they were sites, to get EJ indicators summary for each county — counties_as_sites","text":"provides table similar output getblocksnearby(), data.table one row per blockgroup counties, pairs county fips - bgid, ejam_uniq_id (1 N) assigned county missing blockid distance ready doaggregate().","code":""},{"path":"/reference/counties_as_sites.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"FIPS - Analyze US Counties as if they were sites, to get EJ indicators summary for each county — counties_as_sites","text":"function provides one row per blockgroup. getblocksnearby_from_fips() provides one row per block. See \"Value\"","code":""},{"path":[]},{"path":"/reference/counties_as_sites.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FIPS - Analyze US Counties as if they were sites, to get EJ indicators summary for each county — counties_as_sites","text":"","code":"counties_as_sites(c('01001','72153'))  # Largest US Counties by ACS Population Totals:  blockgroupstats[ , .(ST = ST[1], countypop = sum(pop)),   by=.(FIPS = substr(bgfips,1,5))][order(-countypop),][1:20, .(   CountyPopulation = prettyNum(countypop, big.mark = \",\"), FIPS, ST)]"},{"path":"/reference/count_sites_with_n_high_scores.html","id":null,"dir":"Reference","previous_headings":"","what":"Answers questions like What % of sites have at least 1 demog. indicator >2x state avg? — count_sites_with_n_high_scores","title":"Answers questions like What % of sites have at least 1 demog. indicator >2x state avg? — count_sites_with_n_high_scores","text":"function provides tables summary stats also text explains findings plain English. relies colcounter_summary_all()","code":""},{"path":"/reference/count_sites_with_n_high_scores.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Answers questions like What % of sites have at least 1 demog. indicator >2x state avg? — count_sites_with_n_high_scores","text":"","code":"count_sites_with_n_high_scores(   scores,   thresholds = c(1.01, 1.5, 2, 3, 5, 10),   xwide = c(\"statewide\", \"nationwide\")[1] )"},{"path":"/reference/count_sites_with_n_high_scores.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Answers questions like What % of sites have at least 1 demog. indicator >2x state avg? — count_sites_with_n_high_scores","text":"scores scores table one row per place one column per indicator thresholds thresholds vector numbers benchmarks. Assuming indicators scores table ratios average, thresholds example, 1.50, 2, etc. represent ratios 1.5x 2x etc. xwide must \"statewide\" \"nationwide\" -- used text output describes findings.","code":""},{"path":"/reference/count_sites_with_n_high_scores.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Answers questions like What % of sites have at least 1 demog. indicator >2x state avg? — count_sites_with_n_high_scores","text":"Returns list two named elements, \"stats\" \"text\" stats 3-dimensional array numbers. See dimnames(output$stats).","code":""},{"path":"/reference/count_sites_with_n_high_scores.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Answers questions like What % of sites have at least 1 demog. indicator >2x state avg? — count_sites_with_n_high_scores","text":"Helps provide stat summaries : (x%) (sites) least (N) (YTYPE )indicators least (R) times (State/National average)","code":""},{"path":"/reference/count_sites_with_n_high_scores.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Answers questions like What % of sites have at least 1 demog. indicator >2x state avg? — count_sites_with_n_high_scores","text":"","code":"# x <- ejamit(testpoints_100, radius = 1) x <- testoutput_ejamit_1000pts_1miles  out <- x$results_bysite out <- setDF(copy(out)) ratio_benchmarks <- c(1.01, 1.50, 2, 3, 5, 10) ratiodata <- out[, names_d_ratio_to_state_avg]  findings = count_sites_with_n_high_scores(out) dimnames(findings) findings$text[2] findings$stats[ , , 1] findings$stats[ , 1, ] findings$stats[ 1, , ]"},{"path":"/reference/dataload_from_entirefolder.html","id":null,"dir":"Reference","previous_headings":"","what":"dataload_from_entirefolder — dataload_from_entirefolder","title":"dataload_from_entirefolder — dataload_from_entirefolder","text":"Loads global environment .rda files found specified folder","code":""},{"path":"/reference/dataload_from_entirefolder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dataload_from_entirefolder — dataload_from_entirefolder","text":"","code":"dataload_from_entirefolder(folder = \"./data\")"},{"path":"/reference/dataload_from_entirefolder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"dataload_from_entirefolder — dataload_from_entirefolder","text":"folder path","code":""},{"path":"/reference/dataload_from_entirefolder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"dataload_from_entirefolder — dataload_from_entirefolder","text":"nothing. just loads global envt","code":""},{"path":"/reference/dataload_from_local.html","id":null,"dir":"Reference","previous_headings":"","what":"Load datasets from local disk folder — dataload_from_local","title":"Load datasets from local disk folder — dataload_from_local","text":"Utility analysts / developers store large block / data locally instead redownloading","code":""},{"path":"/reference/dataload_from_local.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load datasets from local disk folder — dataload_from_local","text":"","code":"dataload_from_local(   varnames = c(c(\"blockwts\", \"blockpoints\", \"blockid2fips\", \"quaddata\"), \"bgej\",     \"bgid2fips\", c(\"frs\", \"frs_by_programid\", \"frs_by_naics\", \"frs_by_sic\",     \"frs_by_mact\"))[1:4],   ext = c(\".arrow\", \".rda\")[1],   fun = c(\"arrow::read_ipc_file\", \"load\")[1],   envir = globalenv(),   folder_local_source = NULL,   justchecking = FALSE,   testing = FALSE )"},{"path":"/reference/dataload_from_local.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load datasets from local disk folder — dataload_from_local","text":"varnames use defaults, vector names like \"bgej\" use \"\" get available ext use defaults fun use defaults envir use defaults. see dataload_from_pins() folder_local_source local folder path. see dataload_from_pins() justchecking use defaults. see dataload_from_pins() testing use defaults","code":""},{"path":"/reference/dataload_from_local.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load datasets from local disk folder — dataload_from_local","text":"vector paths files (derived varnames) actually found folder_local_source, already memory, just ones loaded disk already memory found disk locally.","code":""},{"path":"/reference/dataload_from_local.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Load datasets from local disk folder — dataload_from_local","text":"See dataload_from_pins() also. rm(bgid2fips, blockid2fips, blockpoints, blockwts, quaddata) dataload_from_local(folder_local_source = '.')","code":""},{"path":"/reference/dataload_from_package.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility to load a couple of datasets using data immediately instead of relying on lazy loading — dataload_from_package","title":"Utility to load a couple of datasets using data immediately instead of relying on lazy loading — dataload_from_package","text":"Utility load couple datasets using data immediately instead relying lazy loading","code":""},{"path":"/reference/dataload_from_package.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility to load a couple of datasets using data immediately instead of relying on lazy loading — dataload_from_package","text":"","code":"dataload_from_package(   olist = c(\"blockgroupstats\", \"usastats\", \"statestats\"),   envir = globalenv() )"},{"path":"/reference/dataload_from_package.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility to load a couple of datasets using data immediately instead of relying on lazy loading — dataload_from_package","text":"olist vector strings giving names objects load using data(). also include large datasets slow lazyload always needed: \"frs\", \"frs_by_programid \", \"frs_by_naics\", etc. envir environment loaded","code":""},{"path":"/reference/dataload_from_package.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility to load a couple of datasets using data immediately instead of relying on lazy loading — dataload_from_package","text":"Nothing","code":""},{"path":"/reference/dataload_from_package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Utility to load a couple of datasets using data immediately instead of relying on lazy loading — dataload_from_package","text":"See also read_builtin() function readr package! Default load datasets memory immediately. blockgroupstats, usastats, statestats, others always essential EJAM, frs frs_by_programid huge datasets (frs_by_sic frs_by_naics) always used - find regulated facilities ID, etc. frs-related datasets can roughly 1.5 GB RAM, perhaps.","code":""},{"path":[]},{"path":"/reference/dataload_from_package.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility to load a couple of datasets using data immediately instead of relying on lazy loading — dataload_from_package","text":"","code":"x <- datapack(\"EJAM\")   subset(x, x$size >= 0.1) # at least 100 KB   grep(\"names_\", x$Item, value = T, ignore.case = T, invert = T) # most were like names_d, etc.   ls()   data(\"avg.in.us\", package=\"EJAM\") # lazy load an object into memory and make it visible to user   ls()   rm(avg.in.us, x)"},{"path":"/reference/dataload_from_pins.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility to download / load datasets from pin board — dataload_from_pins","title":"Utility to download / load datasets from pin board — dataload_from_pins","text":"Utility download / load datasets pin board","code":""},{"path":"/reference/dataload_from_pins.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility to download / load datasets from pin board — dataload_from_pins","text":"","code":"dataload_from_pins(   varnames = c(c(\"blockwts\", \"blockpoints\", \"blockid2fips\", \"quaddata\"), \"bgej\",     \"bgid2fips\", c(\"frs\", \"frs_by_programid\", \"frs_by_naics\", \"frs_by_sic\",     \"frs_by_mact\"))[1:4],   boardfolder = \"Mark\",   auth = \"auto\",   server = \"https://rstudio-connect.dmap-stage.aws.epa.gov\",   folder_local_source = NULL,   envir = globalenv(),   justchecking = FALSE )"},{"path":"/reference/dataload_from_pins.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility to download / load datasets from pin board — dataload_from_pins","text":"varnames character vector names R objects get board, set \"\" load boardfolder needed specify different folder default auth See help documentation pins::board_connect() server needed specify server default (might stored envt variable CONNECT_SERVER registered via rsconnect package). Note auth = \"envvar\" looks CONNECT_SERVER get name server needs full url starting https:// - see help board_connect folder_local_source path local folder look locally saved copies case pins board reachable user. envir needed specify environment default, e.g., globalenv() parent.frame() justchecking can set TRUE just see list pins stored board","code":""},{"path":"/reference/dataload_from_pins.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility to download / load datasets from pin board — dataload_from_pins","text":"justchecking = FALSE, returns vector names objects now memory specified envir, either already memory loaded local disk successfully downloaded. justchecking = TRUE, however, returns vector names objects found specified pin board (NULL connect) regardless whether already environment, regardless whether specified among varnames, related EJAM .","code":""},{"path":"/reference/dataload_from_pins.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Utility to download / load datasets from pin board — dataload_from_pins","text":"work VPN credentials already set user : board <- pins::board_connect(auth = \"rsconnect\") work true plus two environment variables created:","code":"board <- pins::board_connect(auth = 'manual',     server = Sys.getenv(\"CONNECT_SERVER\"),     key = Sys.getenv(\"CONNECT_API_KEY\")  ) after Sys.setenv(CONNECT_SERVER = \"https://rstudio-connect.dmap-stage.aws.epa.gov\")    and   Sys.setenv(CONNECT_API_KEY =  correct-API-key-goes-here  )"},{"path":"/reference/datapack.html","id":null,"dir":"Reference","previous_headings":"","what":"UTILITY - See names and size of data sets in package(s) - internal utility function — datapack","title":"UTILITY - See names and size of data sets in package(s) - internal utility function — datapack","text":"Wrapper data() can get memory size objects","code":""},{"path":"/reference/datapack.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UTILITY - See names and size of data sets in package(s) - internal utility function — datapack","text":"","code":"datapack(pkg = ejampackages, len = 30, sortbysize = TRUE, simple = TRUE)"},{"path":"/reference/datapack.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"UTILITY - See names and size of data sets in package(s) - internal utility function — datapack","text":"pkg character vector giving package(s) look data sets len affects printed console - specifies number characters limit Title , making easier see console. sortbysize TRUE (simple=F), sort increasing size object, within package, alpha. simple FALSE get object sizes, etc., TRUE just get names package, like data(package = \"EJAM\")$results[, c(\"Package\", 'Item')]","code":""},{"path":"/reference/datapack.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"UTILITY - See names and size of data sets in package(s) - internal utility function — datapack","text":"simple = TRUE, data.frame colnames Package Item. simple = FALSE, data.frame colnames Package, Item, size, Title.Short","code":""},{"path":"/reference/datapack.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"UTILITY - See names and size of data sets in package(s) - internal utility function — datapack","text":"rely much - quick utility. may create leave objects global envt - careful .","code":""},{"path":"/reference/datapack.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"UTILITY - See names and size of data sets in package(s) - internal utility function — datapack","text":"","code":"# see just a vector of the data object names  data(package = \"EJAM\")$results[, 'Item']    # not actually sorted within each pkg by default  datapack()  # not actually sorted by default  datapack(\"EJAM\")$Item  ##datapack(\"MASS\", simple=T)    # sorted by size if simple=F  ##datapack(\"datasets\", simple=F)  x <- datapack(simple = F)  # sorted by size already, to see largest ones among all these pkgs:  tail(x[, 1:3], 20)    # sorted alphabetically within each pkg  x[order(x$Package, x$Item), 1:2]  # sorted alphabetically across all the pkgs  x[order(x$Item), 1:2]"},{"path":"/reference/datawrite_to_aws.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility NOT YET WORKING - AccessDenied — datawrite_to_aws","title":"Utility NOT YET WORKING - AccessDenied — datawrite_to_aws","text":"Utility write object(s) like dataset DMAP Data Commons, formatted .arrow .rda","code":""},{"path":"/reference/datawrite_to_aws.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility NOT YET WORKING - AccessDenied — datawrite_to_aws","text":"","code":"datawrite_to_aws(   varnames = c(\"bgid2fips\", \"blockid2fips\", \"blockpoints\", \"blockwts\", \"quaddata\"),   ext = c(\".arrow\", \".rda\")[2],   fun = c(\"arrow::write_ipc_file\", \"save\")[2],   mybucket = \"dmap-data-commons-oa\",   mybucketfolder = \"EJAM\",   justchecking = TRUE )"},{"path":"/reference/datawrite_to_aws.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility NOT YET WORKING - AccessDenied — datawrite_to_aws","text":"varnames vector object names upload ext file .extension appropriate format fun, like \".rda\" \".arrow\" fun function use, character string, like \"arrow::write_ipc_file\" fun ignored ext=\".rda\" since just uses s3save() mybucket need change mybucketfolder need change justchecking set FALSE actually upload instead just viewing console commands used, test/check ","code":""},{"path":"/reference/datawrite_to_aws.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility NOT YET WORKING - AccessDenied — datawrite_to_aws","text":"paths objects server","code":""},{"path":"/reference/datawrite_to_aws.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Utility NOT YET WORKING - AccessDenied — datawrite_to_aws","text":"mybucket <-  'dmap-data-commons-oa' # bucket_contents <- data.table::rbindlist(   bucket_contents","code":"get_bucket(bucket = mybucket, prefix = \"EJAM\"),    fill = TRUE      )"},{"path":"/reference/datawrite_to_local.html","id":null,"dir":"Reference","previous_headings":"","what":"Save datasets during package development — datawrite_to_local","title":"Save datasets during package development — datawrite_to_local","text":"Utility write large object(s) like EJAM datasets local disk convenience app/pkg development, formatted .arrow .rda","code":""},{"path":"/reference/datawrite_to_local.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save datasets during package development — datawrite_to_local","text":"","code":"datawrite_to_local(   varnames = c(\"bgid2fips\", \"blockid2fips\", \"blockpoints\", \"blockwts\", \"quaddata\"),   ext = c(\".arrow\", \".rda\")[1],   folder_local_source = \"~/../Downloads\",   fun = c(\"arrow::write_ipc_file\", \"save\")[1],   justchecking = F,   overwrite = FALSE )"},{"path":"/reference/datawrite_to_local.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save datasets during package development — datawrite_to_local","text":"varnames vector object names ext file .extension appropriate format, \".rda\" \".arrow\" folder_local_source path local folder without slash end fun function use, character string, like \"arrow::write_ipc_file\" fun ignored ext=\".rda\" since just uses save() justchecking set FALSE actually save instead just seeing console info commands used, test/check overwrite Set TRUE overwrite file exists already, new copy.","code":""},{"path":"/reference/datawrite_to_local.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save datasets during package development — datawrite_to_local","text":"paths objects requested saved whether actually done","code":""},{"path":[]},{"path":"/reference/datawrite_to_local.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save datasets during package development — datawrite_to_local","text":"","code":"# datawrite_to_local(ext = \".arrow\", folder_local_source = \".\", justchecking = F, overwrite = T)"},{"path":"/reference/distance_by_group.html","id":null,"dir":"Reference","previous_headings":"","what":"distance_by_group - Avg distance of each demog group (of multiple groups)\r\nSame as plot_distance_mean_by_group() but no plot by default — distance_by_group","title":"distance_by_group - Avg distance of each demog group (of multiple groups)\r\nSame as plot_distance_mean_by_group() but no plot by default — distance_by_group","text":"Shows distance sites, residents demographic group (vs everyone else)","code":""},{"path":"/reference/distance_by_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"distance_by_group - Avg distance of each demog group (of multiple groups)\r\nSame as plot_distance_mean_by_group() but no plot by default — distance_by_group","text":"","code":"distance_by_group(   results_bybg_people,   demogvarname = NULL,   demoglabel = NULL,   returnwhat = \"table\",   graph = FALSE )"},{"path":"/reference/distance_by_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"distance_by_group - Avg distance of each demog group (of multiple groups)\r\nSame as plot_distance_mean_by_group() but no plot by default — distance_by_group","text":"results_bybg_people data.table doaggregate()$results_bybg_people demogvarname vector column names like \"pctlowinc\" etc. demoglabel vector labels like \"Low Income Residents\" etc. returnwhat returnwhat \"table\", invisibly returns data.frame group, ratio, avg_distance_for_group, avg_distance_for_nongroup. returnwhat \"plotfilename\" returns full path including filename .png tempdir returnwhat \"plot\" returns plot object needed table_xls_format() ?","code":""},{"path":"/reference/distance_by_group.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"distance_by_group - Avg distance of each demog group (of multiple groups)\r\nSame as plot_distance_mean_by_group() but no plot by default — distance_by_group","text":"see parameter returnwhat","code":""},{"path":"/reference/distance_by_group.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"distance_by_group - Avg distance of each demog group (of multiple groups)\r\nSame as plot_distance_mean_by_group() but no plot by default — distance_by_group","text":"see examples plot_distance_cdf_by_group()","code":""},{"path":[]},{"path":[]},{"path":"/reference/distance_by_group1.html","id":null,"dir":"Reference","previous_headings":"","what":"Get average distance for ONE demographic group versus everyone else — distance_by_group1","title":"Get average distance for ONE demographic group versus everyone else — distance_by_group1","text":"Get average distance ONE demographic group versus everyone else","code":""},{"path":"/reference/distance_by_group1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get average distance for ONE demographic group versus everyone else — distance_by_group1","text":"","code":"distance_by_group1(   results_bybg_people,   demogvarname = \"Demog.Index\",   demoglabel = fixcolnames(demogvarname, \"r\", \"shortlabel\") )"},{"path":"/reference/distance_by_group1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get average distance for ONE demographic group versus everyone else — distance_by_group1","text":"results_bybg_people data.table doaggregate()$results_bybg_people demogvarname e.g., \"pctlowinc\" demoglabel e.g., \"Low Income Residents\"","code":""},{"path":"/reference/distance_by_group1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get average distance for ONE demographic group versus everyone else — distance_by_group1","text":"list 2 numbers: avg_distance_for_group avg_distance_for_nongroup","code":""},{"path":"/reference/distance_by_group1.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get average distance for ONE demographic group versus everyone else — distance_by_group1","text":"Note Avg Distance range distances Demog group, & %D function distance: info blockgroup near site, means small % bgs duplicated table:   Mostly want overall (site) know avg cum distrib distances demog, (also %D function continuous distance), stats want take unique blockgroups , using shorter distance, distribution distances doublecount people. might also want see distribution distances D just 1 site? might also want see %D function continuous distance just 1 site? retain flexibility doaggregate() reports instances blockgroup-site pairings.","code":"results_bybg_people"},{"path":[]},{"path":[]},{"path":"/reference/distance_by_group_by_site.html","id":null,"dir":"Reference","previous_headings":"","what":"Ratios at each site, of avg dist of group / avg dist of everyone else near site — distance_by_group_by_site","title":"Ratios at each site, of avg dist of group / avg dist of everyone else near site — distance_by_group_by_site","text":"Like distance_by_group() multiple sites - DRAFT FUNCTION","code":""},{"path":"/reference/distance_by_group_by_site.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ratios at each site, of avg dist of group / avg dist of everyone else near site — distance_by_group_by_site","text":"","code":"distance_by_group_by_site(bybg)"},{"path":"/reference/distance_by_group_by_site.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ratios at each site, of avg dist of group / avg dist of everyone else near site — distance_by_group_by_site","text":"bybg ejamit()$results_bybg_people","code":""},{"path":"/reference/distance_by_group_by_site.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ratios at each site, of avg dist of group / avg dist of everyone else near site — distance_by_group_by_site","text":"table ratios, one col per site, one row per indicator","code":""},{"path":[]},{"path":"/reference/distance_by_group_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"distance_by_group_plot or plot_distance_cdf_by_group — distance_by_group_plot","title":"distance_by_group_plot or plot_distance_cdf_by_group — distance_by_group_plot","text":"distance_by_group_plot plot_distance_cdf_by_group","code":""},{"path":"/reference/distance_by_group_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"distance_by_group_plot or plot_distance_cdf_by_group — distance_by_group_plot","text":"","code":"distance_by_group_plot(...)"},{"path":"/reference/distance_by_group_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"distance_by_group_plot or plot_distance_cdf_by_group — distance_by_group_plot","text":"see returnwhat parameter","code":""},{"path":[]},{"path":[]},{"path":"/reference/distance_cdf_by_group_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"What percentage of this demographic group's population lives less than X miles from a site? — distance_cdf_by_group_plot","title":"What percentage of this demographic group's population lives less than X miles from a site? — distance_cdf_by_group_plot","text":"plots cumulative share residents found within distance, single demographic group. function, distance_cdf_by_group_plot(), based ejamit()$results_bybg_people, provides block group resolution information distance. block resolution analysis distance group, see plot_distance_by_pctd().","code":""},{"path":"/reference/distance_cdf_by_group_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"What percentage of this demographic group's population lives less than X miles from a site? — distance_cdf_by_group_plot","text":"","code":"distance_cdf_by_group_plot(   results_bybg_people,   radius_miles = round(max(results_bybg_people$distance_min_avgperson, na.rm = T), 1),   demogvarname = \"Demog.Index\",   demoglabel = demogvarname,   color1 = \"red\",   color2 = \"black\" )"},{"path":"/reference/distance_cdf_by_group_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"What percentage of this demographic group's population lives less than X miles from a site? — distance_cdf_by_group_plot","text":"results_bybg_people data.table doaggregate()$results_bybg_people radius_miles miles radius max distance analyzed demogvarname name column results_bybg_people, e.g., \"pctlowinc\" demoglabel friendly text name labelling graphic, like \"Low income residents\" color1 color like \"red\" demographic group interest color2 color like \"gray\" everyone else","code":""},{"path":"/reference/distance_cdf_by_group_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"What percentage of this demographic group's population lives less than X miles from a site? — distance_cdf_by_group_plot","text":"invisibly returns full table sorted distances blockgroups, cumulative count demog group block group's distance, cumulative count everyone else block group","code":""},{"path":"/reference/distance_cdf_by_group_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"What percentage of this demographic group's population lives less than X miles from a site? — distance_cdf_by_group_plot","text":"function distance_cdf_by_group_plot SLOW - ***needs optimized","code":""},{"path":[]},{"path":[]},{"path":"/reference/distance_mean_by_group.html","id":null,"dir":"Reference","previous_headings":"","what":"Avg distance of each demog group (of multiple groups) - Table or Plot — distance_mean_by_group","title":"Avg distance of each demog group (of multiple groups) - Table or Plot — distance_mean_by_group","text":"distance_mean_by_group() distance_mean_by_group() synonymous, like plot_distance_mean_by_group(), show table plot, default.","code":""},{"path":"/reference/distance_mean_by_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Avg distance of each demog group (of multiple groups) - Table or Plot — distance_mean_by_group","text":"","code":"distance_mean_by_group(   results_bybg_people,   demogvarname = NULL,   demoglabel = fixcolnames(demogvarname, \"r\", \"shortlabel\"),   returnwhat = \"table\",   graph = FALSE )"},{"path":"/reference/distance_mean_by_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Avg distance of each demog group (of multiple groups) - Table or Plot — distance_mean_by_group","text":"results_bybg_people data.table doaggregate()$results_bybg_people demogvarname vector column names like \"pctlowinc\" etc. demoglabel vector labels like \"Low Income Residents\" etc. returnwhat returnwhat \"table\", invisibly returns data.frame group, ratio, avg_distance_for_group, avg_distance_for_nongroup. returnwhat \"plotfilename\" returns full path including filename .png tempdir returnwhat \"plot\" returns plot object needed table_xls_format() ?","code":""},{"path":"/reference/distance_mean_by_group.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Avg distance of each demog group (of multiple groups) - Table or Plot — distance_mean_by_group","text":"see parameter returnwhat","code":""},{"path":"/reference/distance_mean_by_group.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Avg distance of each demog group (of multiple groups) - Table or Plot — distance_mean_by_group","text":"see examples plot_distance_cdf_by_group()","code":""},{"path":[]},{"path":[]},{"path":"/reference/distance_via_surfacedistance.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert surface distance to actual distance — distance_via_surfacedistance","title":"Convert surface distance to actual distance — distance_via_surfacedistance","text":"","code":"\\preformatted{      Just a simple formula:     earthRadius_miles <- 3959     angle_rad <- x/earthRadius_miles     # Calculate  radius * cord length     return( earthRadius_miles * 2*sin(angle_rad/2) )     }"},{"path":"/reference/distance_via_surfacedistance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert surface distance to actual distance — distance_via_surfacedistance","text":"","code":"distance_via_surfacedistance(x)"},{"path":"/reference/distance_via_surfacedistance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert surface distance to actual distance — distance_via_surfacedistance","text":"x surface distance miles","code":""},{"path":"/reference/doaggregate.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize environmental and demographic indicators at each location and overall — doaggregate","title":"Summarize environmental and demographic indicators at each location and overall — doaggregate","text":"getblocksnearby() doaggregate() two key functions run ejamit(). doaggregate() takes set sites like facilities set blocks near , combines indicator scores block groups, aggregates numbes within place across overall.","code":""},{"path":"/reference/doaggregate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize environmental and demographic indicators at each location and overall — doaggregate","text":"","code":"doaggregate(   sites2blocks,   sites2states_or_latlon = NA,   radius = NULL,   countcols = NULL,   popmeancols = NULL,   calculatedcols = NULL,   subgroups_type = \"nh\",   include_ejindexes = FALSE,   calculate_ratios = TRUE,   extra_demog = TRUE,   need_proximityscore = FALSE,   infer_sitepoints = FALSE,   called_by_ejamit = FALSE,   updateProgress = NULL,   silentinteractive = TRUE,   testing = FALSE,   ... )"},{"path":"/reference/doaggregate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize environmental and demographic indicators at each location and overall — doaggregate","text":"sites2blocks data.table distances miles sites (facilities) nearby Census block internal points, columns ejam_uniq_id, blockid, distance, created getblocksnearby  function. See sites2blocks_example10pts_1miles aka testoutput_getblocksnearby_10pts_1miles dataset package, input function sites2states_or_latlon data.table just data.frame, columns ejam_uniq_id (unique one sites2blocks) ST (2-character State abbreviation) lat lon radius Optional radius miles limit analysis . default function uses distances provided output getblocksnearby(), reports radius estimated rounded max distance values inputs doaggregate. may cases want run getblocksnearby() 10 miles, say, long list sites (1,000 , say), get summary results 1, 3, 5, 10 miles without redo getblocksnearby() part radius. lets just run getblocksnearby() largest radius, query results get doaggregate() summarize distance less equal original radius analyzed getblocksnearby(). countcols character vector names variables  aggregate within buffer using sum counts, like, example, number people poverty ratio known, count exact denominator needed correctly calculate percent low income. popmeancols character vector names variables aggregate within buffer using population weighted mean. calculatedcols character vector names variables aggregate within buffer using formulas specified. subgroups_type Optional (uses default). Set \"nh\" non-hispanic race subgroups Non-Hispanic White Alone, nhwa others names_d_subgroups_nh; \"alone\" EJScreen v2.2 style race subgroups    White Alone, wa others names_d_subgroups_alone; \"\" versions. Possibly another option \"original\" \"default\" work progress. include_ejindexes whether calculate EJ Indexes return information calculate_ratios whether calculate return ratio indicator US State overall mean extra_demog include indicators EJScreen v2.2 report, language, age groups, gender, percent disability, poverty, etc. need_proximityscore whether calculate proximity scores infer_sitepoints set TRUE try infer lat,lon site around blocks sites2blocks found. lat,lon site approximated average nearby blocks, although accurate slower way use reported distance 3 furthest block points triangulate called_by_ejamit Set TRUE ejamit() suppress outputs even ejamit(silentinteractive=F) updateProgress progress bar function used shiny app silentinteractive Set TRUE see results RStudio console. Set FALSE prevent long output showing console RStudio interactive mode testing used testing function ... pass another function? used currently.","code":""},{"path":"/reference/doaggregate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize environmental and demographic indicators at each location and overall — doaggregate","text":"list named elements: results_overall   one row data.table, like results_by_site, just one row aggregated results unique residents. results_by_site   results individual sites (buffers) - data.table results, one row per ejam_uniq_id, one column per indicator results_bybg_people  results block group, allow showing distribution indicator across everyone within demographic group. longnames  descriptive long names indicators outputs count_of_blocks_near_multiple_sites  additional detail","code":""},{"path":"/reference/doaggregate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summarize environmental and demographic indicators at each location and overall — doaggregate","text":"examples, see getblocksnearbyviaQuadTree() doaggregate() code run getblocksnearby() (related function polygons FIPS Census units) identified blocks nearby. doaggregate() aggregates blockgroup scores create summary indicator, raw score US percentile State percentile, buffer (.e., near facility): SUMS COUNTS: population count, number households Hispanics, etc. POPULATION-WEIGHTED MEANS:  Environmental indicators, also percentage indicator universe (denominator) population count (rather households, persons age 25up, etc.) EJ Indexes: way EJScreen apparently finding pop wtd mean EJ Index raw scores, EJ Index formula applied summarized demographic score aggregated envt number. CALCULATED FORMULA: Buffer overall score calculated via formulas using aggregated counts, percent low income = sum counts low income / sum counts denominator, case count poverty ratio known. Assuming rounding errors, method give result using weighted mean percentages, weights correct denominator like count poverty ratio known. LOOKED : Aggregated scores converted percentile terms via lookup tables (US State version). function requires following datasets: blockwts: data.table columns: blockid , bgid, blockwt quaddata data.table used create localtree, quad tree index block points (localtree created package loaded) blockgroupstats - data.table (EJScreen demographic environmental data blockgroup?)","code":""},{"path":[]},{"path":"/reference/dupenames.html","id":null,"dir":"Reference","previous_headings":"","what":"UTILITY - check conflicting exported function or data names — dupenames","title":"UTILITY - check conflicting exported function or data names — dupenames","text":"See -named objects (functions data) exported (installed) packages","code":""},{"path":"/reference/dupenames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UTILITY - check conflicting exported function or data names — dupenames","text":"","code":"dupenames(   pkg = EJAM::ejampackages,   sortbypkg = FALSE,   compare.functions = TRUE )"},{"path":"/reference/dupenames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"UTILITY - check conflicting exported function or data names — dupenames","text":"pkg one package names vector strings. \"\" checks installed pkgs, takes long potentially. sortbypkg TRUE, just returns thing sorted package name compare.functions TRUE, sends console inf whether body formals functions identical functions name different packages. checks first 2 copies, additional ones (3+ pkgs use name)","code":""},{"path":"/reference/dupenames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"UTILITY - check conflicting exported function or data names — dupenames","text":"data.frame columns Package, Object name (NA dupes)","code":""},{"path":"/reference/dupenames.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"UTILITY - check conflicting exported function or data names — dupenames","text":"utility find -named exported objects (functions datasets) within source code 2+ packages, see search path, dev renaming / moving functions/ packages","code":""},{"path":[]},{"path":"/reference/dupeRfiles.html","id":null,"dir":"Reference","previous_headings":"","what":"UTILITY - check conflicting sourcefile names — dupeRfiles","title":"UTILITY - check conflicting sourcefile names — dupeRfiles","text":"See -named .R files 2 sourcecode folders","code":""},{"path":"/reference/dupeRfiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UTILITY - check conflicting sourcefile names — dupeRfiles","text":"","code":"dupeRfiles(folder1 = \"../EJAM/R\", folder2 = \"./R\")"},{"path":"/reference/dupeRfiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"UTILITY - check conflicting sourcefile names — dupeRfiles","text":"folder1 path folder R source files folder2 path folder R source files, defaults \"./R\"","code":""},{"path":"/reference/dupeRfiles.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"UTILITY - check conflicting sourcefile names — dupeRfiles","text":"useful shiny app package, ejamlite EJAMejscreenapi copies EJAM files. See dupenames() packages.","code":""},{"path":"/reference/EJAM.html","id":null,"dir":"Reference","previous_headings":"","what":"EJAM - Environmental Justice Analysis Multisite tool — EJAM","title":"EJAM - Environmental Justice Analysis Multisite tool — EJAM","text":"EJAM provides functions data fast proximity analysis large number locations, \"buffers\", summarizing conditions location. summarizes conditions conditions average resident buffer location. buffer location defined area within specified distance specified site. site facility package defined single geographic point (latitude longitude). functions somewhat generalized, specific datasets included enable environmental justice (EJ) proximity analysis US EPA's EJScreen data, including environmental indicators (e.g., local traffic score, estimated PM2.5 concentration) demographic indicators (e.g., percent low-income), populations estimated live within specified distance (e.g., 1 mile) one sites, typically EPA-regulated facilities. means tools can provide information EJScreen standard report provides, large number reports (one site).","code":""},{"path":"/reference/EJAM.html","id":"vignette","dir":"Reference","previous_headings":"","what":"Vignette","title":"EJAM - Environmental Justice Analysis Multisite tool — EJAM","text":"Walk-guides available via vignette(package = \"EJAM\") <EJAM-vignette.html> pdf html format documentation functions data <EJAM.pdf> <EJAM.html> Also see README file.","code":""},{"path":"/reference/EJAM.html","id":"key-functions-","dir":"Reference","previous_headings":"","what":"Key Functions:","title":"EJAM - Environmental Justice Analysis Multisite tool — EJAM","text":"run_app() Launch web app (R Shiny interface) ejamit() Get results (tables, maps, plots) without web app interface, largely using key functions: Getting key datasets indexing blocks, yet done, via dataload_from_pins() indexblocks() getblocksnearby()  fast method buffer, identifying blocks within specified distance point(s) like sites/facilities, get distance . doaggregate() Summarize demographic environmental indicators blockgroupstats.rda (see ) within place, weighted using blockwts (average resident within specified distance site (e.g., facility), shapefile FIPS-defined location).","code":""},{"path":"/reference/EJAM.html","id":"data-files-available-as-examples-","dir":"Reference","previous_headings":"","what":"Data files available as examples:","title":"EJAM - Environmental Justice Analysis Multisite tool — EJAM","text":"Excel files read ejamit() getblocksnearby() local source package files EJAM/inst/testdata/latlon testpoints_10.rda  larger datasets provide random test points data.frame columns lat lon (unique site id) testpoints_n() can generate random test points places weighted population, FRS facilities, blockgroup, area, block testoutput_getblocksnearby_10pts_1miles.rda larger datasets sample outputs getblocksnearbyviaQuadTree just getblocksnearby(), try inputs doaggregate()","code":""},{"path":"/reference/EJAM.html","id":"specifying-buffer-sites-facilities-","dir":"Reference","previous_headings":"","what":"Specifying buffer sites / facilities:","title":"EJAM - Environmental Justice Analysis Multisite tool — EJAM","text":"user can specify locations, via interface, shiny app returns sitepoints, data.table fields lat, lon, can unique site id. user-specified table maybe 100, 1k, 10k+ points (centers circular buffers). Examples test data One can specify sitepoints, lat/lon coordinates places analyzed (sites facilities), can specify areas analyzed general, one ways: Point locations uploaded (lat, lon coordinates) - regulated facilities already locations, types points uploaded spreadsheet. Shapefiles uploaded directly define areas include instead using circular buffers around points FIPS specify list counties tracts blockgroups, example, compared. NAICS SIC code Industry categories selected list codes names, uploaded table. NAICS 2-digit 6-digit codes specify sectors types facilities, 325 - Chemical Manufacturing, 325211 - Plastics Material Resin Manufacturing. Facility IDs - EPA Facility Registry Service (FRS) ID numbers FRS Program ID numbers Program System Types - picking whole category regulated sites, GHG reporters TRI reporters. MACT Subpart specify Clean Air Act NESHAP program Max. Achievable Control Tech. source categories (types air emissions sources) defined subpart OOOO. additional details : - INDUSTRIAL SECTOR/ NAICS:   latlon_from_naics() takes NAICS codes returns data.table site points. Relies ** frs_by_naics.rda**  data.table, needed get lat lon naics. Need update FRS data used regularly, ideally frequently. 2023 version columns   REGISTRY_ID,  NAICS, lat, lon NAICS codes also can selected text search industry names categories codes, via naics_from_any() - FACILITY ID PROGRAM ID:   frs_from_regid() takes REGISTRY_ID values returns data.table site points. Relies frs data.table columns REGISTRY_ID, lat, lon, etc. frs_from_programid() takes EPA program-specific site ID values returns data.table site points. Relies frs_by_programid data.table columns program, pgm_sys_id, REGISTRY_ID, lat, lon - LAT/LON POINT:","code":"Interface lets user select NAICS from pulldown, or type in NAICS       Interface returns a vector of one or more naics codes,      to be converted to sitepoints. Interface so user can upload FRS REGISTRY_ID or PROGRAM ID csv/xls file,       Interface returns a list of REGISTRY_ID values from a copy of the EPA facility registry service (FRS) data        to be converted to sitepoints. Interface so user can specify or upload latitude longitude (and optionally a unique site id and other columns like sitename),      when using [ejamit()] which in turn uses [latlon_from_anything()].            The app keeps track of the sitepoints data.table with an assigned ejam_uniq_id that is just the row number."},{"path":"/reference/EJAM.html","id":"buffering-to-find-site-block-distances-","dir":"Reference","previous_headings":"","what":"Buffering to find site-block-distances:","title":"EJAM - Environmental Justice Analysis Multisite tool — EJAM","text":"Input: sitepoints data.table user picking points Columns lat, lon getblocksnearby() default uses getblocksnearbyviaQuadTree() Returns sites2blocks Requires index called localtree build dataset quaddata sites2blocks   Created getblocksnearby() passed  doaggregate() data table maybe 100k 1m rows (assume 1k blocks within 3 miles site, 100 blocks within 1 mile), sites2blocks[ , .(ejam_uniq_id, blockid, distance dist)] ejam_uniq_id    (row number 1 N site) blockid     join blockwts distance  (miles, block site) (0 irrelevant noncircular buffers, since block table one buffers, unless analysis residents within x miles edges shapes, like facility boundaries)","code":""},{"path":"/reference/EJAM.html","id":"data-files-used-for-distance-calculation-","dir":"Reference","previous_headings":"","what":"Data files used for distance calculation:","title":"EJAM - Environmental Justice Analysis Multisite tool — EJAM","text":"** quaddata.rda** data.table point location internal point 8 million Census blocks used prior startup EJAM create index stored memory, called localtree. quaddata can obtained using dataload_from_pins() localtree index made quaddata via indexblocks() (using SearchTrees package) used getblocksnearby sitepoints create temporary object called sites2blocks:","code":""},{"path":"/reference/EJAM.html","id":"summarizing-indicators-in-buffers-","dir":"Reference","previous_headings":"","what":"Summarizing indicators in buffers:","title":"EJAM - Environmental Justice Analysis Multisite tool — EJAM","text":"doaggregate() = function(sites2blocks) summarizes buffer unique residents across buffers. blockgroupstats data.table 220k rows (blockgroups) hundreds indicator columns. need bgid just bgfips, join blockwts$bgid Needs updated time EJScreen updated. bgej data.table like blockgroupstats EJ Index raw scores. usastats statestats  data.table lookup 100 percentiles means (indicator blockgroupstats, bgej) zone (USA, state DC, PR). Need update time blockgroupstats updated. Taken EJScreen data ejscreen package file lookupUSA lookupStates blockwts see dataload_from_pins() Required doaggregate(). data.table 6-8m rows blockwt  fraction parent blockgroup decennial pop one block block_radius_miles squared times pi equal land plus water area square miles blockid (integer key  join sites2blocks) bgid   integer key instead bgfips - sum(blockwt), =bgid, join blockgroupstats$bgid. bgid efficient bgfips. bgfips bgid2fips data.table","code":"INPUT IS  `sites2blocks`,     OUTPUT IS results_overall, results_bysite, and other summary stats  ####"},{"path":"/reference/EJAM.html","id":"output-results-for-user-","dir":"Reference","previous_headings":"","what":"Output results for user:","title":"EJAM - Environmental Justice Analysis Multisite tool — EJAM","text":"ejamit() (doaggregate()) provides following outputs: results_overall   one row data.table, like results_by_site, just one row aggregated results unique residents. results_by_site   results individual sites (buffers) - data.table results, one row per ejam_uniq_id (.e., site analyzed), one column per indicator results_bybg_people  results block group, allow showing distribution indicator across everyone within demographic group. longnames  descriptive long names indicators outputs count_of_blocks_near_multiple_sites  additional detail","code":""},{"path":"/reference/EJAM.html","id":"identification-of-nearby-residents-methodology-","dir":"Reference","previous_headings":"","what":"Identification of nearby residents -- methodology:","title":"EJAM - Environmental Justice Analysis Multisite tool — EJAM","text":"identification nearby residents currently done way includes 2020 Census blocks whose \"internal point\" (lat/lon provided Census Bureau) within specified distance facility point. taken EJScreen block weights file, can also independently calculated. summary aggregation \"rollup\" within buffer done calculating population-weighted average block group score among people residing buffer. Since blockgroup population counts American Community Survey (ACS) estimates, block population counts decennial census, totals blockgroup differ. amount partial blockgroup contributes buffer's overall score based estimated number residents blockgroup buffer. based fraction blockgroup population estimated buffer, fraction calculated fraction blockgroup's decennial census block population census blocks inside buffer. given block considered entirely inside entirely outside buffer, used accurately estimate fraction given block group's population inside buffer. accurate faster areal apportionment block groups. Census blocks generally small relative typical buffers accurate - least accurate small buffer distance specified extremely low density rural area block can geographically large. Although rarely ever significant issue (reasonable, useful buffer sizes), even accurate approach cases might either areal apportionment blocks, slow assumes residents evenly spread across full block's area, else approach uses higher resolution estimates residential locations even Decennial census blocks can provide, dasymetric map approach.","code":""},{"path":[]},{"path":"/reference/ejam2excel.html","id":null,"dir":"Reference","previous_headings":"","what":"Save EJAM results in a spreadsheet — ejam2excel","title":"Save EJAM results in a spreadsheet — ejam2excel","text":"ejam2excel() takes output something like ejamit() creates spreadsheet overall summary tab, site site table tab, well tabs map, plot, notes, etc. alias table_xls_from_ejam()","code":""},{"path":"/reference/ejam2excel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save EJAM results in a spreadsheet — ejam2excel","text":"","code":"ejam2excel(   ejamitout,   fname = NULL,   save_now = TRUE,   overwrite = TRUE,   launchexcel = FALSE,   interactive_console = TRUE,   ok2plot = TRUE,   in.testing = FALSE,   in.analysis_title = \"EJAM analysis\",   react.v1_summary_plot = NULL,   radius_or_buffer_in_miles = NULL,   buffer_desc = \"Selected Locations\",   radius_or_buffer_description =     \"Miles radius of circular buffer (or distance used if buffering around polygons)\",   hyperlink_colnames = c(\"EJScreen Report\", \"EJScreen Map\", \"ECHO report\"),   ... )"},{"path":"/reference/ejam2excel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save EJAM results in a spreadsheet — ejam2excel","text":"ejamitout output ejamit() fname optional name full path name file save locally, like \".xlsx\" save_now optional logical, whether save .xlsx file locally just return workbook object can later written .xlsx file using openxlsx::saveWorkbook() overwrite optional logical, passed openxlsx::saveWorkbook() launchexcel optional logical, passed table_xls_format(), whether launch browser see spreadsheet immediately interactive_console optional - set FALSE used code server. TRUE, prompts RStudio user interactively asking save downloaded file ok2plot optional logical, passed  table_xls_format(), whether safe try plot set FALSE debugging plot problems .testing optional logical .analysis_title optional title character string react.v1_summary_plot optional - plot object radius_or_buffer_in_miles optional radius miles radius_or_buffer_description optional text phrase describing places analyzed hyperlink_colnames optional names columns URLs ... optional additional parameters passed table_xls_format(), heatmap_colnames, heatmap_cuts, heatmap_colors, etc.","code":""},{"path":"/reference/ejam2report.html","id":null,"dir":"Reference","previous_headings":"","what":"View HTML Report on EJAM Results (Overall or at 1 Site) — ejam2report","title":"View HTML Report on EJAM Results (Overall or at 1 Site) — ejam2report","text":"Get URL view browser 2-page summary report similar EJScreen Community Report","code":""},{"path":"/reference/ejam2report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"View HTML Report on EJAM Results (Overall or at 1 Site) — ejam2report","text":"","code":"ejam2report(   ejamout = testoutput_ejamit_10pts_1miles,   sitenumber = NULL,   analysis_title = \"EJAM Report\",   submitted_upload_method = c(\"latlon\", \"SHP\", \"FIPS\")[1],   data_up_shp = NA,   return_html = FALSE,   launch_browser = TRUE )"},{"path":"/reference/ejam2report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"View HTML Report on EJAM Results (Overall or at 1 Site) — ejam2report","text":"ejamout output ejamit(), list data.table called results_bysite sitenumber parameter used, data.table called results_overall otherwise sitenumber number provided, report ejamout$results_bysite[sitenumber, ] number provided (param NULL) report ejamout$results_overall analysis_title optional title analysis submitted_upload_method \"latlon\" default options implemented yet. data_up_shp implemented yet, upload method SHP return_html set TRUE function return HTML object instead URL local file launch_browser set TRUE launch browser show report.","code":""},{"path":"/reference/ejam2report.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"View HTML Report on EJAM Results (Overall or at 1 Site) — ejam2report","text":"URL temp html file object depending return_html, side effect launching browser view depending return_html","code":""},{"path":"/reference/ejam2report.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"View HTML Report on EJAM Results (Overall or at 1 Site) — ejam2report","text":"relies build_community_report() used web app viewing report 1 site list sites.","code":""},{"path":"/reference/ejam2report.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"View HTML Report on EJAM Results (Overall or at 1 Site) — ejam2report","text":"","code":"#out <- ejamit(testpoints_10, radius = 3, include_ejindexes = T) out <- testoutput_ejamit_10pts_1miles  ejam2report(out) table_gt_from_ejamit_overall(out$results_overall) table_tall_from_overall(out$results_overall)  x <- ejam2report(out, sitenumber = 1) table_gt_from_ejamit_1site(out$results_bysite[1, ]) browseURL(x)"},{"path":"/reference/ejamit.html","id":null,"dir":"Reference","previous_headings":"","what":"Get an EJ analysis (demographic and environmental indicators) in or near a list of locations — ejamit","title":"Get an EJ analysis (demographic and environmental indicators) in or near a list of locations — ejamit","text":"main function EJAM runs analysis. essentially web app , analyze/summarize near set points, set polygons shapefile, list Census Units like Counties.","code":""},{"path":"/reference/ejamit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get an EJ analysis (demographic and environmental indicators) in or near a list of locations — ejamit","text":"","code":"ejamit(   sitepoints,   radius = 3,   maxradius = 31.07,   avoidorphans = FALSE,   quadtree = NULL,   fips = NULL,   shapefile_folder = NULL,   countcols = NULL,   popmeancols = NULL,   calculatedcols = NULL,   subgroups_type = \"nh\",   include_ejindexes = FALSE,   calculate_ratios = TRUE,   extra_demog = TRUE,   need_proximityscore = FALSE,   infer_sitepoints = FALSE,   need_blockwt = TRUE,   threshold1 = 90,   updateProgress = NULL,   updateProgress_getblocks = NULL,   in_shiny = FALSE,   quiet = TRUE,   parallel = FALSE,   silentinteractive = FALSE,   called_by_ejamit = TRUE,   testing = FALSE )"},{"path":"/reference/ejamit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get an EJ analysis (demographic and environmental indicators) in or near a list of locations — ejamit","text":"sitepoints data.table columns lat, lon giving point locations sites facilities around circular buffers radius miles, defining circular buffer around site point maxradius miles distance (max distance check even 1 block point within radius) avoidorphans logical TRUE, even 1 BLOCK internal point within radius SITE, keeps looking past radius, maxradius, find nearest 1 BLOCK. EJScreen case report NA, right? , EJAM really need report stats residents presumed within radius, block centroid within radius? Best estimate might report indicators nearest block centroid probably almost always one site sitting inside , ideally adjust total count fraction blockwt based area circular buffer fraction area block apparently inside . Setting TRUE can produce unexpected results, match EJScreen numbers. Note creating proximity score, contrast, instead want find nearest 1 SITE none within radius BLOCK. quadtree (pointer large quadtree object) created using indexblocks() uses SearchTree package. Takes 2-5 seconds create time needed. can automatically created package attached via .onAttach() function fips optional FIPS code vector provide using FIPS instead sitepoints specify places analyze, list US Counties tracts. Passed getblocksnearby_from_fips() shapefile_folder optional path folder shapefiles analyze polygons countcols character vector names variables aggregate within buffer using sum counts, like, example, number people poverty ratio known, count exact denominator needed correctly calculate percent low income. popmeancols character vector names variables aggregate within buffer using population weighted mean. calculatedcols character vector names variables aggregate within buffer using formulas specified. subgroups_type Optional (uses default). Set \"nh\" non-hispanic race subgroups Non-Hispanic White Alone, nhwa others names_d_subgroups_nh; \"alone\" EJScreen v2.2 style race subgroups White Alone, wa others names_d_subgroups_alone; \"\" versions. Possibly another option \"original\" \"default\" include_ejindexes whether try include EJ Indexes (assuming dataset available) - passed doaggregate() calculate_ratios whether calculate return ratio indicator US State overall averages - passed doaggregate() extra_demog include indicators v2.2 report language etc. need_proximityscore whether calculate proximity scores infer_sitepoints set TRUE try infer lat,lon site around blocks sites2blocks found. lat,lon site approximated average nearby blocks, although accurate slower way use reported distance 3 furthest block points triangulate need_blockwt fips parameter used, passed getblocksnearby_from_fips() threshold1 percentile like 80 90 95 compare percentiles \"alone\" groups like white alone (whether hispanic), \"\" may try include , possibly \"original\" \"default\" might added options - passed batch.summarize() updateProgress progress bar function passed doaggregate shiny app updateProgress_getblocks progress bar function passed getblocksnearby shiny app in_shiny fips parameter used, passed getblocksnearby_from_fips() quiet Optional. set TRUE avoid message using getblock_diagnostics(), relevant user saved output function. parallel whether use parallel processing getblocksnearby() may implemented yet. silentinteractive prevent long output showing console RStudio interactive mode, passed doaggregate() also. app server sets TRUE calling doaggregate() ejamit() default set FALSE calling doaggregate(). called_by_ejamit Set TRUE ejamit() suppress outputs even ejamit(silentinteractive=F) testing used testing function","code":""},{"path":"/reference/ejamit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get an EJ analysis (demographic and environmental indicators) in or near a list of locations — ejamit","text":"list tables results","code":""},{"path":[]},{"path":"/reference/ejamit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get an EJ analysis (demographic and environmental indicators) in or near a list of locations — ejamit","text":"","code":"# All in one step, using functions not shiny app:  out <- ejamit(testpoints_100_dt, 2)    if (FALSE) {  # Do not specify sitepoints and it will prompt you for a file,  # if in RStudio in interactive mode!  out <- ejamit(radius = 3)     # Specify facilities or sites as points for test data,    # use 1000 test facility points from the R package    testsites <- testpoints_1000_dt   # use facility points in an excel or csv file   testsites <- latlon_from_anything(    \"./inst/testdata/testpoints_207_sites_with_signif_violations_NAICS_326_ECHO.csv\")   # use facility points from a random sample of EPA-regulated facilities   testsites <- testpoints_n(1e3)        # Specify max distance from sites to look at (residents within X miles of site point)   radius <- 3.1 # miles      # Get summaries of all indicators near a set of points    out <- ejamit(testsites, radius)     # out <- ejamit(\"myfile.xlsx\", 3.1)        # out2 <- ejscreenit(testpoints_5)      # View results overall   round(t(out$results_overall), 3.1)      # View plots   # plot_distance_avg_by_group(out)     # plot_distance_cdf_by_group(out)      # View maps   mapfast(out$results_bysite, radius = 3.1)      # view results at a single site   t(out$results_bysite[1, ])   t(out$results_bysite[out$results_bysite$ejam_uniq_id == 2, ])         # if doing just 1st step of ejamit()    #  get distance between each site and every nearby Census block   s2b <- testdata_sites2blocks   s2b <- getblocksnearby(testsites, radius = radius)   s2b <- getblocksnearbyviaQuadTree(testsites, radius = radius)   getblocks_diagnostics(s2b)   plotblocksnearby(s2b)       # if doing just 2d step of ejamit()   #  get summaries of all indicators based on table of distances   out <- doaggregate(s2b, testsites) # this works now and is simpler  }"},{"path":"/reference/ejampackages.html","id":null,"dir":"Reference","previous_headings":"","what":"ejampackages (DATA) list of names of key EJAM-related R packages — ejampackages","title":"ejampackages (DATA) list of names of key EJAM-related R packages — ejampackages","text":"ejampackages (DATA) list names key EJAM-related R packages","code":""},{"path":"/reference/ejscreenapi2ejam_format.html","id":null,"dir":"Reference","previous_headings":"","what":"EJAM/EJSCREEN comparisons - Convert output of ejscreenapi_plus to format of ejamit table of sites — ejscreenapi2ejam_format","title":"EJAM/EJSCREEN comparisons - Convert output of ejscreenapi_plus to format of ejamit table of sites — ejscreenapi2ejam_format","text":"Used ejscreenit_for_ejam() make easier compare EJScreen EJAM results","code":""},{"path":"/reference/ejscreenapi2ejam_format.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EJAM/EJSCREEN comparisons - Convert output of ejscreenapi_plus to format of ejamit table of sites — ejscreenapi2ejam_format","text":"","code":"ejscreenapi2ejam_format(   ejscreenapi_plus_out,   fillmissingcolumns = FALSE,   ejamcolnames = NULL )"},{"path":"/reference/ejscreenapi2ejam_format.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"EJAM/EJSCREEN comparisons - Convert output of ejscreenapi_plus to format of ejamit table of sites — ejscreenapi2ejam_format","text":"ejscreenapi_plus_out results ejscreenapi_plus() also results ejscreenit()$table even though colnames differ, get converted case. Alternatively also can whole list output ejscreenit() just ejscreenit()$table, function figure . fillmissingcolumns optional. set TRUE want output exactly columns EJAM table , fill NA values columns provided EJScreen API. ejamcolnames optional. specified vector colnames, overrides assumed colnames taken colnames(testoutput_ejamit_10pts_1miles$results_bysite). colnames specify colnames output fillmissingcolumns = TRUE, else names(ejscreenapi_plus_out) omitted.","code":""},{"path":"/reference/ejscreenapi2ejam_format.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"EJAM/EJSCREEN comparisons - Convert output of ejscreenapi_plus to format of ejamit table of sites — ejscreenapi2ejam_format","text":"data.table just data.frame, columns found output ejamit()$results_bysite","code":""},{"path":[]},{"path":"/reference/ejscreenapi2ejam_format.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"EJAM/EJSCREEN comparisons - Convert output of ejscreenapi_plus to format of ejamit table of sites — ejscreenapi2ejam_format","text":"","code":"if (FALSE) {   y1 <- ejscreenit_for_ejam(testpoints_10[1:2, ], radius = 1)     x <- ejscreenapi_plus(testpoints_10[1:2, ], radius = 1)    y <- ejscreenapi2ejam_format(x)    ejamvars <- names(testoutput_ejamit_10pts_1miles$results_bysite)    all.equal(      names(y),       ejamvars[ejamvars %in% names(y)]   )      z <- ejscreenapi2ejam_format(x, fillmissingcolumns = T)   all.equal(names(z), ejamvars)      # for convenience also can do this:   x <- ejscreenapi2ejam_format()      }"},{"path":"/reference/ejscreenit_for_ejam.html","id":null,"dir":"Reference","previous_headings":"","what":"Get EJScreen results directly from EJScreen servers via their API — ejscreenit_for_ejam","title":"Get EJScreen results directly from EJScreen servers via their API — ejscreenit_for_ejam","text":"wrapper EJAM use ejscreenit() EJAMejscreenapi package","code":""},{"path":"/reference/ejscreenit_for_ejam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get EJScreen results directly from EJScreen servers via their API — ejscreenit_for_ejam","text":"","code":"ejscreenit_for_ejam(sitepoints, radius = 3, fillmissingcolumns = TRUE, ...)"},{"path":"/reference/ejscreenit_for_ejam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get EJScreen results directly from EJScreen servers via their API — ejscreenit_for_ejam","text":"sitepoints table lat lon columns radius miles ... passed ejscreenit()","code":""},{"path":"/reference/ejscreenit_for_ejam.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get EJScreen results directly from EJScreen servers via their API — ejscreenit_for_ejam","text":"data.table looks like output ejamit()$results_bysite","code":""},{"path":[]},{"path":"/reference/ejscreen_vs_ejam.html","id":null,"dir":"Reference","previous_headings":"","what":"EJAM/EJSCREEN comparisons — ejscreen_vs_ejam","title":"EJAM/EJSCREEN comparisons — ejscreen_vs_ejam","text":"main function facilitates comparing EJScreen API vs EJAM stats near site(s)","code":""},{"path":"/reference/ejscreen_vs_ejam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EJAM/EJSCREEN comparisons — ejscreen_vs_ejam","text":"","code":"ejscreen_vs_ejam(   latlon,   radius = 3,   nadrop = FALSE,   save_when_report = TRUE,   report_every_n = 250,   calculate_ratios = FALSE,   include_ejindexes = TRUE,   x100fix = TRUE,   x100varnames = c(names_d, names_d_avg, names_d_state_avg, names_d_subgroups,     names_d_subgroups_avg, names_d_subgroups_state_avg, \"pctdisability\",     \"p_own_occupied\", \"pctunder18\", \"pctover17\", \"pctmale\", \"pctfemale\"),   ... )"},{"path":"/reference/ejscreen_vs_ejam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"EJAM/EJSCREEN comparisons — ejscreen_vs_ejam","text":"latlon data.table data.frame colnames lat lon, one row per site radius miles, used ejamit() ejscreenapi_plus() save_when_report see ejscreenapi_plus() report_every_n see ejscreenapi_plus() calculate_ratios passed ejscreenapi_plus() ejamit() x100fix whether multiply x100 names_d names_d_subgroups indicator scores convert fractions 0 1 percentages 0 100, prior rounding reporting EJAM results . x100varnames optional, x100fix=T, vector colnames x$EJAM convert scaled 0 1 rescaled values 0 100, outputs EJSCREEN reported percentages 0 100 0 1 EJAM. ... passed ejamit() additional parameters, like include_ejindexes = FALSE","code":""},{"path":"/reference/ejscreen_vs_ejam.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"EJAM/EJSCREEN comparisons — ejscreen_vs_ejam","text":"list data frames, names EJSCREEN, EJAM, EJSCREEN_shown, EJAM_shown, same_shown, ratio, diff, absdiff, pctdiff, abspctdiff diff EJAM - EJSCREEN ratio EJAM / EJSCREEN pctdiff ratio - 1 abs absolute value data.frame, colnames indicators like pop, blockcount_near_site, etc. rows represent sites analyzed.","code":""},{"path":"/reference/ejscreen_vs_ejam.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"EJAM/EJSCREEN comparisons — ejscreen_vs_ejam","text":"Note EJAM tool/ function called ejamit() rely EJScreen calculations instead tries replicate EJScreen . result, early 2024 least, ejamit() much, much faster ejscreenit() provides additional information (distribution distances group, etc.) features (histograms, spreadsheet heatmaps, etc.) flexibility (easy analysts using R customize analysis, etc.), ejamit() always exactly replicate EJScreen -- provide 100% identical results (percentiles, etc.) every indicator every analysis every location. due slight variations details spatial calculations (blocks nearby, sometimes counting 1 extra block 2.99 miles away EJScreen counts outside 3 mile radius, e.g.) rounding (many digits retained calculations, many shown final reports) percentile assignment method (percentile lookup tables used, ties treated percentile lookup tables, etc.), weighted averages formulas used aggregation blockgroup scores (updated 2024 precisely match formulas EJScreen uses)","code":""},{"path":[]},{"path":[]},{"path":"/reference/ejscreen_vs_ejam_alreadyrun.html","id":null,"dir":"Reference","previous_headings":"","what":"EJAM/EJSCREEN comparisons — ejscreen_vs_ejam_alreadyrun","title":"EJAM/EJSCREEN comparisons — ejscreen_vs_ejam_alreadyrun","text":"Compare EJScreen API vs EJAM stats near site(s) (results already run)","code":""},{"path":"/reference/ejscreen_vs_ejam_alreadyrun.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EJAM/EJSCREEN comparisons — ejscreen_vs_ejam_alreadyrun","text":"","code":"ejscreen_vs_ejam_alreadyrun(   apisite,   ejamsite,   nadrop = FALSE,   x100fix = TRUE,   x100varnames = c(names_d, names_d_avg, names_d_state_avg, names_d_subgroups,     names_d_subgroups_avg, names_d_subgroups_state_avg, \"pctdisability\",     \"p_own_occupied\", \"pctunder18\", \"pctover17\", \"pctmale\", \"pctfemale\") )"},{"path":"/reference/ejscreen_vs_ejam_alreadyrun.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"EJAM/EJSCREEN comparisons — ejscreen_vs_ejam_alreadyrun","text":"apisite table output ejscreenit()$table, ejscreenapi_plus() ejamsite table output ejamit()$results_bysite nadrop optional, whether drop indicators EJScreen API returns NA x100fix optional, whether multiply x100 names_d names_d_subgroups indicator scores convert fractions 0 1 percentages 0 100, prior rounding reporting EJAM results . x100varnames optional, x100fix=T, vector colnames x$EJAM convert scaled 0 1 rescaled values 0 100, outputs EJSCREEN reported percentages 0 100 0 1 EJAM.","code":""},{"path":"/reference/ejscreen_vs_ejam_alreadyrun.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"EJAM/EJSCREEN comparisons — ejscreen_vs_ejam_alreadyrun","text":"prints summary console, returns invisible list data frames, names EJSCREEN, EJAM, EJSCREEN_shown, EJAM_shown, same_shown, ratio, etc. data.frame, colnames indicators like pop, blockcount_near_site, etc. rows represent sites analyzed.","code":""},{"path":[]},{"path":"/reference/ejscreen_vs_ejam_alreadyrun.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"EJAM/EJSCREEN comparisons — ejscreen_vs_ejam_alreadyrun","text":"","code":"blah = ejscreen_vs_ejam_alreadyrun(     apisite = testoutput_ejscreenapi_plus_5,     ejamsite = ejamit(testpoints_5, radius = 1, include_ejindexes = TRUE)$results_bysite)   ejscreen_vs_ejam_see1(blah, mysite = 1)  if (FALSE) {    # requires data.table    # analyze point(s) in both EJScreen and EJAM   pts <- testpoints_100[1:5, ]   #z <- ejscreen_vs_ejam(testpoints_100[27, ], radius = 3, include_ejindexes = TRUE)      # just 1 point   # z <- ejscreen_vs_ejam(pts[5, ], radius = 3, include_ejindexes = TRUE)      # multiple points   # This step can take a long time, almost 1 minute per 20 points, as it uses the EJScreen API:   z <- ejscreen_vs_ejam(pts, radius = 3, include_ejindexes = TRUE)         # same thing but step by step    api1 <- ejscreenit(pts, radius = 3)    api1 <- api1$table[5, ]    ejam1 <- ejamit(pts, radius = 3, include_ejindexes = TRUE)    ejam1 <- ejam1$results_bysite[5, ]    zzz <- ejscreen_vs_ejam_alreadyrun(api1, ejam1)        # to keep it as a list of data.frames but just 1 row each now:    zlist1 <- lapply(z, function(x) x[myrow, ])    names(zlist1); sapply(zlist1, dim)        # look at a table about just 1 site among those analyzed, e.g., the first one:    myrow <- 1    z1 <- data.frame(sapply(z, function(x) x[myrow, ]))    # but that creates a data.frame where each column is a list...                     # **** WORK IN PROGRESS ... *** !!!!!                          # Reported key indicators - which ones do or don't match    # when comparing EJSCREEN and EJAM results?    keyreportnames <- c('pop', names_these, names_pctile, names_state_pctile)    rname <- colnames(z$EJAM)    z1[rname %in% keyreportnames &  z1$same_shown, ]    z1[rname %in% keyreportnames & !z1$same_shown & !is.na(z1$EJSCREEN), ]       # Reported (rounded) numbers match:    z[z$same_shown , ]    # Reports disagree:     #  (and not just because of percentages being of 100 vs of 1.00)    z[!z$same_shown & !is.na(z$EJSCREEN) & z$ratio != 0.01, ]     # Reports disagree if percentages reported as 0-100 vs fractions 0-1.00    z[z$ratio == 0.01 & !is.na(z$ratio), ]            # site number 1    z1 <- sapply(z, function(x) (x[1,]))    # Reported key indicators - which ones do or don't match    # when comparing EJSCREEN and EJAM results?    keyreportnames <- c('pop', names_these, names_pctile, names_state_pctile)    z1[z1$rname %in% keyreportnames &  z1$same_shown, ]    z1[z1$rname %in% keyreportnames & !z1$same_shown & !is.na(z1$EJSCREEN), ]        # Reported (rounded) numbers match:    z1[z1$same_shown , ]    # Reports disagree:     #  (and not just because of percentages being of 100 vs of 1.00)    z1[!z1$same_shown & !is.na(z1$EJSCREEN) & z1$ratio != 0.01, ]     # Reports disagree if percentages reported as 0-100 vs fractions 0-1.00    z1[z1$ratio == 0.01 & !is.na(z1$ratio), ]        # Comparing across sites:        # .... to be continued ...       }"},{"path":"/reference/ejscreen_vs_ejam_see1.html","id":null,"dir":"Reference","previous_headings":"","what":"EJAM/EJSCREEN comparisons - see results for 1 site after using ejscreen_vs_ejam() — ejscreen_vs_ejam_see1","title":"EJAM/EJSCREEN comparisons - see results for 1 site after using ejscreen_vs_ejam() — ejscreen_vs_ejam_see1","text":"EJAM/EJSCREEN comparisons - see results 1 site using ejscreen_vs_ejam()","code":""},{"path":"/reference/ejscreen_vs_ejam_see1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EJAM/EJSCREEN comparisons - see results for 1 site after using ejscreen_vs_ejam() — ejscreen_vs_ejam_see1","text":"","code":"ejscreen_vs_ejam_see1(z, myvars = names_d, mysite = 1)"},{"path":"/reference/ejscreen_vs_ejam_see1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"EJAM/EJSCREEN comparisons - see results for 1 site after using ejscreen_vs_ejam() — ejscreen_vs_ejam_see1","text":"z output ejscreen_vs_ejam() myvars optional check just subset colnames found z$EJAM z$EJSCREEN, myvars = colnames(z$EJAM) myvars = c(names_d, names_d_subgroups) myvars = grep(\"pctile\", colnames(z$EJAM), value = T) mysite rownumber corresponding site interest, among 1:nrow(z$EJAM)","code":""},{"path":"/reference/ejscreen_vs_ejam_see1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"EJAM/EJSCREEN comparisons - see results for 1 site after using ejscreen_vs_ejam() — ejscreen_vs_ejam_see1","text":"table showing one row per indicator, columns like EJSCREEN, EJAM, ratio, etc.","code":""},{"path":[]},{"path":"/reference/ejscreen_vs_ejam_see1map.html","id":null,"dir":"Reference","previous_headings":"","what":"EJAM/EJSCREEN comparisons - see map and tables of blocks near a site to explain discrepancy in pop and blocks — ejscreen_vs_ejam_see1map","title":"EJAM/EJSCREEN comparisons - see map and tables of blocks near a site to explain discrepancy in pop and blocks — ejscreen_vs_ejam_see1map","text":"EJAM/EJSCREEN comparisons - see map tables blocks near site explain discrepancy pop blocks","code":""},{"path":"/reference/ejscreen_vs_ejam_see1map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EJAM/EJSCREEN comparisons - see map and tables of blocks near a site to explain discrepancy in pop and blocks — ejscreen_vs_ejam_see1map","text":"","code":"ejscreen_vs_ejam_see1map(n = 1, x, overlay_blockgroups = FALSE, ...)"},{"path":"/reference/ejscreen_vs_ejam_see1map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"EJAM/EJSCREEN comparisons - see map and tables of blocks near a site to explain discrepancy in pop and blocks — ejscreen_vs_ejam_see1map","text":"n row number x$EJAM site check x results  x <- ejscreen_vs_ejam(testpoints_10, radius =3, include_ejindexes = TRUE) overlay_blockgroups optional, set TRUE see overlay boundaries parent blockgroups, noting click turn layer block point info popups work ... passed plotblocksnearby()","code":""},{"path":"/reference/ejscreen_vs_ejam_see1map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"EJAM/EJSCREEN comparisons - see map and tables of blocks near a site to explain discrepancy in pop and blocks — ejscreen_vs_ejam_see1map","text":"Just draws map shows tables returns output ejscreen_vs_ejam_see1()","code":""},{"path":[]},{"path":"/reference/ejscreen_vs_ejam_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"EJAM/EJSCREEN comparisons - see summary stats after using ejscreen_vs_ejam() — ejscreen_vs_ejam_summary","title":"EJAM/EJSCREEN comparisons - see summary stats after using ejscreen_vs_ejam() — ejscreen_vs_ejam_summary","text":"EJAM/EJSCREEN comparisons - see summary stats using ejscreen_vs_ejam()","code":""},{"path":"/reference/ejscreen_vs_ejam_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EJAM/EJSCREEN comparisons - see summary stats after using ejscreen_vs_ejam() — ejscreen_vs_ejam_summary","text":"","code":"ejscreen_vs_ejam_summary(   z = ejscreen_vs_ejam(),   myvars = colnames(z$EJAM),   tol = 0.01,   prob = 0.95,   na.rm = TRUE )"},{"path":"/reference/ejscreen_vs_ejam_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"EJAM/EJSCREEN comparisons - see summary stats after using ejscreen_vs_ejam() — ejscreen_vs_ejam_summary","text":"z output ejscreen_vs_ejam() myvars optional check just subset colnames found z$EJAM z$EJSCREEN, myvars = c(names_d, names_d_subgroups) myvars = grep(\"pctile\", colnames(z$EJAM), value = T) tol optional, set results can said agree tolerance differ less tol percent tol expressed fraction 0 1. prob optional fraction 1 representing percentile p check absolute percentage differences. See within.x.pct..p.pct..sites value returned. na.rm needs testing, optional","code":""},{"path":"/reference/ejscreen_vs_ejam_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"EJAM/EJSCREEN comparisons - see summary stats after using ejscreen_vs_ejam() — ejscreen_vs_ejam_summary","text":"data.frame summary stats showing counts percents analyzed sites (valid data found EJAM EJSCREEN outputs), indicating many sites agree EJSCREEN EJAM estimates, exactly reported within tolerance. Columns include \"indicator\" (variable name) \"sites..data.ejam\" many sites value EJAM given indicator? \"sites..data.neither\" many sites NA EJAM EJSCREEN? \"sites..data.\" \"sites.agree.rounded\" many sites agree (EJSCREEN vs EJAM) value shown reports? .e., reported, rounded value. \"sites.agree.within.tol\" many sites agree within tol? (.e., tol x 100 percent) \"pct..sites.agree.rounded\"  percent 0-100% sites data \"pct..sites.agree.within.tol\"  percent 0-100% sites data \"median.abs.diff\" Median sites data, absolute differences, EJAM - EJSCREEN \"max.abs.diff\" \"mean.pct.diff\" Percent difference 0-100% absolute value 100*(ratio - 1), ratio EJAM/EJSCREEN \"median.pct.diff\" 0-100% \"max.pct.diff\" 0-100% \"within.x.pct..p.pct..sites\"  X, EJAM EJSCREEN agree within X percent 0-100% better prob share sites. Prob share used last stat mean prob (e.g. 0.95) share sites absolute percentage difference estimated indicator values less equal x x one actual values abspctdiff found * 100. uses 100 * quantile(y, probs = prob, type = 1)","code":""},{"path":[]},{"path":"/reference/ejscreen_vs_ejam_summary_quantiles.html","id":null,"dir":"Reference","previous_headings":"","what":"EJAM/EJSCREEN comparisons - see quantiles over tested sites, of a stat like ratio of EJAM/EJSCREEN — ejscreen_vs_ejam_summary_quantiles","title":"EJAM/EJSCREEN comparisons - see quantiles over tested sites, of a stat like ratio of EJAM/EJSCREEN — ejscreen_vs_ejam_summary_quantiles","text":"EJAM/EJSCREEN comparisons - see quantiles tested sites, stat like ratio EJAM/EJSCREEN","code":""},{"path":"/reference/ejscreen_vs_ejam_summary_quantiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EJAM/EJSCREEN comparisons - see quantiles over tested sites, of a stat like ratio of EJAM/EJSCREEN — ejscreen_vs_ejam_summary_quantiles","text":"","code":"ejscreen_vs_ejam_summary_quantiles(   z,   mystat = c(\"ratio\", \"diff\", \"absdiff\", \"pctdiff\", \"abspctdiff\")[1],   myvars = c(\"pop\", names_these),   probs = (0:20)/20,   na.rm = TRUE,   digits = 4 )"},{"path":"/reference/ejscreen_vs_ejam_summary_quantiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"EJAM/EJSCREEN comparisons - see quantiles over tested sites, of a stat like ratio of EJAM/EJSCREEN — ejscreen_vs_ejam_summary_quantiles","text":"z output ejscreen_vs_ejam() mystat just one (1) : \"ratio\", \"diff\", \"absdiff\", \"pctdiff\", \"abspctdiff\" myvars optional vector indicators, check just subset colnames found z$EJAM z$EJSCREEN, myvars = c(names_d, names_d_subgroups) myvars = grep(\"pctile\", colnames(z$EJAM), value = T) probs optional vector probabilities 0 1 pass quantile() na.rm optional, leave default TRUE digits round results many digits","code":""},{"path":"/reference/ejscreen_vs_ejam_summary_quantiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"EJAM/EJSCREEN comparisons - see quantiles over tested sites, of a stat like ratio of EJAM/EJSCREEN — ejscreen_vs_ejam_summary_quantiles","text":"table percentiles across analyzed locations, stat like ratio EJAM estimates EJSCREEN estimates, specified list indicators like names_d","code":""},{"path":"/reference/epa_programs.html","id":null,"dir":"Reference","previous_headings":"","what":"epa_programs (DATA) named vector with program counts — epa_programs","title":"epa_programs (DATA) named vector with program counts — epa_programs","text":"named vector EPA programs lists programs names programs program counts. Used EJAM shiny app dropdown menu. @seealso frs_by_programid","code":""},{"path":"/reference/fill_tbl_full.html","id":null,"dir":"Reference","previous_headings":"","what":"Create full demog. or envt. HTML table of indicator rows — fill_tbl_full","title":"Create full demog. or envt. HTML table of indicator rows — fill_tbl_full","text":"Create full demog. envt. HTML table indicator rows","code":""},{"path":"/reference/fill_tbl_full.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create full demog. or envt. HTML table of indicator rows — fill_tbl_full","text":"","code":"fill_tbl_full(output_df)"},{"path":"/reference/fill_tbl_full.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create full demog. or envt. HTML table of indicator rows — fill_tbl_full","text":"output_df, single row results table doaggregate - either results_overall one row bysite","code":""},{"path":"/reference/fill_tbl_full_ej.html","id":null,"dir":"Reference","previous_headings":"","what":"Create full EJ + EJ supp index HTML table of indicator rows — fill_tbl_full_ej","title":"Create full EJ + EJ supp index HTML table of indicator rows — fill_tbl_full_ej","text":"Create full EJ + EJ supp index HTML table indicator rows","code":""},{"path":"/reference/fill_tbl_full_ej.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create full EJ + EJ supp index HTML table of indicator rows — fill_tbl_full_ej","text":"","code":"fill_tbl_full_ej(output_df)"},{"path":"/reference/fill_tbl_full_ej.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create full EJ + EJ supp index HTML table of indicator rows — fill_tbl_full_ej","text":"output_df, single row results table doaggregate - either results_overall one row bysite","code":""},{"path":"/reference/fill_tbl_full_subgroups.html","id":null,"dir":"Reference","previous_headings":"","what":"Create full demog subgroup HTML table of indicator rows — fill_tbl_full_subgroups","title":"Create full demog subgroup HTML table of indicator rows — fill_tbl_full_subgroups","text":"Create full demog subgroup HTML table indicator rows","code":""},{"path":"/reference/fill_tbl_full_subgroups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create full demog subgroup HTML table of indicator rows — fill_tbl_full_subgroups","text":"","code":"fill_tbl_full_subgroups(output_df)"},{"path":"/reference/fill_tbl_full_subgroups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create full demog subgroup HTML table of indicator rows — fill_tbl_full_subgroups","text":"output_df, single row results table doaggregate - either results_overall one row bysite","code":""},{"path":"/reference/fill_tbl_row.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a demog. or envt. indicator to an html table row — fill_tbl_row","title":"Write a demog. or envt. indicator to an html table row — fill_tbl_row","text":"Write demog. envt. indicator html table row","code":""},{"path":"/reference/fill_tbl_row.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a demog. or envt. indicator to an html table row — fill_tbl_row","text":"","code":"fill_tbl_row(output_df, var_value, var_name)"},{"path":"/reference/fill_tbl_row.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a demog. or envt. indicator to an html table row — fill_tbl_row","text":"output_df, single row results table doaggregate - either results_overall one row bysite var_value, variable name indicator pull results, 'pm', 'pctlowinc', 'Demog.Index' var_name, nicer name indicator use table row; can include HTML sub/superscripts","code":""},{"path":"/reference/fill_tbl_row_ej.html","id":null,"dir":"Reference","previous_headings":"","what":"Write an EJ or EJ supp index to an html table row — fill_tbl_row_ej","title":"Write an EJ or EJ supp index to an html table row — fill_tbl_row_ej","text":"Write EJ EJ supp index html table row","code":""},{"path":"/reference/fill_tbl_row_ej.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write an EJ or EJ supp index to an html table row — fill_tbl_row_ej","text":"","code":"fill_tbl_row_ej(output_df, var_value, var_name)"},{"path":"/reference/fill_tbl_row_ej.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write an EJ or EJ supp index to an html table row — fill_tbl_row_ej","text":"output_df, single row results table doaggregate - either results_overall one row bysite var_value, variable name indicator pull results, 'pm', 'pctlowinc', 'Demog.Index' var_name, nicer name indicator use table row; can include HTML sub/superscripts","code":""},{"path":"/reference/fill_tbl_row_subgroups.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a demographic subgroup indicator to an html table row — fill_tbl_row_subgroups","title":"Write a demographic subgroup indicator to an html table row — fill_tbl_row_subgroups","text":"Write demographic subgroup indicator html table row","code":""},{"path":"/reference/fill_tbl_row_subgroups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a demographic subgroup indicator to an html table row — fill_tbl_row_subgroups","text":"","code":"fill_tbl_row_subgroups(output_df, var_value, var_name)"},{"path":"/reference/fill_tbl_row_subgroups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a demographic subgroup indicator to an html table row — fill_tbl_row_subgroups","text":"output_df, single row results table doaggregate - either results_overall one row bysite var_value, variable name indicator pull results, 'pm', 'pctlowinc', 'Demog.Index' var_name, nicer name indicator use table row; can include HTML sub/superscripts","code":""},{"path":"/reference/fips2countyname.html","id":null,"dir":"Reference","previous_headings":"","what":"FIPS - Get county names from county FIPS codes — fips2countyname","title":"FIPS - Get county names from county FIPS codes — fips2countyname","text":"FIPS - Get county names county FIPS codes","code":""},{"path":"/reference/fips2countyname.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FIPS - Get county names from county FIPS codes — fips2countyname","text":"","code":"fips2countyname(fips, includestate = c(\"ST\", \"Statename\", \"\")[1])"},{"path":"/reference/fips2countyname.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FIPS - Get county names from county FIPS codes — fips2countyname","text":"fips vector US Census FIPS codes Counties (5 digits ). can string numeric, without leading zeroes. includestate can ST, Statename, \"\", TRUE specify anything comes county name comma","code":""},{"path":"/reference/fips2countyname.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FIPS - Get county names from county FIPS codes — fips2countyname","text":"vector county names, optionally comma 2-character abbreviation full state name.","code":""},{"path":"/reference/fips2countyname.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FIPS - Get county names from county FIPS codes — fips2countyname","text":"","code":"# names of all counties in ME and NY   fips2countyname(fips_counties_from_state_abbrev(c(\"ME\", \"NY\")), includestate = \"ST\")    fips_counties_from_state_abbrev(c(\"AK\", \"LA\"))"},{"path":"/reference/fips2name.html","id":null,"dir":"Reference","previous_headings":"","what":"FIPS - Get county or state names from county or state FIPS codes — fips2name","title":"FIPS - Get county or state names from county or state FIPS codes — fips2name","text":"FIPS - Get county state names county state FIPS codes","code":""},{"path":"/reference/fips2name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FIPS - Get county or state names from county or state FIPS codes — fips2name","text":"","code":"fips2name(fips, ...)"},{"path":"/reference/fips2name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FIPS - Get county or state names from county or state FIPS codes — fips2name","text":"fips vector US Census FIPS codes Counties (5 digits ) States (2 digits). Can string numeric, without leading zeroes. ... passed fips2countyname() control whether appends something like , NY , New York county name","code":""},{"path":"/reference/fips2name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FIPS - Get county or state names from county or state FIPS codes — fips2name","text":"vector state /county names, county names optionally comma 2-character abbreviation full state name.","code":""},{"path":"/reference/fips2name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FIPS - Get county or state names from county or state FIPS codes — fips2name","text":"","code":"fips2name(fips_counties_from_state_abbrev(c(\"AK\", \"LA\"))  )   fips2name(c(22, 02013))  # can have mix where some are a whole state and others are a county."},{"path":"/reference/fips2statename.html","id":null,"dir":"Reference","previous_headings":"","what":"FIPS - Get state names from any type of FIPS codes — fips2statename","title":"FIPS - Get state names from any type of FIPS codes — fips2statename","text":"FIPS - Get state names type FIPS codes","code":""},{"path":"/reference/fips2statename.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FIPS - Get state names from any type of FIPS codes — fips2statename","text":"","code":"fips2statename(fips)"},{"path":"/reference/fips2statename.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FIPS - Get state names from any type of FIPS codes — fips2statename","text":"fips vector FIPS","code":""},{"path":"/reference/fips2statename.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FIPS - Get state names from any type of FIPS codes — fips2statename","text":"vector state names","code":""},{"path":"/reference/fips2statename.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FIPS - Get state names from any type of FIPS codes — fips2statename","text":"","code":"cbind(fips_lead_zero(1:80), fips2state_abbrev(1:80), fips2statename(1:80))"},{"path":"/reference/fips2state_abbrev.html","id":null,"dir":"Reference","previous_headings":"","what":"FIPS - Get state abbreviations from any type of FIPS codes — fips2state_abbrev","title":"FIPS - Get state abbreviations from any type of FIPS codes — fips2state_abbrev","text":"FIPS - Get state abbreviations type FIPS codes","code":""},{"path":"/reference/fips2state_abbrev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FIPS - Get state abbreviations from any type of FIPS codes — fips2state_abbrev","text":"","code":"fips2state_abbrev(fips)"},{"path":"/reference/fips2state_abbrev.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FIPS - Get state abbreviations from any type of FIPS codes — fips2state_abbrev","text":"fips vector FIPS","code":""},{"path":"/reference/fips2state_abbrev.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FIPS - Get state abbreviations from any type of FIPS codes — fips2state_abbrev","text":"vector abbreviations like \"NY\", \"LA\", \"DE\", etc.","code":""},{"path":"/reference/fips2state_abbrev.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FIPS - Get state abbreviations from any type of FIPS codes — fips2state_abbrev","text":"","code":"cbind(     stfips    = fips_lead_zero(1:80),      ST     = fips2state_abbrev(1:80),      statename = fips2statename(1:80)   )"},{"path":"/reference/fips2state_fips.html","id":null,"dir":"Reference","previous_headings":"","what":"FIPS - Get state FIPS codes from any type of FIPS codes — fips2state_fips","title":"FIPS - Get state FIPS codes from any type of FIPS codes — fips2state_fips","text":"FIPS - Get state FIPS codes type FIPS codes","code":""},{"path":"/reference/fips2state_fips.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FIPS - Get state FIPS codes from any type of FIPS codes — fips2state_fips","text":"","code":"fips2state_fips(fips)"},{"path":"/reference/fips2state_fips.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FIPS - Get state FIPS codes from any type of FIPS codes — fips2state_fips","text":"fips vector FIPS","code":""},{"path":"/reference/fips2state_fips.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FIPS - Get state FIPS codes from any type of FIPS codes — fips2state_fips","text":"vector State FIPS 2 characters ","code":""},{"path":"/reference/fips2state_fips.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"FIPS - Get state FIPS codes from any type of FIPS codes — fips2state_fips","text":"Tells State contains County (tract blockgroup block)","code":""},{"path":"/reference/fips2state_fips.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FIPS - Get state FIPS codes from any type of FIPS codes — fips2state_fips","text":"","code":"fips2state_fips(fips_counties_from_statename(c(\"Delaware\", \"Rhode Island\")))"},{"path":"/reference/fipstype.html","id":null,"dir":"Reference","previous_headings":"","what":"FIPS - Identify what type of Census geography is each FIPS code (block, county, etc.) — fipstype","title":"FIPS - Identify what type of Census geography is each FIPS code (block, county, etc.) — fipstype","text":"FIPS - Identify type Census geography FIPS code (block, county, etc.)","code":""},{"path":"/reference/fipstype.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FIPS - Identify what type of Census geography is each FIPS code (block, county, etc.) — fipstype","text":"","code":"fipstype(fips)"},{"path":"/reference/fipstype.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FIPS - Identify what type of Census geography is each FIPS code (block, county, etc.) — fipstype","text":"fips vector one Census FIPS without leading zeroes, strings numeric","code":""},{"path":"/reference/fipstype.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FIPS - Identify what type of Census geography is each FIPS code (block, county, etc.) — fipstype","text":"vector types: \"block\", \"blockgroup\", \"tract\", \"county\", \"state\"","code":""},{"path":"/reference/fipstype.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FIPS - Identify what type of Census geography is each FIPS code (block, county, etc.) — fipstype","text":"","code":"fips_counties_from_statename(c(\"Connecticut\", \"Delaware\") )  # [1] \"09001\" \"09003\" \"09005\" \"09007\" \"09009\" \"09011\" \"09013\" \"09015\" \"10001\" \"10003\" \"10005\"  fipstype(9001)  fipstype(\"10001\")  # note blockid2fips is a large file, but can be obtained via [dataload_from_pins()]  if (FALSE) {  fipsexamples <- c(    fips_state_from_statename(\"Alaska\"),    fips_counties_from_state_abbrev(\"DE\")[1],     substr(blockid2fips$blockfips[1],1,11),     blockgroupstats$bgfips[1],     blockid2fips$blockfips[1]  )  cbind(fipsexamples, type = fipstype(fipsexamples)) }"},{"path":"/reference/fips_bg_from_anyfips.html","id":null,"dir":"Reference","previous_headings":"","what":"FIPS - Get unique blockgroup fips in or containing specified fips of any type — fips_bg_from_anyfips","title":"FIPS - Get unique blockgroup fips in or containing specified fips of any type — fips_bg_from_anyfips","text":"Convert FIPS codes FIPS blockgroups among within containing FIPS","code":""},{"path":"/reference/fips_bg_from_anyfips.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FIPS - Get unique blockgroup fips in or containing specified fips of any type — fips_bg_from_anyfips","text":"","code":"fips_bg_from_anyfips(fips)"},{"path":"/reference/fips_bg_from_anyfips.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FIPS - Get unique blockgroup fips in or containing specified fips of any type — fips_bg_from_anyfips","text":"fips vector US FIPS codes, character numeric, without leading zeroes, many characters","code":""},{"path":"/reference/fips_bg_from_anyfips.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FIPS - Get unique blockgroup fips in or containing specified fips of any type — fips_bg_from_anyfips","text":"vector blockgroup FIPS (NA values) may much longer vector fips passed function.","code":""},{"path":"/reference/fips_bg_from_anyfips.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"FIPS - Get unique blockgroup fips in or containing specified fips of any type — fips_bg_from_anyfips","text":"way get list blockgroups, specified state/county/tract even block. Takes vector one FIPS State (2-digit), County (5-digit), Tract (11-digit), blockgroup (12 digit), even block (15-digit fips). Returns unique vector FIPS US blockgroups (including DC Puerto Rico) contain specified blocks, equal specified blockgroup fips, contained within provided tract/county/state FIPS.","code":""},{"path":[]},{"path":"/reference/fips_bg_from_anyfips.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FIPS - Get unique blockgroup fips in or containing specified fips of any type — fips_bg_from_anyfips","text":"","code":"# all blockgroups in one state   fips_counties_from_state_abbrev(\"DE\")   fips_bg_from_anyfips( fips_counties_from_state_abbrev(\"DE\") )      blockgroupstats[,.N,by=substr(bgfips,1,2)]   length(fips_bg_from_anyfips(\"72\"))      # all blockgroups in this one county   fips_bg_from_anyfips(30001)   fips_bg_from_anyfips(\"30001\")   fips_bg_from_anyfips(fips_counties_from_statename(\"Rhode Island\")[1])      # all blockgroups that contain any of these 6 blocks (i.e., just one bg)   fips_bg_from_anyfips( blockid2fips$blockfips[1:6])      # 2 counties   fips_bg_from_anyfips(c(36009,36011))"},{"path":"/reference/fips_counties_from_statefips.html","id":null,"dir":"Reference","previous_headings":"","what":"FIPS - Get ALL county fips in specified states — fips_counties_from_statefips","title":"FIPS - Get ALL county fips in specified states — fips_counties_from_statefips","text":"FIPS - Get county fips specified states","code":""},{"path":"/reference/fips_counties_from_statefips.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FIPS - Get ALL county fips in specified states — fips_counties_from_statefips","text":"","code":"fips_counties_from_statefips(statefips)"},{"path":"/reference/fips_counties_from_statefips.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FIPS - Get ALL county fips in specified states — fips_counties_from_statefips","text":"statefips vector 2-digit state FIPS codes like c(\"10\", \"44\", \"44\") c(10,44)","code":""},{"path":"/reference/fips_counties_from_statefips.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FIPS - Get ALL county fips in specified states — fips_counties_from_statefips","text":"vector 5-digit character string county FIPS unique counties states","code":""},{"path":"/reference/fips_counties_from_statefips.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"FIPS - Get ALL county fips in specified states — fips_counties_from_statefips","text":"similar list_counties(state) tigris package.","code":""},{"path":"/reference/fips_counties_from_statefips.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FIPS - Get ALL county fips in specified states — fips_counties_from_statefips","text":"","code":"fips_counties_from_statefips(c(10,44,44))   fips_counties_from_statefips(\"10\")"},{"path":"/reference/fips_counties_from_statename.html","id":null,"dir":"Reference","previous_headings":"","what":"FIPS - Get ALL county fips in specified states — fips_counties_from_statename","title":"FIPS - Get ALL county fips in specified states — fips_counties_from_statename","text":"FIPS - Get county fips specified states","code":""},{"path":"/reference/fips_counties_from_statename.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FIPS - Get ALL county fips in specified states — fips_counties_from_statename","text":"","code":"fips_counties_from_statename(statename)"},{"path":"/reference/fips_counties_from_statename.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FIPS - Get ALL county fips in specified states — fips_counties_from_statename","text":"statename vector state names like c(\"New York\",\"Georgia\")","code":""},{"path":"/reference/fips_counties_from_statename.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FIPS - Get ALL county fips in specified states — fips_counties_from_statename","text":"vector 5-digit character string county FIPS unique counties states","code":""},{"path":"/reference/fips_counties_from_statename.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FIPS - Get ALL county fips in specified states — fips_counties_from_statename","text":"","code":"fips_counties_from_statename(\"Delaware\")"},{"path":"/reference/fips_counties_from_state_abbrev.html","id":null,"dir":"Reference","previous_headings":"","what":"FIPS - Get ALL county fips in specified states — fips_counties_from_state_abbrev","title":"FIPS - Get ALL county fips in specified states — fips_counties_from_state_abbrev","text":"FIPS - Get county fips specified states","code":""},{"path":"/reference/fips_counties_from_state_abbrev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FIPS - Get ALL county fips in specified states — fips_counties_from_state_abbrev","text":"","code":"fips_counties_from_state_abbrev(ST)"},{"path":"/reference/fips_counties_from_state_abbrev.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FIPS - Get ALL county fips in specified states — fips_counties_from_state_abbrev","text":"ST vector state abbreviations like c(\"NY\",\"GA\")","code":""},{"path":"/reference/fips_counties_from_state_abbrev.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FIPS - Get ALL county fips in specified states — fips_counties_from_state_abbrev","text":"vector 5-digit character string county FIPS unique counties states","code":""},{"path":"/reference/fips_counties_from_state_abbrev.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FIPS - Get ALL county fips in specified states — fips_counties_from_state_abbrev","text":"","code":"fips_counties_from_state_abbrev(\"DE\")   fips_counties_from_state_abbrev(\"RI\", \"RI\")"},{"path":"/reference/fips_from_table.html","id":null,"dir":"Reference","previous_headings":"","what":"FIPS - Read and clean FIPS column from a table, after inferring which col it is — fips_from_table","title":"FIPS - Read and clean FIPS column from a table, after inferring which col it is — fips_from_table","text":"Just read codes one column table obtained something like read.csv, excel, etc.","code":""},{"path":"/reference/fips_from_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FIPS - Read and clean FIPS column from a table, after inferring which col it is — fips_from_table","text":"","code":"fips_from_table(fips_table, addleadzeroes = TRUE, inshiny = FALSE)"},{"path":"/reference/fips_from_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FIPS - Read and clean FIPS column from a table, after inferring which col it is — fips_from_table","text":"fips_table data.frame data.table FIPS codes counties, states, tracts, example, column whose name can interpreted FIPS (one aliases like fips, countyfips, etc.) Aliases : c(\"FIPS\", \"fips\", \"fips_code\", \"fipscode\", \"Fips\", \"statefips\", \"countyfips\", \"ST_FIPS\", \"st_fips\", \"ST_FIPS\", \"st_fips\", \"FIPS.ST\", \"FIPS.COUNTY\", \"FIPS.TRACT\") addleadzeroes whether add leading zeroes needed State whose FIPS starts \"01\" inshiny used server shiny app","code":""},{"path":"/reference/fips_from_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FIPS - Read and clean FIPS column from a table, after inferring which col it is — fips_from_table","text":"vector fips codes","code":""},{"path":[]},{"path":"/reference/fips_lead_zero.html","id":null,"dir":"Reference","previous_headings":"","what":"FIPS - Add leading zeroes to fips codes if missing, replace with NA if length invalid — fips_lead_zero","title":"FIPS - Add leading zeroes to fips codes if missing, replace with NA if length invalid — fips_lead_zero","text":"Ensures FIPS leading zero, VALIDATE FIPS - check FIPS valid checking length. fips state, county, tract, blockgroup, block FIPS code.","code":""},{"path":"/reference/fips_lead_zero.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FIPS - Add leading zeroes to fips codes if missing, replace with NA if length invalid — fips_lead_zero","text":"","code":"fips_lead_zero(fips)"},{"path":"/reference/fips_lead_zero.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FIPS - Add leading zeroes to fips codes if missing, replace with NA if length invalid — fips_lead_zero","text":"fips vector numeric character US FIPS codes","code":""},{"path":"/reference/fips_lead_zero.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FIPS - Add leading zeroes to fips codes if missing, replace with NA if length invalid — fips_lead_zero","text":"vector length","code":""},{"path":"/reference/fips_lead_zero.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FIPS - Add leading zeroes to fips codes if missing, replace with NA if length invalid — fips_lead_zero","text":"","code":"fips_lead_zero(c(1,\"01\",1234,\"1234\",\"12345\",123456))"},{"path":"/reference/fips_st2eparegion.html","id":null,"dir":"Reference","previous_headings":"","what":"FIPS - Get EPA Region number from state FIPS code — fips_st2eparegion","title":"FIPS - Get EPA Region number from state FIPS code — fips_st2eparegion","text":"FIPS - Get EPA Region number state FIPS code","code":""},{"path":"/reference/fips_st2eparegion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FIPS - Get EPA Region number from state FIPS code — fips_st2eparegion","text":"","code":"fips_st2eparegion(stfips)"},{"path":"/reference/fips_st2eparegion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FIPS - Get EPA Region number from state FIPS code — fips_st2eparegion","text":"stfips vector one state fips codes (numbers strings)","code":""},{"path":"/reference/fips_st2eparegion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FIPS - Get EPA Region number from state FIPS code — fips_st2eparegion","text":"vector numbers representing US EPA Regions","code":""},{"path":"/reference/fips_state_from_statename.html","id":null,"dir":"Reference","previous_headings":"","what":"FIPS - Get state fips for each state name — fips_state_from_statename","title":"FIPS - Get state fips for each state name — fips_state_from_statename","text":"FIPS - Get state fips state name","code":""},{"path":"/reference/fips_state_from_statename.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FIPS - Get state fips for each state name — fips_state_from_statename","text":"","code":"fips_state_from_statename(statename)"},{"path":"/reference/fips_state_from_statename.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FIPS - Get state fips for each state name — fips_state_from_statename","text":"statename vector state names like c(\"New York\",\"Georgia\")","code":""},{"path":"/reference/fips_state_from_statename.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FIPS - Get state fips for each state name — fips_state_from_statename","text":"vector 2-digit state FIPS codes like c(\"10\", \"44\", \"44\"), length input, including duplicates","code":""},{"path":"/reference/fips_state_from_statename.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FIPS - Get state fips for each state name — fips_state_from_statename","text":"","code":"fips_state_from_statename(\"Delaware\")"},{"path":"/reference/fips_state_from_state_abbrev.html","id":null,"dir":"Reference","previous_headings":"","what":"FIPS - Get state fips for each state abbrev — fips_state_from_state_abbrev","title":"FIPS - Get state fips for each state abbrev — fips_state_from_state_abbrev","text":"FIPS - Get state fips state abbrev","code":""},{"path":"/reference/fips_state_from_state_abbrev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FIPS - Get state fips for each state abbrev — fips_state_from_state_abbrev","text":"","code":"fips_state_from_state_abbrev(ST)"},{"path":"/reference/fips_state_from_state_abbrev.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FIPS - Get state fips for each state abbrev — fips_state_from_state_abbrev","text":"ST vector state abbreviations like c(\"NY\",\"GA\")","code":""},{"path":"/reference/fips_state_from_state_abbrev.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FIPS - Get state fips for each state abbrev — fips_state_from_state_abbrev","text":"vector 2-digit state FIPS codes like c(\"10\", \"44\", \"44\"), length input, including duplicates","code":""},{"path":"/reference/fips_state_from_state_abbrev.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FIPS - Get state fips for each state abbrev — fips_state_from_state_abbrev","text":"","code":"fips_state_from_state_abbrev(\"DE\", \"DE\", \"RI\")"},{"path":"/reference/fixcolnames.html","id":null,"dir":"Reference","previous_headings":"","what":"helper function to rename variables that are colnames of data.frame — fixcolnames","title":"helper function to rename variables that are colnames of data.frame — fixcolnames","text":"Changes column names friendly long original names FTP site file","code":""},{"path":"/reference/fixcolnames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"helper function to rename variables that are colnames of data.frame — fixcolnames","text":"","code":"fixcolnames(   namesnow,   oldtype = \"original\",   newtype = \"friendly\",   mapping_for_names )"},{"path":"/reference/fixcolnames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"helper function to rename variables that are colnames of data.frame — fixcolnames","text":"namesnow vector colnames renamed oldtype friendly long original, csv r api, colname map_headernames, used one known types specified. newtype friendly long original, csv r api, colname map_headernames, used one known types specified. mapping_for_names default dataset already package. data.frame passed fixnames() work columns oldnames (original), longname_tableheader (long), newnames_ejscreenapi (friendly)","code":""},{"path":"/reference/fixcolnames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"helper function to rename variables that are colnames of data.frame — fixcolnames","text":"Vector new column names length input","code":""},{"path":"/reference/fixcolnames.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"helper function to rename variables that are colnames of data.frame — fixcolnames","text":"SPECIFY TYPE LIKE \"api\" \"long\" colnames map_headernames like \"rname\" \"vartype\" Note actually can use extract info map_headernames (called mapping_for_names). NOTE: ask rename words known type like rname apiname, namesnow found among oldtype, renamed, returned unchanged. , specify newtype column known type name, like \"varcategory\" instead return empty string namesnow found among oldtype. way really seeking new name, rename, keeps old name; really seeking metadata like category , returns blank old name found .","code":""},{"path":[]},{"path":"/reference/fixcolnames.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"helper function to rename variables that are colnames of data.frame — fixcolnames","text":"","code":"# see package tests   fixcolnames(c(\"RAW_D_INCOME\", \"S_D_LIFEEXP\")) # assumes it was in original format as API outputs   fixcolnames(c(\"RAW_D_INCOME\", \"S_D_LIFEEXP\"), newtype = \"long\")   fixcolnames(c(\"resp\",\"rsei\"),  oldtype = \"r\", newtype = \"long\")   fixcolnames(c(\"resp\",\"rsei\"),  oldtype = \"r\", newtype = \"api\")   fixcolnames(c(\"resp\",\"pctlowinc\"), oldtype = \"r\", newtype = \"varlist\")      # the columns \"newsort\" and \"reportsort\" provide useful sort orders   x <- map_headernames$rname[map_headernames$varlist == \"names_d\"] # EJAM package has names_d   print(\"original order\"); print(x)    x <-  sample(x, length(x), replace = FALSE)      print(\"out of order\"); print(x)   print(\"fixed order\")   x[ order(fixcolnames(x, oldtype = \"r\", newtype = \"newsort\")) ]"},{"path":"/reference/fixcolnames2related.html","id":null,"dir":"Reference","previous_headings":"","what":"Get name of related avg, pctile, or ratio variable name — fixcolnames2related","title":"Get name of related avg, pctile, or ratio variable name — fixcolnames2related","text":"Given names_d, e.g., returns names_d_ratio_to_state_avg","code":""},{"path":"/reference/fixcolnames2related.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get name of related avg, pctile, or ratio variable name — fixcolnames2related","text":"","code":"fixcolnames2related(   namesnow,   relatedtype = c(\"usavg\", \"stateavg\", \"uspctile\", \"statepctile\", \"usratio\",     \"stateratio\") )"},{"path":"/reference/fixcolnames2related.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get name of related avg, pctile, or ratio variable name — fixcolnames2related","text":"namesnow vector one basic Envt Demog indicator variable names found c(names_e, names_d, names_d_subgroups) relatedtype One \"usavg\", \"stateavg\", \"uspctile\", \"statepctile\", \"usratio\", \"stateratio\" (values among unique(map_headernames$vartype) since give ambiguous answers).","code":""},{"path":"/reference/fixcolnames2related.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get name of related avg, pctile, or ratio variable name — fixcolnames2related","text":"vector long namesnow (just returns namesnow relatedtype invalid)","code":""},{"path":"/reference/fixcolnames2related.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get name of related avg, pctile, or ratio variable name — fixcolnames2related","text":"Given basic variable name(s) like \"pctlowinc\" names_e, see related variable names storing US State percentiles, averages, ratios averages given variables. works variable names among : c(names_e, names_d, names_d_subgroups)","code":""},{"path":"/reference/fixcolnames2related.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get name of related avg, pctile, or ratio variable name — fixcolnames2related","text":"","code":"names_d fixcolnames2related(names_d, 'stateratio') names_d_ratio_to_state_avg fixcolnames2related(names_e, \"stateavg\") fixcolnames2related(names_e, \"usvag\") paste0(\"avg.\", names_e) fixcolnames2related(names_e, \"usratio\") # names_ej # does not work with this as input # fixcolnames2related(names_ej, \"uspctile\") # does not return names_ej_pctile"},{"path":"/reference/fixmapheadernamescolname.html","id":null,"dir":"Reference","previous_headings":"","what":"utility to convert aliases to proper colnames of map_headernames — fixmapheadernamescolname","title":"utility to convert aliases to proper colnames of map_headernames — fixmapheadernamescolname","text":"utility convert aliases proper colnames map_headernames","code":""},{"path":"/reference/fixmapheadernamescolname.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"utility to convert aliases to proper colnames of map_headernames — fixmapheadernamescolname","text":"","code":"fixmapheadernamescolname(x)"},{"path":"/reference/fixmapheadernamescolname.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"utility to convert aliases to proper colnames of map_headernames — fixmapheadernamescolname","text":"x character vector colnames map_headernames, aliases like \"long\"","code":""},{"path":"/reference/fixmapheadernamescolname.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"utility to convert aliases to proper colnames of map_headernames — fixmapheadernamescolname","text":"vector aliases replaced actual colnames unmatched ones left -","code":""},{"path":"/reference/fixmapheadernamescolname.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"utility to convert aliases to proper colnames of map_headernames — fixmapheadernamescolname","text":"","code":"fixmapheadernamescolname(c('long', 'csv', 'api', 'r'))"},{"path":"/reference/fix_pctcols_x100.html","id":null,"dir":"Reference","previous_headings":"","what":"utility to multiply certain percentage columns by 100 to convert 0-1.00 into 0-100 — fix_pctcols_x100","title":"utility to multiply certain percentage columns by 100 to convert 0-1.00 into 0-100 — fix_pctcols_x100","text":"multiplies data rescale percentages stored 0 1, 0-100","code":""},{"path":"/reference/fix_pctcols_x100.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"utility to multiply certain percentage columns by 100 to convert 0-1.00 into 0-100 — fix_pctcols_x100","text":"","code":"fix_pctcols_x100(df, cnames = NULL)"},{"path":"/reference/fix_pctcols_x100.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"utility to multiply certain percentage columns by 100 to convert 0-1.00 into 0-100 — fix_pctcols_x100","text":"df data.frame can data.table cnames colnames df indicators multiply 100, like names_pct_as_fraction_ejamit, names_pct_as_fraction_blockgroupstats, names_pct_as_fraction_ejscreenit","code":""},{"path":"/reference/fix_pctcols_x100.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"utility to multiply certain percentage columns by 100 to convert 0-1.00 into 0-100 — fix_pctcols_x100","text":"df data specified columns multiplied 100","code":""},{"path":"/reference/fix_pctcols_x100.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"utility to multiply certain percentage columns by 100 to convert 0-1.00 into 0-100 — fix_pctcols_x100","text":"","code":"y = data.frame(pctlowinc = 1:2, pctpre1960 = 1:2, avg.pctunemployed = 1:2, avg.pctpre1960 = 1:2)  fix_pctcols_x100(y)  fix_pctcols_x100(y, names_pct_as_fraction_ejscreenit)  fix_pctcols_x100(y, names_pct_as_fraction_blockgroupstats)  fix_pctcols_x100(y, names_pct_as_fraction_ejamit)  cat(\"\\n\\n\")  names_pct_as_fraction_ejscreenit  names_pct_as_fraction_blockgroupstats  names_pct_as_fraction_ejamit  cat(\"\\n\\n\")  ytable = data.table(pctlowinc = 1:2, pctpre1960 = 1:2, avg.pctunemployed = 1:2, avg.pctpre1960 = 1:2)  fix_pctcols_x100(ytable)  fix_pctcols_x100(ytable, names_pct_as_fraction_blockgroupstats)   fix_pctcols_x100(ytable, names_pct_as_fraction_ejamit)  cat(\"\\n\\n\")  y  ytable"},{"path":"/reference/formula_varname.html","id":null,"dir":"Reference","previous_headings":"","what":"utility to check formulas and extract variable names they calculate values for — formula_varname","title":"utility to check formulas and extract variable names they calculate values for — formula_varname","text":"utility check formulas extract variable names calculate values ","code":""},{"path":"/reference/formula_varname.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"utility to check formulas and extract variable names they calculate values for — formula_varname","text":"","code":"formula_varname(myforms)"},{"path":"/reference/formula_varname.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"utility to check formulas and extract variable names they calculate values for — formula_varname","text":"myforms see calc_byformula()","code":""},{"path":"/reference/frs.html","id":null,"dir":"Reference","previous_headings":"","what":"frs (DATA) EPA Facility Registry Service table of regulated sites — frs","title":"frs (DATA) EPA Facility Registry Service table of regulated sites — frs","text":"data.table snapshot version EPA FRS. can look sites REGISTRY_ID frs, get location, etc.","code":""},{"path":"/reference/frs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"frs (DATA) EPA Facility Registry Service table of regulated sites — frs","text":"dataset can updated package maintainer using frs_update_datasets() (exported function) definitions active/inactive quite used ECHO. See attributes(frs) see date created, etc. Also, EJScreen maps EPA-regulated facilities program types, provided : https://www.epa.gov/ejscreen/ejscreen-map-descriptions#sites-reporting--epa","code":"As of November 2023    Count of    all REGISTRY_ID rows:   7,441,086  Count of unique REGISTRY_ID values: 4,705,744  Clearly inactive unique IDs:        1,436,096  Assumed   active unique IDs:        3,269,648  frs rows total:            3,456,042  frs clearly inactive IDs:  1,436,096  frs rows actives:          2,573,338  frs_by_programid rows:     3,440,036  frs_by_naics rows:           679,471  frs_by_sic rows:           1,081,742    Classes ‘data.table’ and 'data.frame':\t    Retained only these columns for this package      $ lat           : num  18.4 18.4 18.5 18.2 18.2 ...   $ lon           : num  -66.1 -66.1 -66.8 -67.1 -67.2 ...   $ REGISTRY_ID   : chr  \"110000307668\" \"110000307695\" \"110000307739\" \"110000307757\" ...   $ PRIMARY_NAME  : chr  \"HB FULLER COMPANY HBF PUERTO RICO\" \"RAMCO CHEMICALS INCORPORATED\"    $ NAICS         : chr  \"325520\" \"\" \"311119\" \"312120\" ...   $ SIC           : chr  \"2842\" \"2048\" \"2047, 2048, 2091\" ...   $ PGM_SYS_ACRNMS: chr  \"NCDB:I02#19880913A2001 2, RCRAINFO:PRD090122136"},{"path":[]},{"path":"/reference/frsprogramcodes.html","id":null,"dir":"Reference","previous_headings":"","what":"frsprogramcodes DATA EPA programs listed in Facility Registry Service — frsprogramcodes","title":"frsprogramcodes DATA EPA programs listed in Facility Registry Service — frsprogramcodes","text":"","code":"data.frame                                                                  description     code                                                                  1    National Pollutant Discharge Elimination System (NPDES) (ICIS-NPDES)    NPDES    2  The Integrated Compliance Information System (ICIS) for Air (ICIS-Air)      AIR    3    The Resource Conservation and Recovery Act (RCRA) Information System RCRAINFO    4                                   Risk Management Plan (RMP) facilities      RMP    5                      The Safe Drinking Water Information System (SDWIS)     SFDW    6                              The Superfund Enterprise Management System     SEMS    7                              Clean Air Markets Division Business System   CAMDBS    8                                        Toxics Release Inventory Program     TRIS    9                                        Greenhouse Gas Reporting Program   E-GGRT    10                                             Emissions Inventory System      EIS    11                                           Toxic Substances Control Act     TSCA"},{"path":"/reference/frsprogramcodes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"frsprogramcodes DATA EPA programs listed in Facility Registry Service — frsprogramcodes","text":"Created script /data-raw/","code":""},{"path":[]},{"path":"/reference/frsprogramcodes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"frsprogramcodes DATA EPA programs listed in Facility Registry Service — frsprogramcodes","text":"","code":"if (FALSE) {   frs_by_programid[program %in% frsprogramcodes$code, .N, by=program]      setkey(frs_by_programid,\"program\")   frs_by_programid[\"TRIS\",]   }"},{"path":"/reference/frs_by_mact.html","id":null,"dir":"Reference","previous_headings":"","what":"frs_by_mact (DATA) MACT NESHAP subpart(s) that each EPA-regulated site is subject to — frs_by_mact","title":"frs_by_mact (DATA) MACT NESHAP subpart(s) that each EPA-regulated site is subject to — frs_by_mact","text":"data.table one row per site -- MACT subpart pair, multiple rows one site site covered multiple subparts. joined frs_by_programid get latlons matching facilities. @details 112k rows 83k unique program IDs table, ECHO data download ICIS Air AFS. programid column found pgm_sys_id column frs_by_programid, 6/14/23 little half found , work progress resolved. table(frs_by_mact$programid %% frs_by_programid$pgm_sys_id) FALSE  TRUE 56497 55411 Also typos downloaded dataset ECHO/FRS, \"WOOD PERSERVING AREA SOURCES\"","code":""},{"path":[]},{"path":"/reference/frs_by_mact.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"frs_by_mact (DATA) MACT NESHAP subpart(s) that each EPA-regulated site is subject to — frs_by_mact","text":"","code":"mact_table   mact_table[order(mact_table$title),]   mycodes <- c(\"BBBBBB\", \"OOOO\")   frs_by_mact[subpart %in% mycodes, ]   mact_table[grepl(\"smelt\", mact_table$title, ignore.case = T), ]   frs_by_mact[grepl(\"smelt\", title, ignore.case = T), ]   # a single site can be covered by 19 categories   frs_by_mact[, howmany := .N, by=\"programid\"][order(howmany), ]    table(frs_by_mact[, howmany := .N, by=\"programid\"][order(howmany), howmany])"},{"path":"/reference/frs_by_naics.html","id":null,"dir":"Reference","previous_headings":"","what":"frs_by_naics (DATA) data.table of NAICS code(s) for each EPA-regulated site in Facility Registry Service — frs_by_naics","title":"frs_by_naics (DATA) data.table of NAICS code(s) for each EPA-regulated site in Facility Registry Service — frs_by_naics","text":"format one row per site-NAICS pair, multiple rows one site multiple NAICS. @details SITES LACK NAICS INFO FRS! NAICS missing 80 percent facilities. frs 2,571,750 unique REGISTRY_ID values, frs_by_naics 680,000 rows 4/1/2023, 562,000 unique REGISTRY_ID values 2,900 unique NAICS codes. length(unique(frs_by_naics$REGISTRY_ID)) length(unique(frs_by_naics[,REGISTRY_ID])) length(frs_by_naics[, unique(REGISTRY_ID)]) frs_by_naics[,uniqueN(REGISTRY_ID)]   1: 34.04722 -81.15136 110000854246 325211 2: 34.04722 -81.15136 110000854246 325220 3: 34.04722 -81.15136 110000854246 325222","code":"561,999  as of 3/26/23 but early 2023 had been 564,770          lat       lon  REGISTRY_ID  NAICS"},{"path":[]},{"path":"/reference/frs_by_naics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"frs_by_naics (DATA) data.table of NAICS code(s) for each EPA-regulated site in Facility Registry Service — frs_by_naics","text":"","code":"# NAICS is missing for about 80 percent of facilities  `frs[ NAICS == \"\", .N] / frs[,.N] `  # only about 562k facilities have some NAICS info  `frs[ NAICS != \"\", .N]`  `frs_by_naics[, uniqueN(REGISTRY_ID)]` # almost exactly matches the above    dim(frs_by_naics)   # about 680k rows here, or pairs of 1 NAICS - 1 registry ID pair,  #  since some IDs have 2 or more NAICS so appear as 2 or more rows here.    # About 2,900 different NAICS codes appear here:  `frs_by_naics[,  uniqueN(NAICS)]`  `frs_by_naics[, .(sum(.N > 1)), by=NAICS][,sum(V1)]`    #  2,457 NAICS codes are used to describe more than one Registry ID   `frs_by_naics[, .(sum(.N == 1)), by=NAICS][,sum(V1)]`    # [1] 425 NAICS codes appear only once, i.e., apply to only a single facility!      # Which 2-digit NAICS are found here most often?  `frs_by_naics[ , .N, keyby=substr(NAICS,1,2)]`  `frs_by_naics[ , .N,   by=substr(NAICS,1,2)][order(N),]` # Most common is 33  # Top 10 most common 3-digit NAICS here:  `x = tail(frs_by_naics[ , .N,   by=.(n3 = substr(NAICS,1,3))][order(N), ],10)`  `cbind(x, industry = rownames(naics_categories(3))[match(x$n3, naics_categories(3))])`"},{"path":"/reference/frs_by_programid.html","id":null,"dir":"Reference","previous_headings":"","what":"frs_by_programid (DATA) data.table of Program System ID code(s) for each EPA-regulated site in\r\nthe Facility Registry Service — frs_by_programid","title":"frs_by_programid (DATA) data.table of Program System ID code(s) for each EPA-regulated site in\r\nthe Facility Registry Service — frs_by_programid","text":"frs_by_programid (DATA) data.table Program System ID code(s) EPA-regulated site Facility Registry Service","code":""},{"path":"/reference/frs_by_programid.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"frs_by_programid (DATA) data.table of Program System ID code(s) for each EPA-regulated site in\r\nthe Facility Registry Service — frs_by_programid","text":"Created frs_make_programid_lookup()  EJAMfrsdata package","code":"This is the format with one row per site-programid pair,     so multiple rows for one site if it is in multiple programs.   > dim(frs_by_programid)  [1] 3440451       5   as of 1/3/2023  nn=sample(1:nrow(frs_by_programid), 1); frs_by_programid[REGISTRY_ID == frs_by_programid$REGISTRY_ID[nn],]               lat       lon  REGISTRY_ID  program         pgm_sys_id      1: 40.21262 -100.6464 110040499724 AIRS/AFS         3114500040      2: 40.21262 -100.6464 110040499724     NDEQ              87933      3: 40.21262 -100.6464 110040499724      AIR NE0000003114500040       nn=sample(1:nrow(frs_by_programid), 1); frs_by_programid[REGISTRY_ID == frs_by_programid$REGISTRY_ID[nn],]               lat       lon  REGISTRY_ID program   pgm_sys_id      1: 47.00071 -120.5649 110037546493 WA-FSIS      1796553      2: 47.00071 -120.5649 110037546493    ICIS   1800041945      3: 47.00071 -120.5649 110037546493 WA-FSIS      7886103"},{"path":[]},{"path":"/reference/frs_by_sic.html","id":null,"dir":"Reference","previous_headings":"","what":"frs_by_sic (DATA) data.table of SIC code(s) for each EPA-regulated site in Facility Registry Service — frs_by_sic","title":"frs_by_sic (DATA) data.table of SIC code(s) for each EPA-regulated site in Facility Registry Service — frs_by_sic","text":"format one row per site-SIC pair, multiple rows one site multiple SIC.","code":""},{"path":"/reference/frs_from_naics.html","id":null,"dir":"Reference","previous_headings":"","what":"Use NAICS code or industry title text search to see FRS Facility Registry Service data on those EPA-regulated sites — frs_from_naics","title":"Use NAICS code or industry title text search to see FRS Facility Registry Service data on those EPA-regulated sites — frs_from_naics","text":"Use NAICS code industry title text search see FRS Facility Registry Service data EPA-regulated sites","code":""},{"path":"/reference/frs_from_naics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use NAICS code or industry title text search to see FRS Facility Registry Service data on those EPA-regulated sites — frs_from_naics","text":"","code":"frs_from_naics(naics_code_or_name, ...)"},{"path":"/reference/frs_from_naics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use NAICS code or industry title text search to see FRS Facility Registry Service data on those EPA-regulated sites — frs_from_naics","text":"naics_code_or_name  ... passed naics_from_any()","code":""},{"path":"/reference/frs_from_naics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use NAICS code or industry title text search to see FRS Facility Registry Service data on those EPA-regulated sites — frs_from_naics","text":"relevant rows data.table called frs, column names \"lat\" \"lon\" \"REGISTRY_ID\" \"PRIMARY_NAME\" \"NAICS\" \"PGM_SYS_ACRNMS\"","code":""},{"path":[]},{"path":"/reference/frs_from_naics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use NAICS code or industry title text search to see FRS Facility Registry Service data on those EPA-regulated sites — frs_from_naics","text":"","code":"frs_from_naics(\"uranium\")   mapfast(frs_from_naics(naics_from_any(\"nuclear\")$code))   naics_from_any(\"silver\")   naics_from_name(\"silver\")   naics_from_any(212222 )   frs_from_naics(21222)   regid_from_naics(21222)   latlon_from_naics(21222)"},{"path":"/reference/frs_from_program.html","id":null,"dir":"Reference","previous_headings":"","what":"Use EPA Program acronym like TRIS to see FRS Facility Registry Service data on those EPA-regulated sites — frs_from_program","title":"Use EPA Program acronym like TRIS to see FRS Facility Registry Service data on those EPA-regulated sites — frs_from_program","text":"Get data.table based given FRS Program System CATEGORY. Find FRS sites program like RCRAINFO, TRIS, others.","code":""},{"path":"/reference/frs_from_program.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use EPA Program acronym like TRIS to see FRS Facility Registry Service data on those EPA-regulated sites — frs_from_program","text":"","code":"frs_from_program(program)"},{"path":"/reference/frs_from_program.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use EPA Program acronym like TRIS to see FRS Facility Registry Service data on those EPA-regulated sites — frs_from_program","text":"program vector one EPA Program names used FRS","code":""},{"path":"/reference/frs_from_program.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use EPA Program acronym like TRIS to see FRS Facility Registry Service data on those EPA-regulated sites — frs_from_program","text":"relevant rows data.table called frs, column names \"lat\" \"lon\" \"REGISTRY_ID\" \"PRIMARY_NAME\" \"NAICS\" \"PGM_SYS_ACRNMS\"","code":""},{"path":"/reference/frs_from_programid.html","id":null,"dir":"Reference","previous_headings":"","what":"Use EPA Program ID to see FRS Facility Registry Service data on those EPA-regulated sites — frs_from_programid","title":"Use EPA Program ID to see FRS Facility Registry Service data on those EPA-regulated sites — frs_from_programid","text":"Use EPA Program ID see FRS Facility Registry Service data EPA-regulated sites","code":""},{"path":"/reference/frs_from_programid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use EPA Program ID to see FRS Facility Registry Service data on those EPA-regulated sites — frs_from_programid","text":"","code":"frs_from_programid(programid)"},{"path":"/reference/frs_from_programid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use EPA Program ID to see FRS Facility Registry Service data on those EPA-regulated sites — frs_from_programid","text":"programid vector one EPA Program ID codes used FRS","code":""},{"path":"/reference/frs_from_programid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use EPA Program ID to see FRS Facility Registry Service data on those EPA-regulated sites — frs_from_programid","text":"relevant rows data.table called frs, column names \"lat\" \"lon\" \"REGISTRY_ID\" \"PRIMARY_NAME\" \"NAICS\" \"PGM_SYS_ACRNMS\"","code":""},{"path":"/reference/frs_from_programid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use EPA Program ID to see FRS Facility Registry Service data on those EPA-regulated sites — frs_from_programid","text":"","code":"x = frs_from_programid(testids_program_sys_id)  x  mapfast(x)"},{"path":"/reference/frs_from_regid.html","id":null,"dir":"Reference","previous_headings":"","what":"Use registry ID to see FRS Facility Registry Service data on those EPA-regulated sites — frs_from_regid","title":"Use registry ID to see FRS Facility Registry Service data on those EPA-regulated sites — frs_from_regid","text":"Use registry ID see FRS Facility Registry Service data EPA-regulated sites","code":""},{"path":"/reference/frs_from_regid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use registry ID to see FRS Facility Registry Service data on those EPA-regulated sites — frs_from_regid","text":"","code":"frs_from_regid(regid)"},{"path":"/reference/frs_from_regid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use registry ID to see FRS Facility Registry Service data on those EPA-regulated sites — frs_from_regid","text":"regid vector one EPA Registry ID codes used FRS","code":""},{"path":"/reference/frs_from_regid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use registry ID to see FRS Facility Registry Service data on those EPA-regulated sites — frs_from_regid","text":"relevant rows data.table called frs, column names \"lat\" \"lon\" \"REGISTRY_ID\" \"PRIMARY_NAME\" \"NAICS\" \"PGM_SYS_ACRNMS\"","code":""},{"path":"/reference/frs_from_regid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use registry ID to see FRS Facility Registry Service data on those EPA-regulated sites — frs_from_regid","text":"","code":"frs_from_regid(testids_registry_id)   frs_from_regid(110000307695)   frs_from_regid(\"110000307695\")"},{"path":"/reference/frs_from_sic.html","id":null,"dir":"Reference","previous_headings":"","what":"Use SIC code or industry title text search to see FRS Facility Registry Service data on those EPA-regulated sites — frs_from_sic","title":"Use SIC code or industry title text search to see FRS Facility Registry Service data on those EPA-regulated sites — frs_from_sic","text":"Use SIC code industry title text search see FRS Facility Registry Service data EPA-regulated sites","code":""},{"path":"/reference/frs_from_sic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use SIC code or industry title text search to see FRS Facility Registry Service data on those EPA-regulated sites — frs_from_sic","text":"","code":"frs_from_sic(sic_code_or_name, ...)"},{"path":"/reference/frs_from_sic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use SIC code or industry title text search to see FRS Facility Registry Service data on those EPA-regulated sites — frs_from_sic","text":"... passed naics_from_any() naics_code_or_name","code":""},{"path":"/reference/frs_from_sic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use SIC code or industry title text search to see FRS Facility Registry Service data on those EPA-regulated sites — frs_from_sic","text":"relevant rows data.table called frs, column names \"lat\" \"lon\" \"REGISTRY_ID\" \"PRIMARY_NAME\" \"NAICS\" \"SIC\" \"PGM_SYS_ACRNMS\"","code":""},{"path":[]},{"path":"/reference/frs_from_sic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use SIC code or industry title text search to see FRS Facility Registry Service data on those EPA-regulated sites — frs_from_sic","text":"","code":"frs_from_sic(\"glass\")   mapfast(frs_from_sic(sic_from_any(\"silver\")$code))   sic_from_any(\"silver\")   sic_from_name(\"silver\")   sic_from_any('0780')   frs_from_sic('0780')   regid_from_sic('0780')   latlon_from_sic('0780')"},{"path":"/reference/frs_from_sitename.html","id":null,"dir":"Reference","previous_headings":"","what":"Use site name text search to see FRS Facility Registry Service data on those EPA-regulated sites — frs_from_sitename","title":"Use site name text search to see FRS Facility Registry Service data on those EPA-regulated sites — frs_from_sitename","text":"SLOW search within PRIMARY_NAME facilities matching text","code":""},{"path":"/reference/frs_from_sitename.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use site name text search to see FRS Facility Registry Service data on those EPA-regulated sites — frs_from_sitename","text":"","code":"frs_from_sitename(sitenames, ignore.case = TRUE, fixed = FALSE)"},{"path":"/reference/frs_from_sitename.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use site name text search to see FRS Facility Registry Service data on those EPA-regulated sites — frs_from_sitename","text":"sitenames one strings vector, can regular expressions query exact match using fixed=TRUE ignore.case logical, search case sensitive default (unlike grepl() default) fixed see grepl(), set TRUE looks exact matches","code":""},{"path":"/reference/frs_from_sitename.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use site name text search to see FRS Facility Registry Service data on those EPA-regulated sites — frs_from_sitename","text":"relevant rows data.table called frs, column names \"lat\" \"lon\" \"REGISTRY_ID\" \"PRIMARY_NAME\" \"NAICS\" \"PGM_SYS_ACRNMS\"","code":""},{"path":"/reference/frs_from_sitename.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use site name text search to see FRS Facility Registry Service data on those EPA-regulated sites — frs_from_sitename","text":"","code":"if (FALSE) {  # very slow  x=frs_from_sitename  nrow(x)  head(x) }"},{"path":"/reference/frs_is_valid.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate FRS Registry ID table uploaded (just checks colname, mostly) — frs_is_valid","title":"Validate FRS Registry ID table uploaded (just checks colname, mostly) — frs_is_valid","text":"Check proper colname (seems valid alias)","code":""},{"path":"/reference/frs_is_valid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate FRS Registry ID table uploaded (just checks colname, mostly) — frs_is_valid","text":"","code":"frs_is_valid(frs_upload)"},{"path":"/reference/frs_is_valid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate FRS Registry ID table uploaded (just checks colname, mostly) — frs_is_valid","text":"frs_upload upload frs registry IDs table converted data frame (data.table gets handled ) ids column whose name among allowed aliases get tried : colname FRS regids must one REGISTRY_ID, RegistryID, regid, siteid, checked order preference.","code":""},{"path":"/reference/frs_is_valid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate FRS Registry ID table uploaded (just checks colname, mostly) — frs_is_valid","text":"boolean value (valid valid)","code":""},{"path":"/reference/frs_is_valid.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Validate FRS Registry ID table uploaded (just checks colname, mostly) — frs_is_valid","text":"note checks aliases (REGISTRY_ID, RegistryID, regid, siteid) order valid name found even fails actually contain valid ids, func go back try rest possible aliases, two cols regid siteid siteid valid registry ID values, func fail figure say invalid.","code":""},{"path":"/reference/functions_in_pkg.html","id":null,"dir":"Reference","previous_headings":"","what":"utility to see which objects in a loaded/attached package are exported functions, internal (unexported) objects, or datasets — functions_in_pkg","title":"utility to see which objects in a loaded/attached package are exported functions, internal (unexported) objects, or datasets — functions_in_pkg","text":"utility see objects loaded/attached package exported functions, internal (unexported) objects, datasets","code":""},{"path":"/reference/functions_in_pkg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"utility to see which objects in a loaded/attached package are exported functions, internal (unexported) objects, or datasets — functions_in_pkg","text":"","code":"functions_in_pkg(   pkg,   alphasort_table = FALSE,   internal_included = TRUE,   exportedfuncs_included = TRUE,   data_included = TRUE,   vectoronly = FALSE )"},{"path":"/reference/functions_in_pkg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"utility to see which objects in a loaded/attached package are exported functions, internal (unexported) objects, or datasets — functions_in_pkg","text":"pkg name package character like \"EJAM\" alphasort_table default FALSE, show internal first group, exported funcs, datasets internal_included default TRUE includes internal (unexported) objects list exportedfuncs_included default TRUE includes exported functions (non-datasets, actually) list data_included default TRUE includes datasets list, seen via data(package=pkg) vectoronly set TRUE just get character vector object names instead data.frame table output","code":""},{"path":"/reference/functions_in_pkg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"utility to see which objects in a loaded/attached package are exported functions, internal (unexported) objects, or datasets — functions_in_pkg","text":"data.table colnames object, exported, data  exported data 1 0 T/F, unless vectoronly = TRUE case returns character vector","code":""},{"path":[]},{"path":"/reference/functions_in_pkg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"utility to see which objects in a loaded/attached package are exported functions, internal (unexported) objects, or datasets — functions_in_pkg","text":"","code":"functions_in_pkg(\"datasets\") # functions_in_pkg(\"EJAMejscreenapi\")"},{"path":"/reference/functions_that_use.html","id":null,"dir":"Reference","previous_headings":"","what":"utility for developing package - searches for text in each function exported by pkg (or each .R source file in pkg/R) — functions_that_use","title":"utility for developing package - searches for text in each function exported by pkg (or each .R source file in pkg/R) — functions_that_use","text":"utility developing package - searches text function exported pkg (.R source file pkg/R)","code":""},{"path":"/reference/functions_that_use.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"utility for developing package - searches for text in each function exported by pkg (or each .R source file in pkg/R) — functions_that_use","text":"","code":"functions_that_use(text = \"stop\\\\(\", pkg = \"EJAM\", ignore_comments = TRUE)"},{"path":"/reference/functions_that_use.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"utility for developing package - searches for text in each function exported by pkg (or each .R source file in pkg/R) — functions_that_use","text":"text something like \"EJAM::\" \"stop\\(\" \"library\\(\" \"***\" pkg name package path source package root folder - checks exported functions installed package, pkg = installed package character string like \"EJAM\" checks .R source FILE actual function, pkg = root folder source package subfolder called R .R source files ignore_comments logical, ignore_comments ignored treated TRUE pkg = installed package ignore_comments used pkg = folder contains .R files Note fail ignore comments .R files end line actual code like  print(1) # prints 1","code":""},{"path":"/reference/functions_that_use.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"utility for developing package - searches for text in each function exported by pkg (or each .R source file in pkg/R) — functions_that_use","text":"vector names functions paths .R files","code":""},{"path":"/reference/functions_that_use.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"utility for developing package - searches for text in each function exported by pkg (or each .R source file in pkg/R) — functions_that_use","text":"Searches body parameter defaults exported functions.","code":""},{"path":"/reference/generate_demog_header.html","id":null,"dir":"Reference","previous_headings":"","what":"Build header for demog. + envt. tables in community report — generate_demog_header","title":"Build header for demog. + envt. tables in community report — generate_demog_header","text":"Build header demog. + envt. tables community report","code":""},{"path":"/reference/generate_demog_header.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build header for demog. + envt. tables in community report — generate_demog_header","text":"","code":"generate_demog_header()"},{"path":"/reference/generate_ej_header.html","id":null,"dir":"Reference","previous_headings":"","what":"Build header for EJ index table in community report — generate_ej_header","title":"Build header for EJ index table in community report — generate_ej_header","text":"Build header EJ index table community report","code":""},{"path":"/reference/generate_ej_header.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build header for EJ index table in community report — generate_ej_header","text":"","code":"generate_ej_header()"},{"path":"/reference/generate_ej_supp_header.html","id":null,"dir":"Reference","previous_headings":"","what":"Build header for EJ supp indexes in community report — generate_ej_supp_header","title":"Build header for EJ supp indexes in community report — generate_ej_supp_header","text":"Build header EJ supp indexes community report","code":""},{"path":"/reference/generate_ej_supp_header.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build header for EJ supp indexes in community report — generate_ej_supp_header","text":"","code":"generate_ej_supp_header()"},{"path":"/reference/generate_html_header.html","id":null,"dir":"Reference","previous_headings":"","what":"Build HTML header for community report — generate_html_header","title":"Build HTML header for community report — generate_html_header","text":"Build HTML header community report","code":""},{"path":"/reference/generate_html_header.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build HTML header for community report — generate_html_header","text":"","code":"generate_html_header(analysis_title, totalpop, locationstr, in_shiny = FALSE)"},{"path":"/reference/generate_html_header.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build HTML header for community report — generate_html_header","text":"analysis_title, title use header report totalpop, total population included location(s) analyzed locationstr, description location(s) analyzed in_shiny, whether function called outside shiny - affects location header","code":""},{"path":"/reference/getblocksnearby.html","id":null,"dir":"Reference","previous_headings":"","what":"Very fast way to distances to all nearby Census blocks — getblocksnearby","title":"Very fast way to distances to all nearby Census blocks — getblocksnearby","text":"Get distance site (e.g., facility) Census block centroid within radius Given set points specified radius, function quickly finds US Census blocks near point. point, uses specified radius distance finds distance every block within circle defined radius. block defined Census-provided internal point, latitude longitude. point can location regulated facility type site, blocks high-resolution source information residents live. Finding blocks internal points circle provides way quickly estimate fraction block group inside circular buffer accurately quickly areal apportionment block groups provide.","code":""},{"path":"/reference/getblocksnearby.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Very fast way to distances to all nearby Census blocks — getblocksnearby","text":"","code":"getblocksnearby(   sitepoints,   radius = 3,   maxradius = 31.07,   avoidorphans = FALSE,   quadtree = NULL,   quiet = FALSE,   parallel = FALSE,   ... )"},{"path":"/reference/getblocksnearby.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Very fast way to distances to all nearby Census blocks — getblocksnearby","text":"sitepoints data.table columns lat, lon giving point locations sites facilities around circular buffers radius miles, defining circular buffer around site point maxradius miles distance (max distance check even 1 block point within radius) avoidorphans logical TRUE, even 1 BLOCK internal point within radius SITE, keeps looking past radius, maxradius, find nearest 1 BLOCK. EJScreen case report NA, right? , EJAM really need report stats residents presumed within radius, block centroid within radius? Best estimate might report indicators nearest block centroid probably almost always one site sitting inside , ideally adjust total count fraction blockwt based area circular buffer fraction area block apparently inside . Setting TRUE can produce unexpected results, match EJScreen numbers. Note creating proximity score, contrast, instead want find nearest 1 SITE none within radius BLOCK. quadtree (pointer large quadtree object) created using indexblocks() uses SearchTree package. Takes 2-5 seconds create time needed. can automatically created package attached via .onAttach() function quiet Optional. set TRUE avoid message using getblock_diagnostics(), relevant user saved output function. ... passed getblocksnearbyviaQuadTree() functions","code":""},{"path":"/reference/getblocksnearby.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Very fast way to distances to all nearby Census blocks — getblocksnearby","text":"See ejamit() examples. getblocksnearby() wrapper redirecting right version, like getblocksnearbyviaQuadTree() Census block \"internal points\" (defined Census Bureau) actually looks , like centroids. blocks pre-indexed whole USA, via data object quadtree aka localtree","code":""},{"path":[]},{"path":"/reference/getblocksnearby2.html","id":null,"dir":"Reference","previous_headings":"","what":"DRAFT / WAS WORK IN PROGRESS  Key buffering function - wrapper redirecting to the right version of getblocksnearby() — getblocksnearby2","title":"DRAFT / WAS WORK IN PROGRESS  Key buffering function - wrapper redirecting to the right version of getblocksnearby() — getblocksnearby2","text":"DRAFT / WORK PROGRESS  Key buffering function - wrapper redirecting right version getblocksnearby()","code":""},{"path":"/reference/getblocksnearby2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DRAFT / WAS WORK IN PROGRESS  Key buffering function - wrapper redirecting to the right version of getblocksnearby() — getblocksnearby2","text":"","code":"getblocksnearby2(   sitepoints,   radius = 3,   maxradius = 31.07,   avoidorphans = FALSE,   quadtree = is.null,   ... )"},{"path":"/reference/getblocksnearby2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DRAFT / WAS WORK IN PROGRESS  Key buffering function - wrapper redirecting to the right version of getblocksnearby() — getblocksnearby2","text":"sitepoints see getblocksnearbyviaQuadTree() functions radius see getblocksnearbyviaQuadTree() functions maxradius see getblocksnearbyviaQuadTree() functions avoidorphans see getblocksnearbyviaQuadTree() functions quadtree large quadtree object created SearchTree package example: SearchTrees::createTree( quaddata, treeType = \"quad\", dataType = \"point\") ... see getblocksnearbyviaQuadTree_Clustered() functions","code":""},{"path":"/reference/getblocksnearby2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"DRAFT / WAS WORK IN PROGRESS  Key buffering function - wrapper redirecting to the right version of getblocksnearby() — getblocksnearby2","text":"examples, see ejamit() Like getblocksnearby() tries handle localtree quadtree parameter differently sure check right environment.","code":""},{"path":[]},{"path":"/reference/getblocksnearbyviaQuadTree.html","id":null,"dir":"Reference","previous_headings":"","what":"Fast way to find nearby points (distance to each Census block centroid near each site) — getblocksnearbyviaQuadTree","title":"Fast way to find nearby points (distance to each Census block centroid near each site) — getblocksnearbyviaQuadTree","text":"getblocksnearby() uses work. Given set points specified radius miles, function quickly finds US Census blocks near point. work actually supporting getblocksnearby()","code":""},{"path":"/reference/getblocksnearbyviaQuadTree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fast way to find nearby points (distance to each Census block centroid near each site) — getblocksnearbyviaQuadTree","text":"","code":"getblocksnearbyviaQuadTree(   sitepoints,   radius = 3,   maxradius = 31.07,   avoidorphans = FALSE,   report_progress_every_n = 500,   quiet = FALSE,   retain_unadjusted_distance = TRUE,   quadtree,   updateProgress = NULL )"},{"path":"/reference/getblocksnearbyviaQuadTree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fast way to find nearby points (distance to each Census block centroid near each site) — getblocksnearbyviaQuadTree","text":"sitepoints data.table columns lat, lon giving point locations sites facilities around circular buffers radius miles, defining circular buffer around site point maxradius miles distance (max distance check even 1 block point within radius) avoidorphans logical TRUE, even 1 BLOCK internal point within radius SITE, keeps looking past radius, maxradius, find nearest 1 BLOCK. EJScreen case report NA, right? , EJAM really need report stats residents presumed within radius, block centroid within radius? Best estimate might report indicators nearest block centroid probably almost always one site sitting inside , ideally adjust total count fraction blockwt based area circular buffer fraction area block apparently inside . Setting TRUE can produce unexpected results, match EJScreen numbers. Note creating proximity score, contrast, instead want find nearest 1 SITE none within radius BLOCK. report_progress_every_n Reports progress console every n points, mostly testing, progress bar feature might useful unless super fast. quiet Optional. set TRUE avoid message using getblock_diagnostics(), relevant user saved output function. retain_unadjusted_distance set FALSE drop save memory/storage. TRUE, distance_unadjusted column save actual distance site block internal point -- distance column always represents distance average resident block, estimated adjusting site block distance cases small relative size block, put lower limit , can result large estimate distance block large. See EJScreen documentation. quadtree (pointer large quadtree object) created using indexblocks() uses SearchTree package. Takes 2-5 seconds create time needed. can automatically created package attached via .onAttach() function updateProgress, optional function update Shiny progress bar","code":""},{"path":"/reference/getblocksnearbyviaQuadTree.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fast way to find nearby points (distance to each Census block centroid near each site) — getblocksnearbyviaQuadTree","text":"point, uses specified search radius finds distance every block within circle defined radius. block defined Census-provided internal point, latitude longitude. Results sites2blocks table used doaggregate(), distance miles one output column data.table. Adjusts distance avg resident block small relative block size, way EJScreen adjusts distances creating proximity scores. point can location regulated facility type site, blocks high-resolution source information residents live. Finding blocks internal points circle provides way quickly estimate fraction block group inside circular buffer accurately quickly areal apportionment block groups provide.","code":""},{"path":[]},{"path":"/reference/getblocksnearbyviaQuadTree.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fast way to find nearby points (distance to each Census block centroid near each site) — getblocksnearbyviaQuadTree","text":"","code":"# indexblocks() # if localtree not available yet, quadtree = localtree   x = getblocksnearby(testpoints_1000, radius = 3)"},{"path":"/reference/getblocksnearbyviaQuadTree_Clustered.html","id":null,"dir":"Reference","previous_headings":"","what":"DRAFT / WAS WORK IN PROGRESS  - find nearby blocks using Quad Tree data structure for speed, CLUSTERED FOR PARALLEL PROCESSING — getblocksnearbyviaQuadTree_Clustered","title":"DRAFT / WAS WORK IN PROGRESS  - find nearby blocks using Quad Tree data structure for speed, CLUSTERED FOR PARALLEL PROCESSING — getblocksnearbyviaQuadTree_Clustered","text":"Uses packages parallel snow. parallel::makePSOCKcluster enhanced version snow::makeSOCKcluster package snow. runs Rscript specified host(s) set worker process listens socket expressions evaluate, returns results (serialized objects).","code":""},{"path":"/reference/getblocksnearbyviaQuadTree_Clustered.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DRAFT / WAS WORK IN PROGRESS  - find nearby blocks using Quad Tree data structure for speed, CLUSTERED FOR PARALLEL PROCESSING — getblocksnearbyviaQuadTree_Clustered","text":"","code":"getblocksnearbyviaQuadTree_Clustered(   sitepoints,   radius,   maxradius,   avoidorphans,   CountCPU = 1,   quadtree )"},{"path":"/reference/getblocksnearbyviaQuadTree_Clustered.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DRAFT / WAS WORK IN PROGRESS  - find nearby blocks using Quad Tree data structure for speed, CLUSTERED FOR PARALLEL PROCESSING — getblocksnearbyviaQuadTree_Clustered","text":"sitepoints data.table columns LAT, LONG radius miles maxradius miles distance avoidorphans logical CountCPU parallel processing via makeCluster() doSNOW::registerDoSNOW() quadtree index US blocks like localtree","code":""},{"path":"/reference/getblocksnearbyviaQuadTree_Clustered.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"DRAFT / WAS WORK IN PROGRESS  - find nearby blocks using Quad Tree data structure for speed, CLUSTERED FOR PARALLEL PROCESSING — getblocksnearbyviaQuadTree_Clustered","text":"examples, see getblocksnearbyviaQuadTree() Uses indexgridsize quaddata  variables come global environment (pass function rather assume global env?)","code":""},{"path":[]},{"path":"/reference/getblocksnearby_from_fips.html","id":null,"dir":"Reference","previous_headings":"","what":"Find all blocks within each of the FIPS codes provided — getblocksnearby_from_fips","title":"Find all blocks within each of the FIPS codes provided — getblocksnearby_from_fips","text":"Allows EJAM analyze compare Counties, example","code":""},{"path":"/reference/getblocksnearby_from_fips.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find all blocks within each of the FIPS codes provided — getblocksnearby_from_fips","text":"","code":"getblocksnearby_from_fips(fips, inshiny = FALSE, need_blockwt = TRUE)"},{"path":"/reference/getblocksnearby_from_fips.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find all blocks within each of the FIPS codes provided — getblocksnearby_from_fips","text":"fips vector FIPS codes identifying blockgroups, tracts, counties, states. useful -- instead gettings stats comparing circular buffers polygons -- one getting stats one tracts, analyzing comparing blockgroups county, comparing whole counties , within State. inshiny used shiny app server code handle errors via validate() instead stop() need_blockwt set FALSE speed need blockwt","code":""},{"path":"/reference/getblocksnearby_from_fips.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find all blocks within each of the FIPS codes provided — getblocksnearby_from_fips","text":"getblocksnearby one row per FIPS, distance column irrelevant","code":""},{"path":[]},{"path":"/reference/getblocksnearby_from_fips.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find all blocks within each of the FIPS codes provided — getblocksnearby_from_fips","text":"","code":"x <- getblocksnearby_from_fips(fips_counties_from_state_abbrev(\"DE\"))   counties_ej <- doaggregate(x)   #cannot use mapfast(counties_ej$results_bysite) since no lat lon.  mapfastej_counties() should work...   y =  ejamit(fips=fips_counties_from_statename(\"Delaware\"))      # x=getblocksnearby_from_fips(\"482011000011\") # one blockgroup only   # y=doaggregate(x)"},{"path":"/reference/getblocks_diagnostics.html","id":null,"dir":"Reference","previous_headings":"","what":"utility - How many blocks and many other stats about blocks and sites — getblocks_diagnostics","title":"utility - How many blocks and many other stats about blocks and sites — getblocks_diagnostics","text":"utility - many blocks many stats blocks sites","code":""},{"path":"/reference/getblocks_diagnostics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"utility - How many blocks and many other stats about blocks and sites — getblocks_diagnostics","text":"","code":"getblocks_diagnostics(   x,   detailed = FALSE,   see_pctiles = FALSE,   see_distanceplot = FALSE )"},{"path":"/reference/getblocks_diagnostics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"utility - How many blocks and many other stats about blocks and sites — getblocks_diagnostics","text":"x output getblocksnearby() like testoutput_getblocksnearby_10pts_1miles detailed TRUE, also shows console long table frequencies via getblocks_summarize_blocks_per_site() see_pctiles set TRUE see 20 percentiles distance table see_distanceplot TRUE, also draws scatter plot adjusted vs unadj distances","code":""},{"path":"/reference/getblocks_diagnostics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"utility - How many blocks and many other stats about blocks and sites — getblocks_diagnostics","text":"list stats","code":""},{"path":[]},{"path":"/reference/getblocks_diagnostics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"utility - How many blocks and many other stats about blocks and sites — getblocks_diagnostics","text":"","code":"getblocks_diagnostics(testoutput_getblocksnearby_10pts_1miles)   # library(data.table)   x <- data.table::copy(testpoints_10)   setDT(x)   pts <- rbind(data.table(lat = 40.3, lon = -96.23),     x[ , .(lat, lon)])  z <- getblocksnearbyviaQuadTree(pts, 1, quadtree = localtree, quiet = T)  z[ , .(blocks = .N) , keyby = 'ejam_uniq_id']  plotblocksnearby(pts, radius = 1, sites2blocks = z)  zz <- getblocks_diagnostics(z, detailed = T, see_pctiles = T) cbind(stats = zz)    getblocks_diagostics(testoutput_getblocksnearby_1000pts_1miles, see_distanceplot = TRUE)"},{"path":"/reference/getblocks_predict_blocks_per_site.html","id":null,"dir":"Reference","previous_headings":"","what":"utility - estimate how large table might be that will be output of getblocksnearby() — getblocks_predict_blocks_per_site","title":"utility - estimate how large table might be that will be output of getblocksnearby() — getblocks_predict_blocks_per_site","text":"utility - estimate large table might output getblocksnearby()","code":""},{"path":"/reference/getblocks_predict_blocks_per_site.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"utility - estimate how large table might be that will be output of getblocksnearby() — getblocks_predict_blocks_per_site","text":"","code":"getblocks_predict_blocks_per_site(nsites, radius)"},{"path":"/reference/getblocks_predict_blocks_per_site.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"utility - estimate how large table might be that will be output of getblocksnearby() — getblocks_predict_blocks_per_site","text":"nsites count sites radius radius miles","code":""},{"path":"/reference/getblocks_predict_blocks_per_site.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"utility - estimate how large table might be that will be output of getblocksnearby() — getblocks_predict_blocks_per_site","text":"number","code":""},{"path":"/reference/getblocks_summarize_blocks_per_site.html","id":null,"dir":"Reference","previous_headings":"","what":"utility - How many blocks are near the sites (pop density affects accuracy) — getblocks_summarize_blocks_per_site","title":"utility - How many blocks are near the sites (pop density affects accuracy) — getblocks_summarize_blocks_per_site","text":"Number blocks near avg site, many sites 1 fewer 30 blocks nearby, etc.","code":""},{"path":"/reference/getblocks_summarize_blocks_per_site.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"utility - How many blocks are near the sites (pop density affects accuracy) — getblocks_summarize_blocks_per_site","text":"","code":"getblocks_summarize_blocks_per_site(x, varname = \"ejam_uniq_id\")"},{"path":"/reference/getblocks_summarize_blocks_per_site.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"utility - How many blocks are near the sites (pop density affects accuracy) — getblocks_summarize_blocks_per_site","text":"x output getblocksnearby() varname colname variable data.table x one summarize ","code":""},{"path":"/reference/getblocks_summarize_blocks_per_site.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"utility - How many blocks are near the sites (pop density affects accuracy) — getblocks_summarize_blocks_per_site","text":"invisibly, list stats","code":""},{"path":[]},{"path":"/reference/getblocks_summarize_sites_per_block.html","id":null,"dir":"Reference","previous_headings":"","what":"utility - How many sites are near the blocks (site density near residents) — getblocks_summarize_sites_per_block","title":"utility - How many sites are near the blocks (site density near residents) — getblocks_summarize_sites_per_block","text":"utility - many sites near blocks (site density near residents)","code":""},{"path":"/reference/getblocks_summarize_sites_per_block.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"utility - How many sites are near the blocks (site density near residents) — getblocks_summarize_sites_per_block","text":"","code":"getblocks_summarize_sites_per_block(x, varname = \"blockid\")"},{"path":"/reference/getblocks_summarize_sites_per_block.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"utility - How many sites are near the blocks (site density near residents) — getblocks_summarize_sites_per_block","text":"x output getblocksnearby() like testoutput_getblocksnearby_10pts_1miles varname colname variable data.table x one summarize ","code":""},{"path":"/reference/getblocks_summarize_sites_per_block.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"utility - How many sites are near the blocks (site density near residents) — getblocks_summarize_sites_per_block","text":"invisibly, list stats","code":""},{"path":[]},{"path":"/reference/getfrsnearby.html","id":null,"dir":"Reference","previous_headings":"","what":"DRAFTING A FUNCTION TO COUNT NEARBY SITES OF A CERTAIN TYPE — getfrsnearby","title":"DRAFTING A FUNCTION TO COUNT NEARBY SITES OF A CERTAIN TYPE — getfrsnearby","text":"DRAFTING FUNCTION COUNT NEARBY SITES CERTAIN TYPE","code":""},{"path":"/reference/getfrsnearby.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DRAFTING A FUNCTION TO COUNT NEARBY SITES OF A CERTAIN TYPE — getfrsnearby","text":"","code":"getfrsnearby(sitepoints, frspoints, radius = 1, quadtree = NULL)"},{"path":"/reference/getfrsnearby.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DRAFTING A FUNCTION TO COUNT NEARBY SITES OF A CERTAIN TYPE — getfrsnearby","text":"sitepoints sitepoints frspoints frspoints radius radius quadtree quadtree","code":""},{"path":"/reference/getfrsnearby.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DRAFTING A FUNCTION TO COUNT NEARBY SITES OF A CERTAIN TYPE — getfrsnearby","text":"table","code":""},{"path":"/reference/get_blockpoints_in_shape.html","id":null,"dir":"Reference","previous_headings":"","what":"Find all Census blocks in a polygon, using internal point of block — get_blockpoints_in_shape","title":"Find all Census blocks in a polygon, using internal point of block — get_blockpoints_in_shape","text":"Like getblocksnearby(), blocks polygon rather blocks near facility. analyzing residents certain zones places elevated risk, redlined areas, watersheds, etc.","code":""},{"path":"/reference/get_blockpoints_in_shape.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find all Census blocks in a polygon, using internal point of block — get_blockpoints_in_shape","text":"","code":"get_blockpoints_in_shape(   polys,   addedbuffermiles = 0,   blocksnearby = NULL,   dissolved = FALSE,   safety_margin_ratio = 1.1,   crs = 4269 )"},{"path":"/reference/get_blockpoints_in_shape.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find all Census blocks in a polygon, using internal point of block — get_blockpoints_in_shape","text":"polys Spatial data sf::st_as_sf(), points shapefile_from_sitepoints(), table points lat,lon columns first converted using function, polygons addedbuffermiles width optional buffering add points (edges), miles blocksnearby optional table blocks blockid, etc (lat,lon can looked blockpoints dt) dissolved TRUE, use sf::st_union(polys) find unique blocks inside one polys safety_margin_ratio multiplied addedbuffermiles, far search blocks nearby using getblocksnearby(), using found intersection via sf:: crs used st_as_sf() st_transform() shape_buffered_from_shapefile_points(), crs = 4269 Geodetic CRS NAD83","code":""},{"path":"/reference/get_blockpoints_in_shape.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find all Census blocks in a polygon, using internal point of block — get_blockpoints_in_shape","text":"Block points table blocks whose internal point inside buffer just circular buffer specified radius polys just points.","code":""},{"path":"/reference/get_blockpoints_in_shape.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find all Census blocks in a polygon, using internal point of block — get_blockpoints_in_shape","text":"uses getblocksnearby() get fast rough/good estimate US block points nearby (safety margin - see param ), using sf:: carefully identify candidate blocks actually inside polygon (e.g., circle) according sf:: methods. circular buffers, just using getblocksnearby() work need function. noncircular polygons, buffered , function provide way quickly filter millions US blocks examined sf:: join / intersect, since otherwise takes forever sf:: check US blocks.","code":""},{"path":[]},{"path":"/reference/get_blockpoints_in_shape.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find all Census blocks in a polygon, using internal point of block — get_blockpoints_in_shape","text":"","code":"# y <- get_blockpoints_in_shape()      # x = shapefile_from_sitepoints(testpoints_n(2))   # y = get_blockpoints_in_shape(x, 1)  # very very slow"},{"path":"/reference/high_pctiles_tied_with_min.html","id":null,"dir":"Reference","previous_headings":"","what":"high_pctiles_tied_with_min (DATA) internal data used to handle cases where multiple places are tied for the lowest indicator score — high_pctiles_tied_with_min","title":"high_pctiles_tied_with_min (DATA) internal data used to handle cases where multiple places are tied for the lowest indicator score — high_pctiles_tied_with_min","text":"high_pctiles_tied_with_min (DATA) internal data used handle cases multiple places tied lowest indicator score","code":""},{"path":"/reference/indexblocks.html","id":null,"dir":"Reference","previous_headings":"","what":"Create localtree (a quadtree index of all US block centroids) in global environment — indexblocks","title":"Create localtree (a quadtree index of all US block centroids) in global environment — indexblocks","text":"Create localtree (quadtree index US block centroids) global environment","code":""},{"path":"/reference/indexblocks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create localtree (a quadtree index of all US block centroids) in global environment — indexblocks","text":"","code":"indexblocks()"},{"path":"/reference/indexblocks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create localtree (a quadtree index of all US block centroids) in global environment — indexblocks","text":"Returns TRUE done. Side effect creates index memory.","code":""},{"path":"/reference/indexblocks.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create localtree (a quadtree index of all US block centroids) in global environment — indexblocks","text":"Note duplicated code .onAttach() also global.R .onAttach() can edited create package loads, takes time time developer rebuilds/installs package others load EJAM. also happen global.R already.","code":""},{"path":"/reference/input_names_listing.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility checking values of input$ that appear in this code — input_names_listing","title":"Utility checking values of input$ that appear in this code — input_names_listing","text":"See appsilon pkg shiny.info now","code":""},{"path":"/reference/input_names_listing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility checking values of input$ that appear in this code — input_names_listing","text":"","code":"input_names_listing(file = \"./R/app_server.R\")"},{"path":"/reference/input_names_listing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility checking values of input$ that appear in this code — input_names_listing","text":"file path source file search ","code":""},{"path":"/reference/input_names_listing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility checking values of input$ that appear in this code — input_names_listing","text":"character vector ids inputs like x,y,z found input$x input$y input$z","code":""},{"path":"/reference/islandareas.html","id":null,"dir":"Reference","previous_headings":"","what":"islandareas (DATA) table, bounds info on lat lon of US Island Areas — islandareas","title":"islandareas (DATA) table, bounds info on lat lon of US Island Areas — islandareas","text":"data.frame info approximate lat lon bounding boxes around American Samoa, Guam, Commonwealth Northern Mariana Islands (Northern Mariana Islands), United States Virgin Islands. See also stateinfo [] See http://www.census.gov/geo/reference/gtc/gtc_island.html See datacreate_islandareas.R data-raw/islandareas.xlsx Note US minor outlying islands list widely dispersed. include Midway Islands, etc.","code":""},{"path":"/reference/latlon_as.numeric.html","id":null,"dir":"Reference","previous_headings":"","what":"Strip non-numeric characters from a vector — latlon_as.numeric","title":"Strip non-numeric characters from a vector — latlon_as.numeric","text":"Remove characters minus signs, decimal points, numeric digits","code":""},{"path":"/reference/latlon_as.numeric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Strip non-numeric characters from a vector — latlon_as.numeric","text":"","code":"latlon_as.numeric(x)"},{"path":"/reference/latlon_as.numeric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Strip non-numeric characters from a vector — latlon_as.numeric","text":"x vector something supposed numbers like latitude longitude may character vector characters like tab space percent sign dollar sign","code":""},{"path":"/reference/latlon_as.numeric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Strip non-numeric characters from a vector — latlon_as.numeric","text":"numeric vector length x","code":""},{"path":"/reference/latlon_as.numeric.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Strip non-numeric characters from a vector — latlon_as.numeric","text":"Useful latitude longitude vector spaces, tabs, etc. CAUTION - Assumes stripping making numeric fix whatever problem end result valid set numbers. Inf etc. turned NA values. Empty zero length string turned NA without warning. NA left NA. anything empty NA interpreted number, returns NA offers warning.","code":""},{"path":[]},{"path":"/reference/latlon_as.numeric.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Strip non-numeric characters from a vector — latlon_as.numeric","text":"","code":"latlon_as.numeric(c(\"-97.179167000000007\", \" -94.0533\", \"-95.152083000000005\"))   latlon_as.numeric(-3:3)   latlon_as.numeric(c(1:3, NA))   latlon_as.numeric(c(1, 'asdf'))   latlon_as.numeric(c(1, ''))   latlon_as.numeric(c(1, '', NA))   latlon_as.numeric(c('aword', '$b'))   latlon_as.numeric(c('-10.5%', '<5', '$100'))   latlon_as.numeric(c(Inf, 1))"},{"path":"/reference/latlon_df_clean.html","id":null,"dir":"Reference","previous_headings":"","what":"Get lat lon columns and clean up those latitude and longitude columns in a data.frame — latlon_df_clean","title":"Get lat lon columns and clean up those latitude and longitude columns in a data.frame — latlon_df_clean","text":"Utility identify lat lon columns, renaming cleaning .","code":""},{"path":"/reference/latlon_df_clean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get lat lon columns and clean up those latitude and longitude columns in a data.frame — latlon_df_clean","text":"","code":"latlon_df_clean(df)"},{"path":"/reference/latlon_df_clean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get lat lon columns and clean up those latitude and longitude columns in a data.frame — latlon_df_clean","text":"df data.frame columns lat lon names can interpreted ","code":""},{"path":"/reference/latlon_df_clean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get lat lon columns and clean up those latitude and longitude columns in a data.frame — latlon_df_clean","text":"Returns data.frame relevant colnames changed lat lon, invalid lat lon values cleaned possible else replaced NA","code":""},{"path":"/reference/latlon_df_clean.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get lat lon columns and clean up those latitude and longitude columns in a data.frame — latlon_df_clean","text":"Tries figure columns seem lat lon values, renames data.frame. Cleans lat lon values (removes extra characters, makes numeric)","code":""},{"path":[]},{"path":"/reference/latlon_df_clean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get lat lon columns and clean up those latitude and longitude columns in a data.frame — latlon_df_clean","text":"","code":"#  x <- latlon_df_clean(x)"},{"path":"/reference/latlon_from_anything.html","id":null,"dir":"Reference","previous_headings":"","what":"Get lat/lon flexibly - from file, data.frame, data.table, or lat/lon vectors — latlon_from_anything","title":"Get lat/lon flexibly - from file, data.frame, data.table, or lat/lon vectors — latlon_from_anything","text":"Try figure user provided latitude / longitude vectors, data.frame, file, interactively pick file.","code":""},{"path":"/reference/latlon_from_anything.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get lat/lon flexibly - from file, data.frame, data.table, or lat/lon vectors — latlon_from_anything","text":"","code":"latlon_from_anything(x, y)"},{"path":"/reference/latlon_from_anything.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get lat/lon flexibly - from file, data.frame, data.table, or lat/lon vectors — latlon_from_anything","text":"x missing interactive mode RStudio, prompts user file. Otherwise, can filename (csv xlsx, path), data.frame/ data.table/ matrix, vector longitudes (case y must latitudes). Note even though called latlon_etc lon x comes lat among parameters x,y (unlike functions using lat,lon) File data.frame/data.table/matrix must columns called lat lon, names can inferred latlon_infer() y x vector longitudes, y must latitudes. Ignored otherwise.","code":""},{"path":"/reference/latlon_from_anything.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get lat/lon flexibly - from file, data.frame, data.table, or lat/lon vectors — latlon_from_anything","text":"data.frame least columns lon lat (others x)","code":""},{"path":"/reference/latlon_from_anything.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get lat/lon flexibly - from file, data.frame, data.table, or lat/lon vectors — latlon_from_anything","text":"function relies read_csv_or_xl()  latlon_df_clean() turn uses latlon_infer() latlon_as.numeric() latlon_is.valid() read_and_clean_points() EJAMejscreenapi general / flexible broadest way get points, still work progress similar done latlon_from_anything() except also uses functions: latlon_from_regid() latlon_from_programid()    _from_naics() ?","code":""},{"path":[]},{"path":"/reference/latlon_from_anything.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get lat/lon flexibly - from file, data.frame, data.table, or lat/lon vectors — latlon_from_anything","text":"","code":"if (interactive()) {  pts <- latlon_from_anything()  }  latlon_from_anything(testpoints_100[1:6,] )  latlon_from_anything(testpoints_100[1:6, c('lat','lon')] )  latlon_from_anything(x=testpoints_100$lon[1:6], y=testpoints_100$lat[1:6] )"},{"path":"/reference/latlon_from_mactsubpart.html","id":null,"dir":"Reference","previous_headings":"","what":"Get point locations for US EPA-regulated facilities that have\r\nsources subject to Maximum Achievable Control Technology (MACT) standards\r\nunder the Clean Air Act. — latlon_from_mactsubpart","title":"Get point locations for US EPA-regulated facilities that have\r\nsources subject to Maximum Achievable Control Technology (MACT) standards\r\nunder the Clean Air Act. — latlon_from_mactsubpart","text":"Get point locations US EPA-regulated facilities sources subject Maximum Achievable Control Technology (MACT) standards Clean Air Act.","code":""},{"path":"/reference/latlon_from_mactsubpart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get point locations for US EPA-regulated facilities that have\r\nsources subject to Maximum Achievable Control Technology (MACT) standards\r\nunder the Clean Air Act. — latlon_from_mactsubpart","text":"","code":"latlon_from_mactsubpart(subpart = \"JJJ\", include_if_no_latlon = FALSE)"},{"path":"/reference/latlon_from_mactsubpart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get point locations for US EPA-regulated facilities that have\r\nsources subject to Maximum Achievable Control Technology (MACT) standards\r\nunder the Clean Air Act. — latlon_from_mactsubpart","text":"subpart vector one strings indicating Subpart CFR Title 40 Part 63 covers source category interest, \"FFFF\" - see example, https://www.ecfr.gov/current/title-40/part-63/subpart-FFFF include_if_no_latlon logical - many database lack lat lon values MACT code","code":""},{"path":"/reference/latlon_from_mactsubpart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get point locations for US EPA-regulated facilities that have\r\nsources subject to Maximum Achievable Control Technology (MACT) standards\r\nunder the Clean Air Act. — latlon_from_mactsubpart","text":"data.table columns named programid, subpart, title, lat, lon, REGISTRY_ID, program US EPA FRS sites MACT code. NA none found.","code":""},{"path":"/reference/latlon_from_mactsubpart.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get point locations for US EPA-regulated facilities that have\r\nsources subject to Maximum Achievable Control Technology (MACT) standards\r\nunder the Clean Air Act. — latlon_from_mactsubpart","text":"See https://www.epa.gov/stationary-sources-air-pollution/national-emission-standards-hazardous-air-pollutants-neshap-8","code":""},{"path":"/reference/latlon_from_mactsubpart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get point locations for US EPA-regulated facilities that have\r\nsources subject to Maximum Achievable Control Technology (MACT) standards\r\nunder the Clean Air Act. — latlon_from_mactsubpart","text":"","code":"mact_table   latlon_from_mactsubpart(\"OOOO\", include_if_no_latlon = FALSE) # default   latlon_from_mactsubpart(\"OOOO\", include_if_no_latlon = TRUE)"},{"path":"/reference/latlon_from_naics.html","id":null,"dir":"Reference","previous_headings":"","what":"Find EPA-regulated facilities in FRS by NAICS code (industrial category) — latlon_from_naics","title":"Find EPA-regulated facilities in FRS by NAICS code (industrial category) — latlon_from_naics","text":"Get lat lon, Registry ID, given NAICS industry code(s) Find EPA Facility Registry Service (FRS) sites exact NAICS code (subcategories)","code":""},{"path":"/reference/latlon_from_naics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find EPA-regulated facilities in FRS by NAICS code (industrial category) — latlon_from_naics","text":"","code":"latlon_from_naics(naics, id_only = FALSE)"},{"path":"/reference/latlon_from_naics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find EPA-regulated facilities in FRS by NAICS code (industrial category) — latlon_from_naics","text":"naics vector naics codes, data.table column named code, output naics_from_any()","code":""},{"path":"/reference/latlon_from_naics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find EPA-regulated facilities in FRS by NAICS code (industrial category) — latlon_from_naics","text":"data.table (just data.frame) columns called lat, lon, REGISTRY_ID, NAICS (see id_only parameter)","code":""},{"path":"/reference/latlon_from_naics.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find EPA-regulated facilities in FRS by NAICS code (industrial category) — latlon_from_naics","text":"NOTE: many FRS sites lack NAICS code! Also, function find sites identified FRS data child NAICS (subcategory exact query)! Relies  frs_by_naics (data.table) See info NAICS industry codes https://www.naics.com/search","code":""},{"path":"/reference/latlon_from_naics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find EPA-regulated facilities in FRS by NAICS code (industrial category) — latlon_from_naics","text":"","code":"regid_from_naics(321114)   latlon_from_naics(321114)   latlon_from_naics(EJAM::naics_from_any(\"cheese\")[,code] )   head(latlon_from_naics(c(3366, 33661, 336611), id_only=TRUE))   # mapfast(frs_from_naics(336611)) # simple map"},{"path":"/reference/latlon_from_program.html","id":null,"dir":"Reference","previous_headings":"","what":"Get lat lon, Registry ID, and NAICS, for given FRS Program System CATEGORY\r\n\r\nFind all FRS sites in a program like RCRAINFO, TRIS, or others — latlon_from_program","title":"Get lat lon, Registry ID, and NAICS, for given FRS Program System CATEGORY\r\n\r\nFind all FRS sites in a program like RCRAINFO, TRIS, or others — latlon_from_program","text":"Get lat lon, Registry ID, NAICS, given FRS Program System CATEGORY Find FRS sites program like RCRAINFO, TRIS, others","code":""},{"path":"/reference/latlon_from_program.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get lat lon, Registry ID, and NAICS, for given FRS Program System CATEGORY\r\n\r\nFind all FRS sites in a program like RCRAINFO, TRIS, or others — latlon_from_program","text":"","code":"latlon_from_program(query)"},{"path":"/reference/latlon_from_program.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get lat lon, Registry ID, and NAICS, for given FRS Program System CATEGORY\r\n\r\nFind all FRS sites in a program like RCRAINFO, TRIS, or others — latlon_from_program","text":"program like \"RMP\", \"RCRAINFO\", \"TRIS\", \"RMP\", others.","code":""},{"path":"/reference/latlon_from_program.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get lat lon, Registry ID, and NAICS, for given FRS Program System CATEGORY\r\n\r\nFind all FRS sites in a program like RCRAINFO, TRIS, or others — latlon_from_program","text":"data.table lat  lon  REGISTRY_ID  program -- pgm_sys_id since duplicates REGISTRY_ID 2 different pgm_sys_id values program, results sometimes longer using frs_from_program()","code":""},{"path":"/reference/latlon_from_program.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get lat lon, Registry ID, and NAICS, for given FRS Program System CATEGORY\r\n\r\nFind all FRS sites in a program like RCRAINFO, TRIS, or others — latlon_from_program","text":"info FRS program codes general, see https://www.epa.gov/frs/frs-program-crosswalks Also see information https://echo.epa.gov/tools/data-downloads/frs-download-summary file FRS_PROGRAM_LINKS.csv info program codes ECHO uses, see https://echo.epa.gov/resources/echo-data/--data including https://www.epa.gov/frs/frs-environmental-interest-types list program acronyms, https://www.epa.gov/frs/frs-rest-services#appendixa acronym abbreviated name represents name information management system environmental program. Federal ones least 100k facilities RCRAINFO (500k sites), NPDES, ICIS, AIR, FIS, EIS, AIRS/AFS.","code":""},{"path":"/reference/latlon_from_program.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get lat lon, Registry ID, and NAICS, for given FRS Program System CATEGORY\r\n\r\nFind all FRS sites in a program like RCRAINFO, TRIS, or others — latlon_from_program","text":"","code":"if (FALSE) {  x = latlon_from_program(\"CAMDBS\")   mapfast(x)  program <- c(\"EIS\", \"UST\")  x = latlon_from_program(program)  # to get the facility name as well:  x = frs[grepl(\"RCRAINFO\", PGM_SYS_ACRNMS), ] # fast  ## x = latlon_from_regid(latlon_from_program(program)[,REGISTRY_ID])  # slower!  mapfast(x[sample(1:nrow(x), 1000), ]) }"},{"path":"/reference/latlon_from_programid.html","id":null,"dir":"Reference","previous_headings":"","what":"Get lat lon, Registry ID, and NAICS, for given FRS Program System ID — latlon_from_programid","title":"Get lat lon, Registry ID, and NAICS, for given FRS Program System ID — latlon_from_programid","text":"Get lat lon, Registry ID, NAICS, given FRS Program System ID","code":""},{"path":"/reference/latlon_from_programid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get lat lon, Registry ID, and NAICS, for given FRS Program System ID — latlon_from_programid","text":"","code":"latlon_from_programid(programid)"},{"path":"/reference/latlon_from_programid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get lat lon, Registry ID, and NAICS, for given FRS Program System ID — latlon_from_programid","text":"programid like \"XJW000012435\"","code":""},{"path":"/reference/latlon_from_programid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get lat lon, Registry ID, and NAICS, for given FRS Program System ID — latlon_from_programid","text":"data.table lat  lon  REGISTRY_ID  program   pgm_sys_id","code":""},{"path":"/reference/latlon_from_programid.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get lat lon, Registry ID, and NAICS, for given FRS Program System ID — latlon_from_programid","text":"ID identification number, permit number, assigned information management system represents facility site, waste site, operable unit, feature tracked Environmental Information System. Also note FRS API: https://www.epa.gov/frs/facility-registry-service-frs-api https://www.epa.gov/frs/frs-rest-services","code":""},{"path":"/reference/latlon_from_programid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get lat lon, Registry ID, and NAICS, for given FRS Program System ID — latlon_from_programid","text":"","code":"latlon_from_programid(c(\"XJW000012435\", \"00768SRTRSROAD1\"))  pids <- c(\"7-0540-00003\", \"354362\", \"1513529\", \"485659\", \"LAG750956\",     \"CAC002995519\", \"3601252181\", \"3601439158\")  latlon_from_regid(latlon_from_programid(pids)[,REGISTRY_ID])  latlon_from_programid(c(\"XJW000012435\", \"00768SRTRSROAD1\", \"asdfsdf\"))[,.(lat,lon)]"},{"path":"/reference/latlon_from_regid.html","id":null,"dir":"Reference","previous_headings":"","what":"Get lat lon (and NAICS) via Facility Registry ID — latlon_from_regid","title":"Get lat lon (and NAICS) via Facility Registry ID — latlon_from_regid","text":"Get lat lon (NAICS) via Facility Registry ID","code":""},{"path":"/reference/latlon_from_regid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get lat lon (and NAICS) via Facility Registry ID — latlon_from_regid","text":"","code":"latlon_from_regid(regid)"},{"path":"/reference/latlon_from_regid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get lat lon (and NAICS) via Facility Registry ID — latlon_from_regid","text":"regid Facility Registry Service ID like 110010052520","code":""},{"path":"/reference/latlon_from_regid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get lat lon (and NAICS) via Facility Registry ID — latlon_from_regid","text":"data.table columns lat,lon,REGISTRY_ID,PRIMARY_NAME,NAICS,PGM_SYS_ACRNMS","code":""},{"path":"/reference/latlon_from_regid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get lat lon (and NAICS) via Facility Registry ID — latlon_from_regid","text":"","code":"latlon_from_regid(110070874073) x = latlon_from_regid(     c(110071293460, 110070874073, 110070538057, 110044340807,        110030509215, 110019033810, 110056111559, 110056982323)         )"},{"path":"/reference/latlon_from_sic.html","id":null,"dir":"Reference","previous_headings":"","what":"Find EPA-regulated facilities in FRS by SIC code (industrial category) — latlon_from_sic","title":"Find EPA-regulated facilities in FRS by SIC code (industrial category) — latlon_from_sic","text":"Get lat lon, Registry ID, given SIC industry code(s) Find EPA Facility Registry Service (FRS) sites exact SIC code (subcategories)","code":""},{"path":"/reference/latlon_from_sic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find EPA-regulated facilities in FRS by SIC code (industrial category) — latlon_from_sic","text":"","code":"latlon_from_sic(sic, id_only = FALSE)"},{"path":"/reference/latlon_from_sic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find EPA-regulated facilities in FRS by SIC code (industrial category) — latlon_from_sic","text":"sic vector SIC codes, data.table column named code, output sic_from_any()","code":""},{"path":"/reference/latlon_from_sic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find EPA-regulated facilities in FRS by SIC code (industrial category) — latlon_from_sic","text":"data.table (just data.frame) columns called lat, lon, REGISTRY_ID, SIC (see id_only parameter)","code":""},{"path":"/reference/latlon_from_sic.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find EPA-regulated facilities in FRS by SIC code (industrial category) — latlon_from_sic","text":"NOTE: many FRS sites lack SIC code! Also, function find sites identified FRS data child SIC (subcategory exact query)! Relies  frs_by_sic (data.table) See info SIC industry codes https://www.naics.com/search","code":""},{"path":"/reference/latlon_from_sic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find EPA-regulated facilities in FRS by SIC code (industrial category) — latlon_from_sic","text":"","code":"regid_from_sic('7300')   latlon_from_sic('7300')   latlon_from_sic(sic_from_any(\"cheese\")[,code] )   head(latlon_from_sic(c('6150', '6300', '5995'), id_only=TRUE))   # mapfast(frs_from_sic('6150')) # simple map"},{"path":"/reference/latlon_infer.html","id":null,"dir":"Reference","previous_headings":"","what":"Guess which columns have lat and lon based on aliases like latitude, FacLat, etc. — latlon_infer","title":"Guess which columns have lat and lon based on aliases like latitude, FacLat, etc. — latlon_infer","text":"Guess columns lat lon based aliases like latitude, FacLat, etc.","code":""},{"path":"/reference/latlon_infer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Guess which columns have lat and lon based on aliases like latitude, FacLat, etc. — latlon_infer","text":"","code":"latlon_infer(mycolnames)"},{"path":"/reference/latlon_infer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Guess which columns have lat and lon based on aliases like latitude, FacLat, etc. — latlon_infer","text":"mycolnames e.g., colnames(x) x data.frame read.csv","code":""},{"path":"/reference/latlon_infer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Guess which columns have lat and lon based on aliases like latitude, FacLat, etc. — latlon_infer","text":"returns mycolnames except replacing best candidates lat lon","code":""},{"path":[]},{"path":"/reference/latlon_infer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Guess which columns have lat and lon based on aliases like latitude, FacLat, etc. — latlon_infer","text":"","code":"latlon_infer(c('trilat', 'belong', 'belong')) # warns if no alias found,      #  but doesnt warn of dupes in other terms, just preferred term.   latlon_infer(c('a', 'LONG', 'Longitude', 'lat')) # only the best alias is converted/used   latlon_infer(c('a', 'LONGITUDE', 'Long', 'Lat')) # only the best alias is converted/used   latlon_infer(c('a', 'longing', 'Lat', 'lat', 'LAT')) # case variants of preferred are        # left alone only if lowercase one is found   latlon_infer(c('LONG', 'long', 'lat')) # case variants of a single alias are        # converted to preferred word (if pref not found), creating dupes!  warn!   latlon_infer(c('LONG', 'LONG')) # dupes of an alias are renamed and still are dupes! warn!   latlon_infer(c('lat', 'lat', 'Lon')) # dupes left as dupes but warn!"},{"path":"/reference/latlon_is.available.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if lat lon not NA using !is.na() — latlon_is.available","title":"Check if lat lon not NA using !is.na() — latlon_is.available","text":"Check lat lon NA using !.na()","code":""},{"path":"/reference/latlon_is.available.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if lat lon not NA using !is.na() — latlon_is.available","text":"","code":"latlon_is.available(lat, lon)"},{"path":"/reference/latlon_is.available.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if lat lon not NA using !is.na() — latlon_is.available","text":"lat vector latitudes lon vector longitudes","code":""},{"path":"/reference/latlon_is.available.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if lat lon not NA using !is.na() — latlon_is.available","text":"logical vector, one element per lat lon pair (location)","code":""},{"path":[]},{"path":"/reference/latlon_is.islandareas.html","id":null,"dir":"Reference","previous_headings":"","what":"Check lat lon coordinates to see if each is approx. in general area of US Island Areas Guam, USVI, Amer Samoa or N Marianas — latlon_is.islandareas","title":"Check lat lon coordinates to see if each is approx. in general area of US Island Areas Guam, USVI, Amer Samoa or N Marianas — latlon_is.islandareas","text":"See islandareas","code":""},{"path":"/reference/latlon_is.islandareas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check lat lon coordinates to see if each is approx. in general area of US Island Areas Guam, USVI, Amer Samoa or N Marianas — latlon_is.islandareas","text":"","code":"latlon_is.islandareas(lat, lon)"},{"path":"/reference/latlon_is.islandareas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check lat lon coordinates to see if each is approx. in general area of US Island Areas Guam, USVI, Amer Samoa or N Marianas — latlon_is.islandareas","text":"lat vector latitudes lon vector longitudes","code":""},{"path":"/reference/latlon_is.islandareas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check lat lon coordinates to see if each is approx. in general area of US Island Areas Guam, USVI, Amer Samoa or N Marianas — latlon_is.islandareas","text":"vector TRUE / FALSE values indicating given lat lon pair approximately one rough bounding boxes includes 4 Island Areas.","code":""},{"path":[]},{"path":"/reference/latlon_is.islandareas.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check lat lon coordinates to see if each is approx. in general area of US Island Areas Guam, USVI, Amer Samoa or N Marianas — latlon_is.islandareas","text":"","code":"if (FALSE) { # this would require the testpoints_1000 data from the EJAM package:   isles <- which(latlon_is.islandareas(lat = testpoints_1000$lat, lon = testpoints_1000$lon))   mapfast(testpoints_1000[isles, ]) # c(213,785)    which(!(latlon_is.usa(lat = testpoints_1000$lat, lon = testpoints_1000$lon))) }"},{"path":"/reference/latlon_is.possible.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if lat lon between -180 and +180 — latlon_is.possible","title":"Check if lat lon between -180 and +180 — latlon_is.possible","text":"Check lat lon -180 +180","code":""},{"path":"/reference/latlon_is.possible.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if lat lon between -180 and +180 — latlon_is.possible","text":"","code":"latlon_is.possible(lat, lon)"},{"path":"/reference/latlon_is.possible.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if lat lon between -180 and +180 — latlon_is.possible","text":"lat vector latitudes lon vector longitudes","code":""},{"path":"/reference/latlon_is.possible.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if lat lon between -180 and +180 — latlon_is.possible","text":"logical vector, one element per lat lon pair (location)","code":""},{"path":[]},{"path":"/reference/latlon_is.usa.html","id":null,"dir":"Reference","previous_headings":"","what":"Check lat lon coordinates to see if each is approx. in general area of USA excluding Island Areas — latlon_is.usa","title":"Check lat lon coordinates to see if each is approx. in general area of USA excluding Island Areas — latlon_is.usa","text":"Check lat lon coordinates see approx. general area USA excluding Island Areas","code":""},{"path":"/reference/latlon_is.usa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check lat lon coordinates to see if each is approx. in general area of USA excluding Island Areas — latlon_is.usa","text":"","code":"latlon_is.usa(lat, lon)"},{"path":"/reference/latlon_is.usa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check lat lon coordinates to see if each is approx. in general area of USA excluding Island Areas — latlon_is.usa","text":"lat vector latitudes lon vector longitudes","code":""},{"path":"/reference/latlon_is.usa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check lat lon coordinates to see if each is approx. in general area of USA excluding Island Areas — latlon_is.usa","text":"logical vector, one element per lat lon pair (location) Indicates point approximately one rough bounding boxes includes USA without Island Areas Guam, American Samoa, USVI, N Marianas Islands.","code":""},{"path":[]},{"path":"/reference/latlon_is.valid.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if lat lon are OK -- validate latitudes and longitudes — latlon_is.valid","title":"Check if lat lon are OK -- validate latitudes and longitudes — latlon_is.valid","text":"Check latitude longitude value see valid.","code":""},{"path":"/reference/latlon_is.valid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if lat lon are OK -- validate latitudes and longitudes — latlon_is.valid","text":"","code":"latlon_is.valid(lat, lon, quiet = TRUE)"},{"path":"/reference/latlon_is.valid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if lat lon are OK -- validate latitudes and longitudes — latlon_is.valid","text":"lat vector latitudes lon vector longitudes quiet optional logical, TRUE, show list bad values console","code":""},{"path":"/reference/latlon_is.valid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if lat lon are OK -- validate latitudes and longitudes — latlon_is.valid","text":"logical vector, one element per lat lon pair (location)","code":""},{"path":"/reference/latlon_is.valid.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check if lat lon are OK -- validate latitudes and longitudes — latlon_is.valid","text":"NA outside expected numeric ranges (based approx ranges lat lon seen among block internal points dataset) note Guam, American Samoa, Northern Mariana Islands, U.S. Virgin Islands outside ranges! EJScreen 2.2 provide demographic data locations anyway, can map sites . lat must 17.5 71.5, lon must ( -180 -64) (172 180)","code":""},{"path":[]},{"path":"/reference/latlon_is.valid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if lat lon are OK -- validate latitudes and longitudes — latlon_is.valid","text":"","code":"if (FALSE) {  # this would only work using the EJAM package datasets frs and blockpoints:    if (!exists(\"frs\")) dataload_from_pins(\"frs\")  table(latlon_is.valid(lat =  frs$lat, lon =  frs$lon))  # blockpoints may need to be downloaded using dataload_from_pins()  table(latlon_is.valid(lat =  blockpoints$lat, lon =  blockpoints$lon))   }"},{"path":"/reference/latlon_join_on_blockid.html","id":null,"dir":"Reference","previous_headings":"","what":"get lat,lon of each block internal point via blockid — latlon_join_on_blockid","title":"get lat,lon of each block internal point via blockid — latlon_join_on_blockid","text":"get expanded version sites2blocks data.table, new lat,lon columns","code":""},{"path":"/reference/latlon_join_on_blockid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get lat,lon of each block internal point via blockid — latlon_join_on_blockid","text":"","code":"latlon_join_on_blockid(s2b)"},{"path":"/reference/latlon_join_on_blockid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get lat,lon of each block internal point via blockid — latlon_join_on_blockid","text":"s2b like testoutput_getblocksnearby_10pts_1miles, output getblocksnearby()","code":""},{"path":"/reference/latlon_join_on_blockid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get lat,lon of each block internal point via blockid — latlon_join_on_blockid","text":"returns input data.table lat,lon columns added block coordinates","code":""},{"path":"/reference/latlon_join_on_blockid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get lat,lon of each block internal point via blockid — latlon_join_on_blockid","text":"","code":"s2b = copy(testoutput_getblocksnearby_10pts_1miles)  latlon_join_on_blockid(s2b) # done by trilaterate also"},{"path":"/reference/lat_alias.html","id":null,"dir":"Reference","previous_headings":"","what":"lat_alias, lon_alias (DATA) Synonyms for lat and lon — lat_alias","title":"lat_alias, lon_alias (DATA) Synonyms for lat and lon — lat_alias","text":"lists synonyms \"latitude\" \"longitude\" used guessing column user-provided tables coordinates","code":""},{"path":"/reference/linesofcode2.html","id":null,"dir":"Reference","previous_headings":"","what":"linesofcode2 - UTILITY - count lines of source code per .R file (not per function) - NOT TESTED — linesofcode2","title":"linesofcode2 - UTILITY - count lines of source code per .R file (not per function) - NOT TESTED — linesofcode2","text":"linesofcode2 - UTILITY - count lines source code per .R file (per function) - TESTED","code":""},{"path":"/reference/linesofcode2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"linesofcode2 - UTILITY - count lines of source code per .R file (not per function) - NOT TESTED — linesofcode2","text":"","code":"linesofcode2(   folder = getwd(),   packages,   recursive = TRUE,   sums = FALSE,   rfolderonly = FALSE,   cropfilename = 40,   croppath = 20,   showrows = NULL )"},{"path":"/reference/linesofcode2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"linesofcode2 - UTILITY - count lines of source code per .R file (not per function) - NOT TESTED — linesofcode2","text":"folder path folder .R files packages optional vector names packages source code recursive logical, look subfolders sums logical, TRUE, returns sums info, otherwise just prints console returns info rfolderonly logical cropfilename number character truncate filename display console croppath limit path display showrows optional","code":""},{"path":"/reference/linesofcode2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"linesofcode2 - UTILITY - count lines of source code per .R file (not per function) - NOT TESTED — linesofcode2","text":"data.frame info files","code":""},{"path":"/reference/lookup_pctile.html","id":null,"dir":"Reference","previous_headings":"","what":"Find approx percentiles in lookup table that is in memory — lookup_pctile","title":"Find approx percentiles in lookup table that is in memory — lookup_pctile","text":"Find approx percentiles lookup table memory","code":""},{"path":"/reference/lookup_pctile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find approx percentiles in lookup table that is in memory — lookup_pctile","text":"","code":"lookup_pctile(   myvector,   varname.in.lookup.table,   lookup = usastats,   zone = \"USA\" )"},{"path":"/reference/lookup_pctile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find approx percentiles in lookup table that is in memory — lookup_pctile","text":"myvector Numeric vector, required. Values look lookup table. varname..lookup.table Character element, required. Name column lookup table look find interval given element myvector values . *** vector provided, must length myvector, 1 value zone can provided. lookup Either lookup must provided, quoted, lookup table called usastats must already memory. lookup table data.frame PCTILE column, REGION column, column whose name value varname..lookup.table use state lookups set lookup=statestats zone Character element (vector long myvector), optional. specified, must appear column called REGION within lookup table, NA returned item looked warning given. example, \"NY\" New York State, \"USA\" national percentiles.","code":""},{"path":[]},{"path":"/reference/mact_table.html","id":null,"dir":"Reference","previous_headings":"","what":"mact_table (DATA) MACT NESHAP subparts (the code and the description) — mact_table","title":"mact_table (DATA) MACT NESHAP subparts (the code and the description) — mact_table","text":"data.table one row per MACT subpart BBBBBB ZZZZZZ title category. ECHO download ICIS Air @seealso frs_by_mact","code":""},{"path":"/reference/mapfast.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a leaflet html widget map of data.frame with lat lon — mapfast","title":"Get a leaflet html widget map of data.frame with lat lon — mapfast","text":"Get leaflet html widget map data.frame lat lon","code":""},{"path":"/reference/mapfast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a leaflet html widget map of data.frame with lat lon — mapfast","text":"","code":"mapfast(mydf, radius = 3, column_names = \"all\", labels = column_names)"},{"path":"/reference/mapfast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a leaflet html widget map of data.frame with lat lon — mapfast","text":"mydf data.frame data.table lat lon columns columns latlon_infer() can infer radius miles, converted meters passed leaflet::addCircles() column_names \"ej\" nice popup made based just key EJScreen indicators. \"\" every column entire mydf table shown popup. vector colnames, shown popups. labels labels used column_names, map popups, like  label: column_name  (ignored column_names ej )","code":""},{"path":"/reference/mapfast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a leaflet html widget map of data.frame with lat lon — mapfast","text":"plots leaflet map popups columns mydf, returns html widget","code":""},{"path":[]},{"path":"/reference/mapfast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a leaflet html widget map of data.frame with lat lon — mapfast","text":"","code":"mapfast(testpoints_500)  if (FALSE) {  # see random sample of 1k FRS facilities  if (!exists(\"frs\")) {    x <- try(require(EJAM)); if (!inherits(x, \"try-error\")) {      dataload_from_pins(\"frs\")    }    mydf <-  frs[sample(1:NROW( frs), 1000), 1:5]    mapfast(mydf)  }    mapfastej(testoutput_ejscreenapi_plus_50)  mapfast(testoutput_ejscreenapi_plus_50, column_names = 'ej')  mapfast(testoutput_ejscreenapi_plus_50)    # Save .html file and view it in your browser     mytable <- testoutput_ejscreenit_5$table  # names(mytable) <- fixcolnames(names(mytable), 'long', 'r')  ## now, that renaming is done by mapfast function  mymap <- mapfastej(mytable)  tfile <- paste0(tempfile(), '.html')  htmltools::save_html(mymap, file = tfile)  browseURL(tfile)   }"},{"path":"/reference/mapfastej.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a leaflet html widget map of data.frame with lat lon\r\n\r\nLike mapfast() but with column_names = ","title":"Get a leaflet html widget map of data.frame with lat lon\r\n\r\nLike mapfast() but with column_names = ","text":"Get leaflet html widget map data.frame lat lon Like mapfast() column_names = \"ej\"","code":""},{"path":"/reference/mapfastej.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a leaflet html widget map of data.frame with lat lon\r\n\r\nLike mapfast() but with column_names = ","text":"","code":"mapfastej(...)"},{"path":"/reference/mapfastej_counties.html","id":null,"dir":"Reference","previous_headings":"","what":"Map Counties - Create static or HTML/leaflet map of counties — mapfastej_counties","title":"Map Counties - Create static or HTML/leaflet map of counties — mapfastej_counties","text":"Map Counties - Create static HTML/leaflet map counties","code":""},{"path":"/reference/mapfastej_counties.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map Counties - Create static or HTML/leaflet map of counties — mapfastej_counties","text":"","code":"mapfastej_counties(   mydf,   colorvarname = \"pctile.Demog.Index.Supp\",   static_not_leaflet = FALSE,   main = \"Selected Counties\",   ... )"},{"path":"/reference/mapfastej_counties.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map Counties - Create static or HTML/leaflet map of counties — mapfastej_counties","text":"mydf something like  ejamit(fips = fips_counties_from_statename(\"Kentucky\"), radius = 0)$results_bysite colorvarname colname indicator mydf drives color-coding static_not_leaflet set TRUE use map_shapes_plot() instead map_shapes_leaflet() main title map ... passed map_shapes_plot() relevant","code":""},{"path":"/reference/mapfastej_counties.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map Counties - Create static or HTML/leaflet map of counties — mapfastej_counties","text":"leaflet html widget (static_not_leaflet=T, returns just shapes_counties_from_countyfips(mydf$ejam_uniq_id))","code":""},{"path":"/reference/mapfastej_counties.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map Counties - Create static or HTML/leaflet map of counties — mapfastej_counties","text":"","code":"if (FALSE) {  fips_ky <- fips_counties_from_statename(\"Kentucky\")  x <- ejamit(fips = fips_ky, radius = 0)  mapfastej_counties(x$results_bysite)  }"},{"path":"/reference/mapfast_gg.html","id":null,"dir":"Reference","previous_headings":"","what":"Map - ggplot2 map of points in the USA - very basic map — mapfast_gg","title":"Map - ggplot2 map of points in the USA - very basic map — mapfast_gg","text":"Map - ggplot2 map points USA - basic map","code":""},{"path":"/reference/mapfast_gg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map - ggplot2 map of points in the USA - very basic map — mapfast_gg","text":"","code":"mapfast_gg(   mydf = data.frame(lat = 40, lon = -100)[0, ],   dotsize = 1,   ptcolor = \"black\",   xlab = \"Longitude\",   ylab = \"Latitude\",   ... )"},{"path":"/reference/mapfast_gg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map - ggplot2 map of points in the USA - very basic map — mapfast_gg","text":"mydf data.frame columns named lat lon dotsize optional, size dot representing point ptcolor optional, color dot xlab optional, text x label ylab optional, text y label ... optional, passed ggplot2::labs()","code":""},{"path":"/reference/mapfast_gg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map - ggplot2 map of points in the USA - very basic map — mapfast_gg","text":"ggplot() object","code":""},{"path":"/reference/mapfast_gg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map - ggplot2 map of points in the USA - very basic map — mapfast_gg","text":"","code":"if (FALSE) {   mapfast_gg(EJAM::testpoints_10)      pts <- read.table(textConnection(   \"lat lon    39.5624775 -119.7410994    42.38748056 -94.61803333\"   ),   header = TRUE,    as.is = TRUE   )   mapfast_gg(pts)   # str(pts) # lon, not long   }"},{"path":"/reference/map_blockgroups_over_blocks.html","id":null,"dir":"Reference","previous_headings":"","what":"Map blockgroup boundaries near 1 site, after plotblocksnearby() — map_blockgroups_over_blocks","title":"Map blockgroup boundaries near 1 site, after plotblocksnearby() — map_blockgroups_over_blocks","text":"Overlay blockgroups near 1 site, plotblocksnearby(returnmap = TRUE)","code":""},{"path":"/reference/map_blockgroups_over_blocks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map blockgroup boundaries near 1 site, after plotblocksnearby() — map_blockgroups_over_blocks","text":"","code":"map_blockgroups_over_blocks(y)"},{"path":"/reference/map_blockgroups_over_blocks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map blockgroup boundaries near 1 site, after plotblocksnearby() — map_blockgroups_over_blocks","text":"y output plotblocksnearby() returnmap = TRUE","code":""},{"path":"/reference/map_blockgroups_over_blocks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map blockgroup boundaries near 1 site, after plotblocksnearby() — map_blockgroups_over_blocks","text":"leaflet map widget","code":""},{"path":[]},{"path":[]},{"path":"/reference/map_facilities.html","id":null,"dir":"Reference","previous_headings":"","what":"Map - Create leaflet map within EJAM shiny app — map_facilities","title":"Map - Create leaflet map within EJAM shiny app — map_facilities","text":"make leaflet map uploaded points","code":""},{"path":"/reference/map_facilities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map - Create leaflet map within EJAM shiny app — map_facilities","text":"","code":"map_facilities(mypoints, rad = 3, highlight = FALSE, clustered)"},{"path":"/reference/map_facilities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map - Create leaflet map within EJAM shiny app — map_facilities","text":"mypoints, data frame uploaded points rad, size drawing circle (buffer search radius) highlight, logicial whether highlight overlapping points (defaults FALSE) clustered, vector T/F values point, indicating overlap another","code":""},{"path":"/reference/map_facilities.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map - Create leaflet map within EJAM shiny app — map_facilities","text":"leaflet map circles, circleMarkers, basic popup","code":""},{"path":[]},{"path":"/reference/map_facilities_proxy.html","id":null,"dir":"Reference","previous_headings":"","what":"Map - Update leaflet map within EJAM shiny app — map_facilities_proxy","title":"Map - Update leaflet map within EJAM shiny app — map_facilities_proxy","text":"update leaflet map within EJAM shiny app uploaded points.","code":""},{"path":"/reference/map_facilities_proxy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map - Update leaflet map within EJAM shiny app — map_facilities_proxy","text":"","code":"map_facilities_proxy(   mymap,   rad = 3,   highlight = FALSE,   clustered = FALSE,   popup_vec = NULL,   use_marker_clusters = FALSE )"},{"path":"/reference/map_facilities_proxy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map - Update leaflet map within EJAM shiny app — map_facilities_proxy","text":"mymap, leafletProxy map object added rad, size drawing circle (buffer search radius) highlight, logicial whether highlight overlapping points (defaults FALSE) clustered, vector T/F values point, indicating overlap another popup_vec, vector popup values display points clicked. Length match number rows dataset. use_marker_clusters, boolean whether group points markerClusters. Uses logic shiny app implement n > 1000.","code":""},{"path":"/reference/map_facilities_proxy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map - Update leaflet map within EJAM shiny app — map_facilities_proxy","text":"leaflet map circles, circleMarkers, basic popup","code":""},{"path":[]},{"path":"/reference/map_shapes_leaflet.html","id":null,"dir":"Reference","previous_headings":"","what":"Map - Create a new leaflet map from shapefile data, in shiny app — map_shapes_leaflet","title":"Map - Create a new leaflet map from shapefile data, in shiny app — map_shapes_leaflet","text":"Map - Create new leaflet map shapefile data, shiny app","code":""},{"path":"/reference/map_shapes_leaflet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map - Create a new leaflet map from shapefile data, in shiny app — map_shapes_leaflet","text":"","code":"map_shapes_leaflet(shapes, color = \"green\", popup = shapes$NAME)"},{"path":"/reference/map_shapes_leaflet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map - Create a new leaflet map from shapefile data, in shiny app — map_shapes_leaflet","text":"shapes like shapes_counties_from_countyfips(fips_counties_from_state_abbrev(\"DE\")) color passed leaflet::addPolygons() popup passed leaflet::addPolygons()","code":""},{"path":"/reference/map_shapes_leaflet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map - Create a new leaflet map from shapefile data, in shiny app — map_shapes_leaflet","text":"html widget leaflet::leaflet()","code":""},{"path":"/reference/map_shapes_leaflet_proxy.html","id":null,"dir":"Reference","previous_headings":"","what":"Map - Update existing leaflet map by adding shapefile data, in shiny app — map_shapes_leaflet_proxy","title":"Map - Update existing leaflet map by adding shapefile data, in shiny app — map_shapes_leaflet_proxy","text":"Map - Update existing leaflet map adding shapefile data, shiny app","code":""},{"path":"/reference/map_shapes_leaflet_proxy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map - Update existing leaflet map by adding shapefile data, in shiny app — map_shapes_leaflet_proxy","text":"","code":"map_shapes_leaflet_proxy(mymap, shapes, color = \"green\", popup = shapes$NAME)"},{"path":"/reference/map_shapes_leaflet_proxy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map - Update existing leaflet map by adding shapefile data, in shiny app — map_shapes_leaflet_proxy","text":"mymap map like leafletProxy() shapes like shapes_counties_from_countyfips(fips_counties_from_state_abbrev(\"DE\")) color passed leaflet::addPolygons() popup passed leaflet::addPolygons()","code":""},{"path":"/reference/map_shapes_leaflet_proxy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map - Update existing leaflet map by adding shapefile data, in shiny app — map_shapes_leaflet_proxy","text":"html widget like leaflet::leafletProxy()","code":""},{"path":"/reference/map_shapes_mapview.html","id":null,"dir":"Reference","previous_headings":"","what":"Map - Use mapview from the mapview package if available — map_shapes_mapview","title":"Map - Use mapview from the mapview package if available — map_shapes_mapview","text":"Map - Use mapview mapview package available","code":""},{"path":"/reference/map_shapes_mapview.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map - Use mapview from the mapview package if available — map_shapes_mapview","text":"","code":"map_shapes_mapview(shapes, col.regions = \"green\", map.types = \"OpenStreetMap\")"},{"path":"/reference/map_shapes_mapview.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map - Use mapview from the mapview package if available — map_shapes_mapview","text":"shapes like shapes_counties_from_countyfips(fips_counties_from_state_abbrev(\"DE\")) col.regions passed mapview() mapview package map.types passed mapview() mapview package","code":""},{"path":"/reference/map_shapes_mapview.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map - Use mapview from the mapview package if available — map_shapes_mapview","text":"","code":"if (FALSE) {   map_shapes_mapview(     shapes_counties_from_countyfips(fips_counties_from_state_abbrev(\"DE\"))   ) }"},{"path":"/reference/map_shapes_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Map using base R plot() — map_shapes_plot","title":"Map using base R plot() — map_shapes_plot","text":"Map using base R plot()","code":""},{"path":"/reference/map_shapes_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map using base R plot() — map_shapes_plot","text":"","code":"map_shapes_plot(shapes, main = \"Selected Census Units\", ...)"},{"path":"/reference/map_shapes_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map using base R plot() — map_shapes_plot","text":"shapes like shapes_counties_from_countyfips(fips_counties_from_state_abbrev(\"DE\")) main title map ... passed plot()","code":""},{"path":"/reference/map_shapes_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map using base R plot() — map_shapes_plot","text":"Just draws map using plot()","code":""},{"path":"/reference/metadata_add.html","id":null,"dir":"Reference","previous_headings":"","what":"helper function for package to set attributes of a dataset — metadata_add","title":"helper function for package to set attributes of a dataset — metadata_add","text":"can used annually update datasets package. just makes easier set metadata attributes similarly number data elements, example, add new update existing attributes.","code":""},{"path":"/reference/metadata_add.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"helper function for package to set attributes of a dataset — metadata_add","text":"","code":"metadata_add(x, metadata)"},{"path":"/reference/metadata_add.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"helper function for package to set attributes of a dataset — metadata_add","text":"x dataset (object) whose metadata want update create metadata must named list, function can : attr(x, =names(metadata)[]) <- metadata[[]]","code":""},{"path":"/reference/metadata_add.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"helper function for package to set attributes of a dataset — metadata_add","text":"returns x new altered attributes","code":""},{"path":[]},{"path":"/reference/metadata_add.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"helper function for package to set attributes of a dataset — metadata_add","text":"","code":"x <- data.frame(a=1:10,b=1001:1010)   metadata <- list(   ejscreen_version =  '2.2',   acs_version =          '2017-2021',   census_version = 2020,   ejscreen_releasedate = '2023-06-23',   acs_releasedate =      '2022-12-08',   ejscreen_pkg_data = NA   )   x <- metadata_add(x, metadata)   attributes(x)   x <- metadata_add(x, list(status='final'))   attr(x,'status')"},{"path":"/reference/metadata_check.html","id":null,"dir":"Reference","previous_headings":"","what":"helper function in updating the package metadata — metadata_check","title":"helper function in updating the package metadata — metadata_check","text":"Quick dirty helper development, check attributes data files relevant packages. loads unloaded packages needed, might want , coded able check attributes without .","code":""},{"path":"/reference/metadata_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"helper function in updating the package metadata — metadata_check","text":"","code":"metadata_check(   packages = EJAM::ejampackages,   which = c(\"census_version\", \"acs_version\", \"acs_releasedate\", \"ACS\",     \"ejscreen_version\", \"ejscreen_releasedate\", \"ejscreen_pkg_data\", \"year\", \"released\"),   loadifnotloaded = TRUE )"},{"path":"/reference/metadata_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"helper function in updating the package metadata — metadata_check","text":"packages Optional. e.g. 'EJAMejscreendata', can vector character strings, specified, default report packages EJ part name, like EJAMejscreenapi Optional vector (list) strings, attributes. Default typical ones used EJAM-related packages currently. loadifnotloaded Optional control func temporarily attach packages already loaded.","code":""},{"path":"/reference/NAICS.html","id":null,"dir":"Reference","previous_headings":"","what":"NAICS (DATA) named list of all NAICS code numbers and industry name for each — NAICS","title":"NAICS (DATA) named list of all NAICS code numbers and industry name for each — NAICS","text":"NAICS (DATA) named list NAICS code numbers industry name ","code":""},{"path":"/reference/NAICS.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"NAICS (DATA) named list of all NAICS code numbers and industry name for each — NAICS","text":"see https://naics.com","code":""},{"path":[]},{"path":"/reference/naics2children.html","id":null,"dir":"Reference","previous_headings":"","what":"NAICS - query NAICS codes and also see all children (subcategories) of any of those — naics2children","title":"NAICS - query NAICS codes and also see all children (subcategories) of any of those — naics2children","text":"Used naics_find()","code":""},{"path":"/reference/naics2children.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NAICS - query NAICS codes and also see all children (subcategories) of any of those — naics2children","text":"","code":"naics2children(codes, allcodes = EJAM::NAICS, quiet = FALSE)"},{"path":"/reference/naics2children.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NAICS - query NAICS codes and also see all children (subcategories) of any of those — naics2children","text":"codes vector numerical character allcodes Optional (already loaded package) - dataset codes quiet whether avoid printing results console","code":""},{"path":"/reference/naics2children.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"NAICS - query NAICS codes and also see all children (subcategories) of any of those — naics2children","text":"vector codes names","code":""},{"path":"/reference/naics2children.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"NAICS - query NAICS codes and also see all children (subcategories) of any of those — naics2children","text":"start shortest (highest level) codes. since tied nchar, branches zero overlap, . , get children = rows parentcode == substr(allcodes, 1, nchar(parentcode)) put together list codes want include far. now next longest set codes original list codes, thing. etc. 5 digit ones get 6digit children. take unique(allthat) table(nchar(.character(NAICS))) 2    3    4    5    6 17   99  311  709 1057","code":""},{"path":[]},{"path":"/reference/naics2children.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"NAICS - query NAICS codes and also see all children (subcategories) of any of those — naics2children","text":"","code":"naics2children(211)   naics_find(211, exactnumber=TRUE)   naics_find(211, exactnumber=TRUE, add_children = TRUE)   NAICS[211][1:3] # wrong   NAICS[NAICS == 211]   NAICS[\"211 - Oil and Gas Extraction\"]"},{"path":"/reference/naicstable.html","id":null,"dir":"Reference","previous_headings":"","what":"naicstable (DATA) data.table of NAICS code(s) and industry names for each EPA-regulated site in Facility Registry Service\r\nAlso has the 2,3,4,5,and 6-digit NAICS that this code falls under, where relevant for given length — naicstable","title":"naicstable (DATA) data.table of NAICS code(s) and industry names for each EPA-regulated site in Facility Registry Service\r\nAlso has the 2,3,4,5,and 6-digit NAICS that this code falls under, where relevant for given length — naicstable","text":"similar data file EJAM::NAICS useful format newer functions work .","code":""},{"path":"/reference/naicstable.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"naicstable (DATA) data.table of NAICS code(s) and industry names for each EPA-regulated site in Facility Registry Service\r\nAlso has the 2,3,4,5,and 6-digit NAICS that this code falls under, where relevant for given length — naicstable","text":"see https://naics.com","code":""},{"path":[]},{"path":"/reference/naics_categories.html","id":null,"dir":"Reference","previous_headings":"","what":"NAICS - See the names of industrial categories and their NAICS code — naics_categories","title":"NAICS - See the names of industrial categories and their NAICS code — naics_categories","text":"Easy way list 2-digit NAICS (17 categories), level","code":""},{"path":"/reference/naics_categories.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NAICS - See the names of industrial categories and their NAICS code — naics_categories","text":"","code":"naics_categories(digits = 2, dataset = EJAM::NAICS)"},{"path":"/reference/naics_categories.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NAICS - See the names of industrial categories and their NAICS code — naics_categories","text":"digits default 2, 2-digits NAICS, top level, 6. dataset default dataset called NAICS, installed package. see NAICS  Check attr(NAICS, 'year')","code":""},{"path":"/reference/naics_categories.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"NAICS - See the names of industrial categories and their NAICS code — naics_categories","text":"Also see https://www.naics.com/search/ many NAICS codes roughly number digits code: table(nchar(NAICS)) 2    3    4    5    6 17   99  311  709 1057 See https://www.census.gov/naics/","code":""},{"path":[]},{"path":"/reference/naics_categories.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"NAICS - See the names of industrial categories and their NAICS code — naics_categories","text":"","code":"naics_categories()"},{"path":"/reference/naics_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"naics_counts (DATA) data.frame with counts for each NAICS code, with and without subcodes, and labels that include the site counts — naics_counts","title":"naics_counts (DATA) data.frame with counts for each NAICS code, with and without subcodes, and labels that include the site counts — naics_counts","text":"data frame containing 2200 NAICS codes (11/2023), count sites frs data, including subcodes. Used EJAM shiny app dropdown menu. @seealso frs_by_naics","code":""},{"path":"/reference/naics_download.html","id":null,"dir":"Reference","previous_headings":"","what":"NAICS - Script to download NAICS file with code and name of sector — naics_download","title":"NAICS - Script to download NAICS file with code and name of sector — naics_download","text":"See source code. Mostly just short script get 2017 2022 codes names. See <'https://www.census.gov/naics/?48967'>","code":""},{"path":"/reference/naics_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NAICS - Script to download NAICS file with code and name of sector — naics_download","text":"","code":"naics_download(   year = 2017,   urlpattern = \"https://www.census.gov/naics/YYYYNAICS/2-6%20digit_YYYY_Codes.xlsx\",   destfile = paste0(\"~/Downloads/\", year, \"NAICS.xlsx\") )"},{"path":"/reference/naics_download.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NAICS - Script to download NAICS file with code and name of sector — naics_download","text":"year vintage NAICS codes use, 2012, 2017, 2022 urlpattern full url xlsx file use, YYYY instead year destfile full path name file save locally","code":""},{"path":"/reference/naics_download.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"NAICS - Script to download NAICS file with code and name of sector — naics_download","text":"names list year attribute","code":""},{"path":"/reference/naics_from_any.html","id":null,"dir":"Reference","previous_headings":"","what":"NAICS - General way to search for industry names and NAICS codes — naics_from_any","title":"NAICS - General way to search for industry names and NAICS codes — naics_from_any","text":"Find industry names codes searching queried code(s) text","code":""},{"path":"/reference/naics_from_any.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NAICS - General way to search for industry names and NAICS codes — naics_from_any","text":"","code":"naics_from_any(   query,   children = FALSE,   ignore.case = TRUE,   fixed = FALSE,   website_scrape = FALSE,   website_url = FALSE )"},{"path":"/reference/naics_from_any.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NAICS - General way to search for industry names and NAICS codes — naics_from_any","text":"query query string(s) /number(s), vector NAICS codes industry names regular expression partial words children logical, TRUE, also return subcategories - NAICS starts digits ignore.case see grepl() fixed exact match? see grepl() website_scrape whether scrape info NAICS website return table codes names match (web query uses synonyms gets hits) website_url whether return URL webpage info NAICS (web query uses synonyms gets hits)","code":""},{"path":"/reference/naics_from_any.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"NAICS - General way to search for industry names and NAICS codes — naics_from_any","text":"subset naicstable data.table (just codes column)","code":""},{"path":[]},{"path":[]},{"path":"/reference/naics_from_code.html","id":null,"dir":"Reference","previous_headings":"","what":"NAICS - search for industry names by NAICS code(s), 2-6 digits long each — naics_from_code","title":"NAICS - search for industry names by NAICS code(s), 2-6 digits long each — naics_from_code","text":"See naics_from_any() uses ","code":""},{"path":"/reference/naics_from_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NAICS - search for industry names by NAICS code(s), 2-6 digits long each — naics_from_code","text":"","code":"naics_from_code(mycodes, children = FALSE)"},{"path":"/reference/naics_from_code.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NAICS - search for industry names by NAICS code(s), 2-6 digits long each — naics_from_code","text":"mycodes vector numeric NAICS codes. see https://naics.com children logical, TRUE, also return subcategories - NAICS starts digits","code":""},{"path":"/reference/naics_from_code.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"NAICS - search for industry names by NAICS code(s), 2-6 digits long each — naics_from_code","text":"subset naicstable data.table (just codes column)","code":""},{"path":[]},{"path":"/reference/naics_from_federalregister.html","id":null,"dir":"Reference","previous_headings":"","what":"NAICS - Try to extract which NAICS could be affected by a rule published in the Federal Register\r\nby reading the NAICS listed near the top of the preamble - DRAFT WORK IN PROGRESS — naics_from_federalregister","title":"NAICS - Try to extract which NAICS could be affected by a rule published in the Federal Register\r\nby reading the NAICS listed near the top of the preamble - DRAFT WORK IN PROGRESS — naics_from_federalregister","text":"NAICS - Try extract NAICS affected rule published Federal Register reading NAICS listed near top preamble - DRAFT WORK PROGRESS","code":""},{"path":"/reference/naics_from_federalregister.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NAICS - Try to extract which NAICS could be affected by a rule published in the Federal Register\r\nby reading the NAICS listed near the top of the preamble - DRAFT WORK IN PROGRESS — naics_from_federalregister","text":"","code":"naics_from_federalregister(naics_text_copy_from_fr)"},{"path":"/reference/naics_from_federalregister.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NAICS - Try to extract which NAICS could be affected by a rule published in the Federal Register\r\nby reading the NAICS listed near the top of the preamble - DRAFT WORK IN PROGRESS — naics_from_federalregister","text":"naics_text_copy_from_fr","code":""},{"path":"/reference/naics_from_name.html","id":null,"dir":"Reference","previous_headings":"","what":"NAICS - Search for industry names and NAICS codes by query string — naics_from_name","title":"NAICS - Search for industry names and NAICS codes by query string — naics_from_name","text":"query parts words, etc. industry name.","code":""},{"path":"/reference/naics_from_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NAICS - Search for industry names and NAICS codes by query string — naics_from_name","text":"","code":"naics_from_name(mynames, children = FALSE, ignore.case = TRUE, fixed = FALSE)"},{"path":"/reference/naics_from_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NAICS - Search for industry names and NAICS codes by query string — naics_from_name","text":"mynames query string, vector NAICS industry names regular expression partial words. See https://naics.com children logical, TRUE, also return subcategories - NAICS starts digits ignore.case see grepl() fixed exact match? see grepl() search_on_naics_website whether query naics website hits just search text industry title","code":""},{"path":"/reference/naics_from_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"NAICS - Search for industry names and NAICS codes by query string — naics_from_name","text":"subset naicstable data.table (just codes column)","code":""},{"path":"/reference/naics_from_name.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"NAICS - Search for industry names and NAICS codes by query string — naics_from_name","text":"See naics_from_any() uses ","code":""},{"path":[]},{"path":"/reference/naics_from_name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"NAICS - Search for industry names and NAICS codes by query string — naics_from_name","text":"","code":"data.table::fintersect(naics_from_any( \"manufac\"), naics_from_any(\"chem\"))"},{"path":"/reference/naics_subcodes_from_code.html","id":null,"dir":"Reference","previous_headings":"","what":"NAICS - find subcategories of the given overall NAICS industry code(s) — naics_subcodes_from_code","title":"NAICS - find subcategories of the given overall NAICS industry code(s) — naics_subcodes_from_code","text":"Given 3-digit NAICS code, example, get NAICS start digits.","code":""},{"path":"/reference/naics_subcodes_from_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NAICS - find subcategories of the given overall NAICS industry code(s) — naics_subcodes_from_code","text":"","code":"naics_subcodes_from_code(mycodes)"},{"path":"/reference/naics_subcodes_from_code.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NAICS - find subcategories of the given overall NAICS industry code(s) — naics_subcodes_from_code","text":"mycodes NAICS codes vector, 2 6 digits . See https://naics.com","code":""},{"path":"/reference/naics_subcodes_from_code.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"NAICS - find subcategories of the given overall NAICS industry code(s) — naics_subcodes_from_code","text":"subset naicstable data.table (just codes column)","code":""},{"path":"/reference/naics_subcodes_from_code.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"NAICS - find subcategories of the given overall NAICS industry code(s) — naics_subcodes_from_code","text":"similar idea naics2children() robust See naics_from_any() uses ","code":""},{"path":[]},{"path":"/reference/naics_subcodes_from_code.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"NAICS - find subcategories of the given overall NAICS industry code(s) — naics_subcodes_from_code","text":"","code":"naics_categories()"},{"path":"/reference/naics_url_of_code.html","id":null,"dir":"Reference","previous_headings":"","what":"NAICS - Get URL for page with info about industry sector(s) by NAICS — naics_url_of_code","title":"NAICS - Get URL for page with info about industry sector(s) by NAICS — naics_url_of_code","text":"See (https://naics.com) information NAICS codes","code":""},{"path":"/reference/naics_url_of_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NAICS - Get URL for page with info about industry sector(s) by NAICS — naics_url_of_code","text":"","code":"naics_url_of_code(naics)"},{"path":"/reference/naics_url_of_code.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NAICS - Get URL for page with info about industry sector(s) by NAICS — naics_url_of_code","text":"naics vector one NAICS codes, like 11,\"31-33\",325","code":""},{"path":"/reference/naics_url_of_code.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"NAICS - Get URL for page with info about industry sector(s) by NAICS — naics_url_of_code","text":"vector URLs strings like https://www.naics.com/six-digit-naics/?v=2017&code=22","code":""},{"path":"/reference/naics_validation.html","id":null,"dir":"Reference","previous_headings":"","what":"NAICS - Validate NAICS uploads — naics_validation","title":"NAICS - Validate NAICS uploads — naics_validation","text":"Validates prepares echo uploads","code":""},{"path":"/reference/naics_validation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NAICS - Validate NAICS uploads — naics_validation","text":"","code":"naics_validation(naics_enter, naics_select)"},{"path":"/reference/naics_validation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NAICS - Validate NAICS uploads — naics_validation","text":"naics_enter vector naics naics_select single value","code":""},{"path":"/reference/naics_validation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"NAICS - Validate NAICS uploads — naics_validation","text":"boolean value","code":""},{"path":"/reference/namesbyvarlist.html","id":null,"dir":"Reference","previous_headings":"","what":"Get indicator names within a varlist like names_d — namesbyvarlist","title":"Get indicator names within a varlist like names_d — namesbyvarlist","text":"Get indicator names within varlist like names_d","code":""},{"path":"/reference/namesbyvarlist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get indicator names within a varlist like names_d — namesbyvarlist","text":"","code":"namesbyvarlist(   varlist,   nametype = c(\"rname\", \"longname_tableheader\", \"apiname\")[1] )"},{"path":"/reference/namesbyvarlist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get indicator names within a varlist like names_d — namesbyvarlist","text":"varlist one character string like \"names_d\", vector nametype vector 1 names columns map_headernames, shortcut type can api, csv, r, original, long, shortlabel","code":""},{"path":"/reference/namesbyvarlist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get indicator names within a varlist like names_d — namesbyvarlist","text":"data.frame one row per indicator, one col per nametype column identifying varlist","code":""},{"path":"/reference/namesbyvarlist.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get indicator names within a varlist like names_d — namesbyvarlist","text":"Note names_d_friendly refers semi-long names use labels","code":""},{"path":"/reference/namesbyvarlist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get indicator names within a varlist like names_d — namesbyvarlist","text":"","code":"unique(map_headernames$varlist)    namesbyvarlist('names_e_avg', 'rname')  namesbyvarlist('names_d')  namesbyvarlist('names_d', 'r')  namesbyvarlist('names_d', 'friendly')  namesbyvarlist('names_d', 'shortlabel')    namesbyvarlist( 'names_e_pctile', c('r', 'longname_tableheader'))      namesbyvarlist(c('names_e_pctile', 'names_e_state_pctile'),     c('varlist', 'r', 'api',   'names_friendly', 'longname_tableheader'))"},{"path":"/reference/names_d.html","id":null,"dir":"Reference","previous_headings":"","what":"names_d (DATA) list of demographic indicator names — names_d","title":"names_d (DATA) list of demographic indicator names — names_d","text":"names_d (DATA) list demographic indicator names","code":""},{"path":[]},{"path":"/reference/names_e.html","id":null,"dir":"Reference","previous_headings":"","what":"names_e (DATA) list of environmental indicator names — names_e","title":"names_e (DATA) list of environmental indicator names — names_e","text":"names_e (DATA) list environmental indicator names","code":""},{"path":[]},{"path":"/reference/names_whichlist.html","id":null,"dir":"Reference","previous_headings":"","what":"See which of the lists of names a single term appears in — names_whichlist","title":"See which of the lists of names a single term appears in — names_whichlist","text":"See lists names single term appears ","code":""},{"path":"/reference/names_whichlist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"See which of the lists of names a single term appears in — names_whichlist","text":"","code":"names_whichlist(   x,   exact = T,   grepmatching = T,   ignore.case.exact = FALSE,   ignore.case.grep = FALSE,   keylists = F,   exactonly = FALSE )"},{"path":"/reference/names_whichlist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"See which of the lists of names a single term appears in — names_whichlist","text":"x term, like part variable name, state.avg exact whether look exact matches grepmatching whether look matches via grep (partial match) ignore.case.exact whether ignore capitalization exact matches ignore.case.grep passed grep ignore.case param keylists true, report key lists friendly, , , need types. exactonly limit output rows exact matches","code":""},{"path":"/reference/names_whichlist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"See which of the lists of names a single term appears in — names_whichlist","text":"data.frame whichlist, exactmatch, grepmatch, grephits (examples)","code":""},{"path":"/reference/names_whichlist.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"See which of the lists of names a single term appears in — names_whichlist","text":"EJAM::namez list lists names used indicators variables, namez$d_friendly vector terms like \"Demog.Ind.\", \"Suppl Demog Index\",  \"% Low-inc.\", etc.","code":""},{"path":"/reference/names_whichlist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"See which of the lists of names a single term appears in — names_whichlist","text":"","code":"x <- names_whichlist(\"rsei\", ignore.case.exact = T, ignore.case.grep = T)    subset(x, !grepl(\"friendly\", x$whichlist))        subset(x,  grepl(\"friendly\", x$whichlist))    subset(namez, names(namez) != \"all_r\" & names(namez) %in%       subset(x, x$grepmatch == \"yes\" & !grepl(\"friendly\", x$whichlist))$whichlist  )    grep(\"\\\\.eo$\", namez$ej, value = T)"},{"path":"/reference/names_whichlist_multi.html","id":null,"dir":"Reference","previous_headings":"","what":"See which lists of names the given indicator names are in — names_whichlist_multi","title":"See which lists of names the given indicator names are in — names_whichlist_multi","text":"See lists names given indicator names ","code":""},{"path":"/reference/names_whichlist_multi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"See which lists of names the given indicator names are in — names_whichlist_multi","text":"","code":"names_whichlist_multi(x, ...)"},{"path":"/reference/names_whichlist_multi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"See which lists of names the given indicator names are in — names_whichlist_multi","text":"x vector names (query terms) ... passed names_whichlist()","code":""},{"path":"/reference/names_whichlist_multi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"See which lists of names the given indicator names are in — names_whichlist_multi","text":"list sets names","code":""},{"path":"/reference/names_whichlist_multi_key.html","id":null,"dir":"Reference","previous_headings":"","what":"See which key lists of names the given indicator names are in — names_whichlist_multi_key","title":"See which key lists of names the given indicator names are in — names_whichlist_multi_key","text":"See key lists names given indicator names ","code":""},{"path":"/reference/names_whichlist_multi_key.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"See which key lists of names the given indicator names are in — names_whichlist_multi_key","text":"","code":"names_whichlist_multi_key(x, ...)"},{"path":"/reference/names_whichlist_multi_key.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"See which key lists of names the given indicator names are in — names_whichlist_multi_key","text":"x vector names ... passed names_whichlist_multi()","code":""},{"path":"/reference/names_whichlist_multi_key.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"See which key lists of names the given indicator names are in — names_whichlist_multi_key","text":"vector maybe","code":""},{"path":"/reference/namez.html","id":null,"dir":"Reference","previous_headings":"","what":"namez (DATA) list of lists of indicator names (complete list in 1 object) — namez","title":"namez (DATA) list of lists of indicator names (complete list in 1 object) — namez","text":"namez (DATA) list lists indicator names (complete list 1 object)","code":""},{"path":[]},{"path":"/reference/pctiles_lookup_create.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility to create lookup table of percentiles 0 to 100 and mean for each indicator by State or USA total — pctiles_lookup_create","title":"Utility to create lookup table of percentiles 0 to 100 and mean for each indicator by State or USA total — pctiles_lookup_create","text":"Utility create lookup table percentiles 0 100 mean indicator State USA total","code":""},{"path":"/reference/pctiles_lookup_create.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility to create lookup table of percentiles 0 to 100 and mean for each indicator by State or USA total — pctiles_lookup_create","text":"","code":"pctiles_lookup_create(   x,   zone.vector = NULL,   zoneOverallName = \"USA\",   wts = NULL,   usecollapse = TRUE,   type = 7 )"},{"path":"/reference/pctiles_lookup_create.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility to create lookup table of percentiles 0 to 100 and mean for each indicator by State or USA total — pctiles_lookup_create","text":"x data.frame numeric data. column examined calculate mean,   percentiles, zone zone.vector optional names states regions, example. length wts, rows mydf zoneOverallName optional. Default USA. wts leave default since weighted percentiles blockgroups used EJScreen percentiles anymore usecollapse logical, whether use collapse::fquantile() instead Hmisc package wtd.quantile stats pkg quantile, test fully removing dependency Hmisc also speed . type CHANGE - moot EJScreen/EJAM - SEE SOURCE CODE - Hmisc pkg wtd.quantile type \"1/n\" used past possibly EJScreen (EJScreen longer uses weighted percentiles moot weighted case) collapse pkg fquantile now used avoid Hmisc dependency fquantile type 4 seems Hmisc type \"1/n\" confirmed, function default uses fquantile type 1, inverse ECDF however, seems simpler using type 4 linear interpolation points ECDF! ***  NEED CONFIRM CREATES TABLE DIFFERENT EJSCREEN CREATE","code":""},{"path":"/reference/pctiles_lookup_create.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Utility to create lookup table of percentiles 0 to 100 and mean for each indicator by State or USA total — pctiles_lookup_create","text":"EJScreen assigns indicator block group percentile value via python script, using https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.percentileofscore.html way python function used 2023 percentileofscore 80% 80% indicator values (statewide nationwide, depending type calculated) less (equal ) indicator value specified block group (since kind=\"strict\"). percentile recorded EJScreen dataset floor , meaning 81.9% values less x, percentile reported 81. EJScreen python script used create percentile lookup tables file called cal_statepctile_0222.py key lines code functions uses pctile = math.floor(stats.percentileofscore(barray, indicatorscore, kind=\"strict\")) binvalue = getBinvalue(pctile) def getBinvalue(pct): pct None: return 0 else: pct >= 95: return 11 elif pct >= 90 pct < 95: return 10 elif pct >= 80 pct < 90: return 9 elif pct >= 70 pct < 80: return 8 elif pct >= 60 pct < 70: return 7 elif pct >= 50 pct < 60: return 6 elif pct >= 40 pct < 50: return 5 elif pct >= 30 pct < 40: return 4 elif pct >= 20 pct < 30: return 3 elif pct >= 10 pct < 20: return 2 else: return 1","code":""},{"path":"/reference/pctile_from_raw_lookup.html","id":null,"dir":"Reference","previous_headings":"","what":"Find approx percentiles in lookup table that is in memory — pctile_from_raw_lookup","title":"Find approx percentiles in lookup table that is in memory — pctile_from_raw_lookup","text":"used lookup table convert raw indicator vector percentiles US States.","code":""},{"path":"/reference/pctile_from_raw_lookup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find approx percentiles in lookup table that is in memory — pctile_from_raw_lookup","text":"","code":"pctile_from_raw_lookup(   myvector,   varname.in.lookup.table,   lookup = usastats,   zone = \"USA\" )"},{"path":"/reference/pctile_from_raw_lookup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find approx percentiles in lookup table that is in memory — pctile_from_raw_lookup","text":"myvector Numeric vector, required. Values look lookup table. varname..lookup.table Character element, required. Name column lookup table look find interval given element myvector values . *** vector provided, must length myvector, 1 value zone can provided. lookup Either lookup must provided, quoted, lookup table called usastats must already memory. lookup table data.frame PCTILE column, REGION column, column whose name value varname..lookup.table use state lookups set lookup=statestats zone Character element (vector long myvector), optional. specified, must appear column called REGION within lookup table, NA returned item looked warning given. example, \"NY\" New York State, \"USA\" national percentiles.","code":""},{"path":"/reference/pctile_from_raw_lookup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find approx percentiles in lookup table that is in memory — pctile_from_raw_lookup","text":"default, returns numeric vector length myvector.","code":""},{"path":"/reference/pctile_from_raw_lookup.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find approx percentiles in lookup table that is in memory — pctile_from_raw_lookup","text":"recoded efficient - use data.table. data.frame lookup table must field called \"PCTILE\" quantiles/percentiles column(s) values fall percentiles. usastats statestats lookup tables. function uses lookup table finds number PCTILE column corresponds specified value (myvector) appears column called varname..lookup.table. function just looks specified value fits values lookup table returns approximate percentile found PCTILE column. value cutpoints listed percentiles 89 90, returns 89, example. value exactly equal cutpoint listed percentile 90, returns percentile 90. value exactly minimum lookup table multiple percentiles lookup listed tied threshold value defining percentile (.e., large percent places score minimum score), percentile gets reported 0, percent places tied minimum score. Note true whether tied value 0 tied minimum value 0. value less cutpoint listed percentile 0, minimum value dataset, still returns 0 percentile, warning value checked less minimum dataset. also handles odd cases, like large percent raw scores tied minimum value, case reports 0 percentile, large percent.","code":""},{"path":"/reference/pctile_from_raw_lookup.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find approx percentiles in lookup table that is in memory — pctile_from_raw_lookup","text":"","code":"if (FALSE) {  eg <- dput(round(as.vector(unlist(testoutput_ejamit_10pts_1miles$results_overall[ , ..names_d] )),3))  data.frame(value = eg, pctile = t(testoutput_ejamit_10pts_1miles$results_overall[ , ..names_d_pctile]))  data.frame(value = eg, pctile = lookup_pctile(eg, names_d))     # compare ejscreen API output percentiles to those from this function:   for (vname in c(names_d[c(1,3:6,8:10)] )) {      print(pctile_from_raw_lookup(testoutput_ejscreenapi_plus_100[,vname] / 100, vname,         lookup = usastats)         - testoutput_ejscreenapi_plus_100[,paste0(\"pctile.\",vname)] )   }   for (vname in c(names_e )) {      print(pctile_from_raw_lookup(testoutput_ejscreenapi_plus_100[,vname], vname,         lookup = usastats)          - testoutput_ejscreenapi_plus_100[,paste0(\"pctile.\",vname)] )   } }"},{"path":"/reference/plotblocksnearby.html","id":null,"dir":"Reference","previous_headings":"","what":"plotblocksnearby - Map view of Census blocks (their centroids) near one or more sites\r\nUtility to quickly view one or more facility points on map with the blocks found nearby — plotblocksnearby","title":"plotblocksnearby - Map view of Census blocks (their centroids) near one or more sites\r\nUtility to quickly view one or more facility points on map with the blocks found nearby — plotblocksnearby","text":"plotblocksnearby - Map view Census blocks (centroids) near one sites Utility quickly view one facility points map blocks found nearby","code":""},{"path":"/reference/plotblocksnearby.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plotblocksnearby - Map view of Census blocks (their centroids) near one or more sites\r\nUtility to quickly view one or more facility points on map with the blocks found nearby — plotblocksnearby","text":"","code":"plotblocksnearby(   sitepoints,   radius = 3,   sites2blocks,   siteidvarname = \"ejam_uniq_id\",   usemapfast = TRUE,   returnmap = FALSE,   overlay_blockgroups = FALSE,   maxradius = 31.07,   avoidorphans = FALSE,   ... )"},{"path":"/reference/plotblocksnearby.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plotblocksnearby - Map view of Census blocks (their centroids) near one or more sites\r\nUtility to quickly view one or more facility points on map with the blocks found nearby — plotblocksnearby","text":"sitepoints table points lat, lon decimal degrees (data.frame data.table), also just output getblocksnearby() already done. radius optional. miles (Max allowed 32 miles, just 50 kilometers since 31.06856 miles 50 * 1000 / meters_per_mile). sites2blocks optional. provided, used sites2blocks like testoutput_getblocksnearby_10pts_1miles neither sites2blocks sitepoints provided plot returns error. sites2blocks sitepoints provided, uses plot blocks sites (centers circles). sites2blocks provided, sitepoints alone provided, checks sitepoints actually sites2blocks, uses . sites2blocks provided, sitepoints alone provided, sitepoints really sitepoints, runs getblocksnearby() create sites2blocks. sites2blocks provided, sitepoints , bad approximation sitepoints draw circle site center circle. siteidvarname optional. specifies column name sites2blocks unique site id, values also row numbers corresponding sites sitepoints, site appearing sitepoints, sites2blocks appearing per block near site. usemapfast optional. simpler plot FALSE returnmap optional. set TRUE, returns leaflet map object instead tabular info.  needed pass results map_blockgroups_over_blocks() example. overlay_blockgroups optional. set TRUE, also plots overlay blockgroup boundaries. maxradius optional. see getblocksnearby() avoidorphans optional. see getblocksnearby() ... optional. passed mapfast() plot() depending usemapfast, like column_names = \"ej\" better map popups block points","code":""},{"path":"/reference/plotblocksnearby.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plotblocksnearby - Map view of Census blocks (their centroids) near one or more sites\r\nUtility to quickly view one or more facility points on map with the blocks found nearby — plotblocksnearby","text":"invisibly returns sites2blocks like getblocksnearby() ","code":""},{"path":"/reference/plotblocksnearby.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"plotblocksnearby - Map view of Census blocks (their centroids) near one or more sites\r\nUtility to quickly view one or more facility points on map with the blocks found nearby — plotblocksnearby","text":"Uses getblocksnearby() lat,lon points provided sitepoints, skips looks like user passed output getblocksnearby(), displays map blocks near specified point.","code":""},{"path":"/reference/plotblocksnearby.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"plotblocksnearby - Map view of Census blocks (their centroids) near one or more sites\r\nUtility to quickly view one or more facility points on map with the blocks found nearby — plotblocksnearby","text":"","code":"#  see all Census Blocks within 1 mile of 1 site, if already had run getblocksnearby()   getblocks_output <- copy(testoutput_getblocksnearby_10pts_1miles)   if (\"siteid\" %in% names(getblocks_output)) {   siteidvarname <- \"siteid\" # the old default   eg <- getblocks_output[siteid == 1,]   eg2 <- getblocks_output[siteid %in% c(4,10),]   } else {   siteidvarname <- \"ejam_uniq_id\"    eg <- getblocks_output[ejam_uniq_id == 1,]    eg2 <- getblocks_output[ejam_uniq_id %in% c(4,10),]   }    z <-  plotblocksnearby(sitepoints = testpoints_10,       sites2blocks = eg, radius = 1)    # see two sites if already had run getblocksnearby()    z2 <-  plotblocksnearby(sitepoints = testpoints_10[c(4,10),],       sites2blocks = eg2, radius = 1)   if (FALSE) {   # See one randomly selected regulated facility from FRS and all Census Blocks within 2 miles:     plotblocksnearby(testpoints_n(1), 2)    # See two sites and all Census Blocks within 5 kilometers     plotblocksnearby(testpoints_2, radius = convert_units(5, from = \"km\", towhat = \"miles\"))   # See 100 sites and all blocks within 1 mile of each -    # Note you have to specify radius here or it uses default that may not match intent    # - and this is a bit slow   plotblocksnearby(testoutput_ejamit_100pts_1miles$results_bysite[, c(siteidvarname, \"lat\", \"lon\"), with=FALSE],      radius = 1)   }"},{"path":"/reference/plot_barplot_ratios.html","id":null,"dir":"Reference","previous_headings":"","what":"Barplot of ratios of demographic (or other) scores to averages (or other references) — plot_barplot_ratios","title":"Barplot of ratios of demographic (or other) scores to averages (or other references) — plot_barplot_ratios","text":"Barplot ratios demographic () scores averages (references)","code":""},{"path":"/reference/plot_barplot_ratios.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Barplot of ratios of demographic (or other) scores to averages (or other references) — plot_barplot_ratios","text":"","code":"plot_barplot_ratios(   ratio.to.us.d.overall,   names2plot_friendly = NULL,   mycolorsavailable = c(\"gray\", \"yellow\", \"orange\", \"red\") )"},{"path":"/reference/plot_barplot_ratios.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Barplot of ratios of demographic (or other) scores to averages (or other references) — plot_barplot_ratios","text":"ratio..us.d.overall named list ratios plot names2plot_friendly names use plot - length named list ratio..us.d.overall mycolorsavailable leave default","code":""},{"path":"/reference/plot_barplot_ratios.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Barplot of ratios of demographic (or other) scores to averages (or other references) — plot_barplot_ratios","text":"ggplot returned","code":""},{"path":"/reference/plot_barplot_ratios.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Barplot of ratios of demographic (or other) scores to averages (or other references) — plot_barplot_ratios","text":"GENERAL NOTES, EJAM DEVELOPMENT plots general, see: https://echarts4r.john-coene.com/articles/themes.html https://exts.ggplot2.tidyverse.org/gallery BARPLOTS, see/ merge/consolidate: output$view1_summary_plot <- renderPlot(v1_summary_plot()) v1_summary_plot <- reactive( ) EJAM server Short Report  bar type output$summ_display_bar <- renderPlot(  ) contains plot code reactive EJAM server tab showing barplots Detailed Results plot_barplot_ratios() drafted function EJAM BOXPLOTS, see: v1_summary_plot <- reactive( )     output$view1_summary_plot <- renderPlot(v1_summary_plot()) EJAM server SHORT report box type, EJAM server LONG report passed parameter boxplots_ratios()   EJAMejscreenapi (EJAM server Detailed Results interactive views) ejscreenapi_script() code also relevant? EJAMejscreenapi box/scatter examples ggplot, https://r-graph-gallery.com/89-box--scatter-plot--ggplot2.html boxplots base R, https://www.r-bloggers.com/2023/09/--reorder-boxplots--r--comprehensive-guide HISTOGRAMS, see: output$summ_display_hist <- renderPlot   EJAM server interactive views histograms code discussion  EJAMbatch.summarizer package","code":""},{"path":[]},{"path":"/reference/plot_barplot_ratios.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Barplot of ratios of demographic (or other) scores to averages (or other references) — plot_barplot_ratios","text":"","code":"plot_barplot_ratios(unlist(testoutput_ejamit_1000pts_1miles$results_overall[ , c(..names_d_ratio_to_avg , ..names_d_subgroups_ratio_to_avg) ]))"},{"path":"/reference/plot_demogshare_by_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"plot_demogshare_by_distance - work in progress — plot_demogshare_by_distance","title":"plot_demogshare_by_distance - work in progress — plot_demogshare_by_distance","text":"plot_demogshare_by_distance - work progress","code":""},{"path":"/reference/plot_demogshare_by_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot_demogshare_by_distance - work in progress — plot_demogshare_by_distance","text":"","code":"plot_demogshare_by_distance(   results_bybg_people,   demogvarname = names_d[1],   myids = unique(results_bybg_people$ejam_uniq_id),   show.lowess = F,   show.lm = TRUE,   show.line = TRUE,   ... )"},{"path":"/reference/plot_demogshare_by_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot_demogshare_by_distance - work in progress — plot_demogshare_by_distance","text":"results_bybg_people  demogvarname  show.lowess F show.lm linefit show.line linefit ... passed plot ejam_uniq_id","code":""},{"path":"/reference/plot_demogshare_by_distance.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"plot_demogshare_by_distance - work in progress — plot_demogshare_by_distance","text":"also consider plotting something like boxplot(demogvar ~ round(distance, 1)) See notes plots plot_barplot_ratios()","code":""},{"path":"/reference/plot_distance_by_pctd.html","id":null,"dir":"Reference","previous_headings":"","what":"What percentage of this demographic group's population lives less than X miles from a site? — plot_distance_by_pctd","title":"What percentage of this demographic group's population lives less than X miles from a site? — plot_distance_by_pctd","text":"plots cumulative share residents found within distance, single demographic group. function uses distance Census block site conjunction block group demographics, provide relatively detailed picture far away residents group live. contrast, function distance_cdf_by_group_plot() based ejamit()$results_bybg_people, provides block group resolution information distance.","code":""},{"path":"/reference/plot_distance_by_pctd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"What percentage of this demographic group's population lives less than X miles from a site? — plot_distance_by_pctd","text":"","code":"plot_distance_by_pctd(   s2b = NULL,   sitenum = NULL,   myvars = c(names_d_count, names_d_subgroups_count)[1],   demoglabel = fixcolnames(myvars, \"r\", \"shortlabel\") )"},{"path":"/reference/plot_distance_by_pctd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"What percentage of this demographic group's population lives less than X miles from a site? — plot_distance_by_pctd","text":"s2b output getblocksnearby(), data.table distance block centroid site. NULL (provided parameter function), function just show example using random point. sitenum one number unique ID (row number original list points) look s2b myvars colname population count variable blockgroupstats indicating plot, like \"hisp\" \"lowinc\" works one indicator time far. dpctvar colname usastats statestats percentage version myvars, like \"pcthisp\" \"pctlowinc\"","code":""},{"path":"/reference/plot_distance_by_pctd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"What percentage of this demographic group's population lives less than X miles from a site? — plot_distance_by_pctd","text":"returns s2b columns , like cumpop, cumdpop, pctdwithin","code":""},{"path":"/reference/plot_distance_by_pctd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"What percentage of this demographic group's population lives less than X miles from a site? — plot_distance_by_pctd","text":"","code":"plot_distance_by_pctd()"},{"path":"/reference/plot_distance_cdf_by_group.html","id":null,"dir":"Reference","previous_headings":"","what":"plot_distance_cdf_by_group  - SLOW - needs to be optimized\r\nCDF Line Plots of cumulative share of each demographic group, within each distance\r\nEach groups distribution of distances — plot_distance_cdf_by_group","title":"plot_distance_cdf_by_group  - SLOW - needs to be optimized\r\nCDF Line Plots of cumulative share of each demographic group, within each distance\r\nEach groups distribution of distances — plot_distance_cdf_by_group","text":"plot_distance_cdf_by_group  - SLOW - needs optimized CDF Line Plots cumulative share demographic group, within distance groups distribution distances","code":""},{"path":"/reference/plot_distance_cdf_by_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot_distance_cdf_by_group  - SLOW - needs to be optimized\r\nCDF Line Plots of cumulative share of each demographic group, within each distance\r\nEach groups distribution of distances — plot_distance_cdf_by_group","text":"","code":"plot_distance_cdf_by_group(   results_bybg_people = NULL,   radius_miles =     round(max(results_bybg_people$distance_min_avgperson[!is.infinite(results_bybg_people$distance_min_avgperson)],     na.rm = T), 1),   subgroups_type = NULL,   demogvarname = NULL,   demoglabel = NULL,   colorlist = colorspace::diverging_hcl(length(demogvarname)),   coloroverall = \"black\",   returnwhat = \"table\",   ... )"},{"path":"/reference/plot_distance_cdf_by_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot_distance_cdf_by_group  - SLOW - needs to be optimized\r\nCDF Line Plots of cumulative share of each demographic group, within each distance\r\nEach groups distribution of distances — plot_distance_cdf_by_group","text":"results_bybg_people data.table doaggregate()$results_bybg_people radius_miles miles radius max distance analyzed subgroups_type optional, can set \"nh\" \"alone\". Specifies types race ethnicity subgroups use demogvarname demogvarname specified parameter. neither specified tries use default_subgroups_type variable set global.R, since check reactive variable input$subgroups_type outside context web app. demogvarname optional way specify names columns use results_bybg_people, e.g., c(\"pctlowinc\", \"pctmin\"),  namez$d, vector subgroups namez$d_subgroups_nh includes \"pctnhba\" etc. namez$d_subgroups_alone includes \"pctba\" etc., demogvarname specified parameter, info also specified subgroups_type parameter . neither specified, function try use default (may reflect changes made development EJAM default_subgroups_type flux) demoglabel friendly text names labelling graphic, like \"Low income residents\" colorlist colors like \"red\" etc. demographic groups interest coloroverall color like \"gray\" everyone whole returnwhat returnwhat \"table\", invisibly returns full table sorted distances blockgroups, cumulative count demog groups block group's distance. returnwhat \"plotfilename\" returns full path including filename .png tempdir returnwhat \"plot\" returns plot object needed table_xls_format()","code":""},{"path":"/reference/plot_distance_cdf_by_group.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot_distance_cdf_by_group  - SLOW - needs to be optimized\r\nCDF Line Plots of cumulative share of each demographic group, within each distance\r\nEach groups distribution of distances — plot_distance_cdf_by_group","text":"see returnwhat parameter","code":""},{"path":[]},{"path":[]},{"path":"/reference/plot_distance_mean_by_group.html","id":null,"dir":"Reference","previous_headings":"","what":"Barplot of Average Proximity, by Group — plot_distance_mean_by_group","title":"Barplot of Average Proximity, by Group — plot_distance_mean_by_group","text":"Shows distance sites, residents demographic group (vs everyone else). plot_distance_mean_by_group() plot_distance_by_group() synonymous.","code":""},{"path":"/reference/plot_distance_mean_by_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Barplot of Average Proximity, by Group — plot_distance_mean_by_group","text":"","code":"plot_distance_mean_by_group(   results_bybg_people,   demogvarname = NULL,   demoglabel = fixcolnames(demogvarname, \"r\", \"shortlabel\"),   graph = TRUE,   returnwhat = \"table\" )"},{"path":"/reference/plot_distance_mean_by_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Barplot of Average Proximity, by Group — plot_distance_mean_by_group","text":"results_bybg_people data.table doaggregate()$results_bybg_people demogvarname vector column names like \"pctlowinc\" etc. demoglabel vector labels like \"Low Income Residents\" etc. returnwhat returnwhat \"table\", invisibly returns data.frame group, ratio, avg_distance_for_group, avg_distance_for_nongroup. returnwhat \"plotfilename\" returns full path including filename .png tempdir returnwhat \"plot\" returns plot object needed table_xls_format() ?","code":""},{"path":"/reference/plot_distance_mean_by_group.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Barplot of Average Proximity, by Group — plot_distance_mean_by_group","text":"see parameter returnwhat","code":""},{"path":"/reference/plot_distance_mean_by_group.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Barplot of Average Proximity, by Group — plot_distance_mean_by_group","text":"Note ratio shown ratio distance among others distance given group, values 1 mean given demographic group lives closer facilities. value 0.85 mean group 85% far site everyone else. Note miles assuming input miles, distance resident actually average distance residents within Census block (block group), site close block internal point (like centroid) relative size block, distance average resident block estimated 90 percent effective radius, radius block area square meters miles circular shape. approach used EJScreen estimate average proximity block resident cases block extremely close site site may actually inside block, exactly top internal point block, case zero appropriate estimate distance, hence adjustment made EJAM getblocksnearby()","code":""},{"path":[]},{"path":[]},{"path":"/reference/plot_lorenz_distance_by_dcount.html","id":null,"dir":"Reference","previous_headings":"","what":"lorenz plot bybg_people (cumulative share of x vs cum share of y) - DRAFT/EXPERIMENTAL\r\nCOUNT OF SITES (or PEOPLE?) BY BIN — plot_lorenz_distance_by_dcount","title":"lorenz plot bybg_people (cumulative share of x vs cum share of y) - DRAFT/EXPERIMENTAL\r\nCOUNT OF SITES (or PEOPLE?) BY BIN — plot_lorenz_distance_by_dcount","text":"lorenz plot bybg_people (cumulative share x vs cum share y) - DRAFT/EXPERIMENTAL COUNT SITES (PEOPLE?) BIN","code":""},{"path":"/reference/plot_lorenz_distance_by_dcount.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"lorenz plot bybg_people (cumulative share of x vs cum share of y) - DRAFT/EXPERIMENTAL\r\nCOUNT OF SITES (or PEOPLE?) BY BIN — plot_lorenz_distance_by_dcount","text":"","code":"plot_lorenz_distance_by_dcount(bybg_people, varname)"},{"path":"/reference/plot_lorenz_distance_by_dcount.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"lorenz plot bybg_people (cumulative share of x vs cum share of y) - DRAFT/EXPERIMENTAL\r\nCOUNT OF SITES (or PEOPLE?) BY BIN — plot_lorenz_distance_by_dcount","text":"bybg_people ejamit()$results_bybg_people varname ************ tbd","code":""},{"path":"/reference/plot_lorenz_distance_by_dcount.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"lorenz plot bybg_people (cumulative share of x vs cum share of y) - DRAFT/EXPERIMENTAL\r\nCOUNT OF SITES (or PEOPLE?) BY BIN — plot_lorenz_distance_by_dcount","text":"ggplot","code":""},{"path":"/reference/plot_lorenz_popcount_by_site.html","id":null,"dir":"Reference","previous_headings":"","what":"lorenz plot bysite (cumulative share of x vs cum share of y) - DRAFT/EXPERIMENTAL\r\nCOMPARES TWO subsets OF SITES (or people??) — plot_lorenz_popcount_by_site","title":"lorenz plot bysite (cumulative share of x vs cum share of y) - DRAFT/EXPERIMENTAL\r\nCOMPARES TWO subsets OF SITES (or people??) — plot_lorenz_popcount_by_site","text":"lorenz plot bysite (cumulative share x vs cum share y) - DRAFT/EXPERIMENTAL COMPARES TWO subsets SITES (people??)","code":""},{"path":"/reference/plot_lorenz_popcount_by_site.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"lorenz plot bysite (cumulative share of x vs cum share of y) - DRAFT/EXPERIMENTAL\r\nCOMPARES TWO subsets OF SITES (or people??) — plot_lorenz_popcount_by_site","text":"","code":"plot_lorenz_popcount_by_site(bysite, radius)"},{"path":"/reference/plot_lorenz_popcount_by_site.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"lorenz plot bysite (cumulative share of x vs cum share of y) - DRAFT/EXPERIMENTAL\r\nCOMPARES TWO subsets OF SITES (or people??) — plot_lorenz_popcount_by_site","text":"bysite ejamit()$results_bysite radius miles ************ tbd","code":""},{"path":"/reference/plot_lorenz_popcount_by_site.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"lorenz plot bysite (cumulative share of x vs cum share of y) - DRAFT/EXPERIMENTAL\r\nCOMPARES TWO subsets OF SITES (or people??) — plot_lorenz_popcount_by_site","text":"ggplot","code":""},{"path":"/reference/plot_ridgeline_ratios.html","id":null,"dir":"Reference","previous_headings":"","what":"Make ridgeline plot of ratios of demographic score to its average — plot_ridgeline_ratios","title":"Make ridgeline plot of ratios of demographic score to its average — plot_ridgeline_ratios","text":"Make ridgeline plot ratios demographic score average","code":""},{"path":"/reference/plot_ridgeline_ratios.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make ridgeline plot of ratios of demographic score to its average — plot_ridgeline_ratios","text":"","code":"plot_ridgeline_ratios(ratio.to.us.d.bysite, names2plot_friendly = NULL)"},{"path":"/reference/plot_ridgeline_ratios.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make ridgeline plot of ratios of demographic score to its average — plot_ridgeline_ratios","text":"names2plot_friendly names use plot - length named list ratio..us.d.overall ratio..us.d.overall named list ratios plot (data.frame)","code":""},{"path":"/reference/plot_vs_us.html","id":null,"dir":"Reference","previous_headings":"","what":"draft code to plot distribution of a variable among residents near set of sites vs nationwide\r\nNot yet population weighted — plot_vs_us","title":"draft code to plot distribution of a variable among residents near set of sites vs nationwide\r\nNot yet population weighted — plot_vs_us","text":"draft code plot distribution variable among residents near set sites vs nationwide yet population weighted","code":""},{"path":"/reference/plot_vs_us.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"draft code to plot distribution of a variable among residents near set of sites vs nationwide\r\nNot yet population weighted — plot_vs_us","text":"","code":"plot_vs_us(   bysite = ejamit()$results_bysite,   varname = \"Demog.Index\",   refdt = NULL,   type = \"box\",   colorfills = c(\"lightblue\", \"orange\"),   ... )"},{"path":"/reference/plot_vs_us.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"draft code to plot distribution of a variable among residents near set of sites vs nationwide\r\nNot yet population weighted — plot_vs_us","text":"bysite table results ejamit()$results_bysite, like testoutput_ejamit_1000pts_1miles$results_bysite varname name column bysite, like  \"Demog.Index\" type \"box\", \"plotly\", \"ggplot\" colorfills two colors boxplot","code":""},{"path":"/reference/plot_vs_us.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"draft code to plot distribution of a variable among residents near set of sites vs nationwide\r\nNot yet population weighted — plot_vs_us","text":"plots","code":""},{"path":[]},{"path":"/reference/popshare_at_top_n.html","id":null,"dir":"Reference","previous_headings":"","what":"top N sites account for what percent of residents? — popshare_at_top_n","title":"top N sites account for what percent of residents? — popshare_at_top_n","text":"fraction total population accounted top N places?","code":""},{"path":"/reference/popshare_at_top_n.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"top N sites account for what percent of residents? — popshare_at_top_n","text":"","code":"popshare_at_top_n(pop, n = 10, astext = FALSE, dig = 0)"},{"path":"/reference/popshare_at_top_n.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"top N sites account for what percent of residents? — popshare_at_top_n","text":"pop vector population totals across places, like $results_bysite$pop output ejamit() n number places consider astext TRUE, return text description results dig rounding digits text output","code":""},{"path":"/reference/popshare_at_top_n.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"top N sites account for what percent of residents? — popshare_at_top_n","text":"fraction 1","code":""},{"path":"/reference/popshare_at_top_n.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"top N sites account for what percent of residents? — popshare_at_top_n","text":"","code":"x <- testdata_ejamit_output_100pts_1miles$results_bysite  popshare_p_lives_at_what_pct(x$pop, p = 0.50, astext=TRUE)  popshare_p_lives_at_what_n(  x$pop, p = c(0.50, 0.67, 0.80, 0.95))  popshare_at_top_x_pct(       x$pop, x = c(0.25, 0.50, .90))  popshare_at_top_n(           x$pop, n = c(1, 5, 10))"},{"path":"/reference/popshare_at_top_x_pct.html","id":null,"dir":"Reference","previous_headings":"","what":"top X percent of sites account for what percent of residents? — popshare_at_top_x_pct","title":"top X percent of sites account for what percent of residents? — popshare_at_top_x_pct","text":"fraction total population accounted top X percent places?","code":""},{"path":"/reference/popshare_at_top_x_pct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"top X percent of sites account for what percent of residents? — popshare_at_top_x_pct","text":"","code":"popshare_at_top_x_pct(pop, x = 0.2, astext = FALSE, dig = 0)"},{"path":"/reference/popshare_at_top_x_pct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"top X percent of sites account for what percent of residents? — popshare_at_top_x_pct","text":"pop vector population totals across places, like $results_bysite$pop output ejamit() x fraction 1, share places (vector values) astext TRUE, return text description results dig rounding digits text output","code":""},{"path":"/reference/popshare_at_top_x_pct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"top X percent of sites account for what percent of residents? — popshare_at_top_x_pct","text":"fraction 1 (vector results) text","code":""},{"path":"/reference/popshare_at_top_x_pct.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"top X percent of sites account for what percent of residents? — popshare_at_top_x_pct","text":"","code":"x <- testdata_ejamit_output_100pts_1miles$results_bysite  popshare_p_lives_at_what_pct(x$pop, p = 0.50, astext=TRUE)  popshare_p_lives_at_what_n(  x$pop, p = c(0.50, 0.67, 0.80, 0.95))  popshare_at_top_x_pct(       x$pop, x = c(0.25, 0.50, .90))  popshare_at_top_n(           x$pop, n = c(1, 5, 10))"},{"path":"/reference/popshare_p_lives_at_what_n.html","id":null,"dir":"Reference","previous_headings":"","what":"how many sites account for P percent of residents? — popshare_p_lives_at_what_n","title":"how many sites account for P percent of residents? — popshare_p_lives_at_what_n","text":"many sites account P percent residents?","code":""},{"path":"/reference/popshare_p_lives_at_what_n.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"how many sites account for P percent of residents? — popshare_p_lives_at_what_n","text":"","code":"popshare_p_lives_at_what_n(pop, p, astext = FALSE, dig = 0)"},{"path":"/reference/popshare_p_lives_at_what_n.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"how many sites account for P percent of residents? — popshare_p_lives_at_what_n","text":"pop vector population totals across places, like $results_bysite$pop output ejamit() p share population (0-1, fraction), vector one astext TRUE, return text description results dig rounding digits text output","code":""},{"path":"/reference/popshare_p_lives_at_what_n.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"how many sites account for P percent of residents? — popshare_p_lives_at_what_n","text":"vector numbers sites, text ","code":""},{"path":"/reference/popshare_p_lives_at_what_n.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"how many sites account for P percent of residents? — popshare_p_lives_at_what_n","text":"","code":"x <- testdata_ejamit_output_100pts_1miles$results_bysite  popshare_p_lives_at_what_pct(x$pop, p = 0.50, astext=TRUE)  popshare_p_lives_at_what_n(  x$pop, p = c(0.50, 0.67, 0.80, 0.95))  popshare_at_top_x_pct(       x$pop, x = c(0.25, 0.50, .90))  popshare_at_top_n(           x$pop, n = c(1, 5, 10))"},{"path":"/reference/popshare_p_lives_at_what_pct.html","id":null,"dir":"Reference","previous_headings":"","what":"what percent of sites account for P percent of residents? — popshare_p_lives_at_what_pct","title":"what percent of sites account for P percent of residents? — popshare_p_lives_at_what_pct","text":"percent sites account P percent residents?","code":""},{"path":"/reference/popshare_p_lives_at_what_pct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"what percent of sites account for P percent of residents? — popshare_p_lives_at_what_pct","text":"","code":"popshare_p_lives_at_what_pct(pop, p, astext = FALSE, dig = 0)"},{"path":"/reference/popshare_p_lives_at_what_pct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"what percent of sites account for P percent of residents? — popshare_p_lives_at_what_pct","text":"pop vector population totals across places, like $results_bysite$pop output ejamit() p share population (0-1, fraction), vector one astext TRUE, return text description results dig rounding digits text output","code":""},{"path":"/reference/popshare_p_lives_at_what_pct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"what percent of sites account for P percent of residents? — popshare_p_lives_at_what_pct","text":"vector fractions 0-1 sites, text ","code":""},{"path":"/reference/popshare_p_lives_at_what_pct.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"what percent of sites account for P percent of residents? — popshare_p_lives_at_what_pct","text":"","code":"x <- testdata_ejamit_output_100pts_1miles$results_bysite  popshare_p_lives_at_what_pct(x$pop, p = 0.50, astext=TRUE)  popshare_p_lives_at_what_n(  x$pop, p = c(0.50, 0.67, 0.80, 0.95))  popshare_at_top_x_pct(       x$pop, x = c(0.25, 0.50, .90))  popshare_at_top_n(           x$pop, n = c(1, 5, 10))"},{"path":"/reference/popup_from_any.html","id":null,"dir":"Reference","previous_headings":"","what":"popup_from_any - Simple map popup from a data.table or data.frame, one point per row\r\nCreates popup vector that leaflet::addCircles or leaflet::addPopups can use.\r\nWorks similarly to EJAMejscreenapi::popup_from_df, but now extends to data.table — popup_from_any","title":"popup_from_any - Simple map popup from a data.table or data.frame, one point per row\r\nCreates popup vector that leaflet::addCircles or leaflet::addPopups can use.\r\nWorks similarly to EJAMejscreenapi::popup_from_df, but now extends to data.table — popup_from_any","text":"popup_from_any - Simple map popup data.table data.frame, one point per row Creates popup vector leaflet::addCircles leaflet::addPopups can use. Works similarly EJAMejscreenapi::popup_from_df, now extends data.table","code":""},{"path":"/reference/popup_from_any.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"popup_from_any - Simple map popup from a data.table or data.frame, one point per row\r\nCreates popup vector that leaflet::addCircles or leaflet::addPopups can use.\r\nWorks similarly to EJAMejscreenapi::popup_from_df, but now extends to data.table — popup_from_any","text":"","code":"popup_from_any(   x,   column_names = names(x),   labels = column_names,   n = \"all\",   testing = FALSE )"},{"path":"/reference/popup_from_any.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"popup_from_any - Simple map popup from a data.table or data.frame, one point per row\r\nCreates popup vector that leaflet::addCircles or leaflet::addPopups can use.\r\nWorks similarly to EJAMejscreenapi::popup_from_df, but now extends to data.table — popup_from_any","text":"x, data table data frame column_names default , vector column names x use. column_names requested found names(x), warning given NA values returned names x. names(x) requested column_names, left . labels default column_names - vector used label elements popup. Must length column_names n Show first n columns mypoints, popup. \"\" means . testing can set TRUE testing function","code":""},{"path":"/reference/popup_from_any.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"popup_from_any - Simple map popup from a data.table or data.frame, one point per row\r\nCreates popup vector that leaflet::addCircles or leaflet::addPopups can use.\r\nWorks similarly to EJAMejscreenapi::popup_from_df, but now extends to data.table — popup_from_any","text":"vector strings, one per row map point, line break separating column elements","code":""},{"path":"/reference/popup_from_any.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"popup_from_any - Simple map popup from a data.table or data.frame, one point per row\r\nCreates popup vector that leaflet::addCircles or leaflet::addPopups can use.\r\nWorks similarly to EJAMejscreenapi::popup_from_df, but now extends to data.table — popup_from_any","text":"popup made one row data.frame. popup one row text per column data.frame","code":""},{"path":"/reference/popup_from_any.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"popup_from_any - Simple map popup from a data.table or data.frame, one point per row\r\nCreates popup vector that leaflet::addCircles or leaflet::addPopups can use.\r\nWorks similarly to EJAMejscreenapi::popup_from_df, but now extends to data.table — popup_from_any","text":"","code":"dat <- data.table(    RegistryId = c(\"110071102551\", \"110015787683\"),    FacilityName = c(\"USDOI FWS AK MARITIME NWR etc\", \"ADAK POWER PLANT\"),    LocationAddress = c(\"65 MI W. OF ADAK NAVAL FACILITY\", \"100 HILLSIDE BLVD\"),    CityName = c(\"ADAK\", \"ADAK\"),    CountyName = c(\"ALEUTIAN ISLANDS\", \"ALEUTIANS WEST\"),    StateAbbr = c(\"AK\", \"AK\"),    ZipCode = c(\"99546\", \"99546\"),    FIPSCode = c(\"02010\", \"02016\"),    lat = c(51.671389,51.8703), lon = c(-178.051111, -176.659),    SupplementalLocation = c(NA_character_,NA_character_))    ## add popups only  leaflet::leaflet(dat) |> leaflet::addTiles() |> leaflet::addPopups(popup = popup_from_any(dat))    ## add circles with clickable popups  leaflet::leaflet(dat) |> leaflet::addTiles() |> leaflet::addCircles(popup = popup_from_any(dat))    ## convert to data frame, works the same way   dat_df <- as.data.frame(dat_df)  leaflet::leaflet(dat) |> leaflet::addTiles() |> leaflet::addCircles(popup = popup_from_any(dat))"},{"path":"/reference/proximity.score.in.miles.html","id":null,"dir":"Reference","previous_headings":"","what":"proximity.score.in.miles - convert EJScreen proximity scores to miles per site instead of sites per kilometer\r\nShows US percentiles if no arguments used — proximity.score.in.miles","title":"proximity.score.in.miles - convert EJScreen proximity scores to miles per site instead of sites per kilometer\r\nShows US percentiles if no arguments used — proximity.score.in.miles","text":"proximity.score..miles - convert EJScreen proximity scores miles per site instead sites per kilometer Shows US percentiles arguments used","code":""},{"path":"/reference/proximity.score.in.miles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"proximity.score.in.miles - convert EJScreen proximity scores to miles per site instead of sites per kilometer\r\nShows US percentiles if no arguments used — proximity.score.in.miles","text":"","code":"proximity.score.in.miles(scoresdf = NULL)"},{"path":"/reference/proximity.score.in.miles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"proximity.score.in.miles - convert EJScreen proximity scores to miles per site instead of sites per kilometer\r\nShows US percentiles if no arguments used — proximity.score.in.miles","text":"scoresdf data.frame simple proximity scores like tsdf, rmp, npl traffic.score npdes one since weighted just count per km","code":""},{"path":"/reference/proxistat2.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate a proximity score for every blockgroup - DRAFT WORK IN PROGRESS — proxistat2","title":"Calculate a proximity score for every blockgroup - DRAFT WORK IN PROGRESS — proxistat2","text":"Indicator proximity blockgroups set facilities sites. also see getfrsnearby()","code":""},{"path":"/reference/proxistat2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate a proximity score for every blockgroup - DRAFT WORK IN PROGRESS — proxistat2","text":"","code":"proxistat2(pts, countradius = 8.04672, maxradius = 621.3712, quadtree = NULL)"},{"path":"/reference/proxistat2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate a proximity score for every blockgroup - DRAFT WORK IN PROGRESS — proxistat2","text":"pts data.table lat lon countradius distance within nearby sites counted create proximity score. miles, default 5km (8.04672 miles) EJScreen zone proximity scores based counts. maxradius max distance miles search nearest single facility, none found within countradius. EJScreen seems use 1,000 km max search, since lowest scores proximity scores RMP, TSDF, NPL around 0.001, meaning approx. 1/1000 km km_per_mile = 1.609344 1000 km 1000 / 1.609344 = 621.3712 miles quadtree must called localtree, index block locations, built use EJAM package. see quaddata","code":""},{"path":"/reference/proxistat2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate a proximity score for every blockgroup - DRAFT WORK IN PROGRESS — proxistat2","text":"data.table proximityscore, bgfips, lat, lon, etc.","code":""},{"path":"/reference/proxistat2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate a proximity score for every blockgroup - DRAFT WORK IN PROGRESS — proxistat2","text":"Proximity score sum (1/d) d distance given site km, summed sites within 5km, EJScreen. getblocksnearbyviaQuadTree.R() maybe doaggregate()? bit code function .","code":""},{"path":"/reference/proxistat2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate a proximity score for every blockgroup - DRAFT WORK IN PROGRESS — proxistat2","text":"","code":"# pts <- testpoints_100  # x <- proxistat2(pts = pts[1:1000,], quadtree = localtree)   #  # summary(x$proximityscore)  # # analyze.stuff   pctiles(x$proximityscore)  # plot(x = x$lon, y = x$lat)  # tops = x$proximityscore > 500 & !is.infinite(x$proximityscore) & !is.na(x$proximityscore)  # points(x = x$lon[tops], y = x$lat[tops], col=\"red\")"},{"path":"/reference/quaddata.html","id":null,"dir":"Reference","previous_headings":"","what":"quaddata (DATA) data.table used to create index of all US block point locations — quaddata","title":"quaddata (DATA) data.table used to create index of all US block point locations — quaddata","text":"quaddata (DATA) data.table used create index US block point locations","code":""},{"path":"/reference/quaddata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"quaddata (DATA) data.table used to create index of all US block point locations — quaddata","text":"8,174,955 rows non-populated blocks kept. 5,806,512 rows Census 2020 population (blockwt) > 0. largest file used package, 168 MB file, 2020 Census. - blockid - BLOCK_X, BLOCK_Y, BLOCK_Z  (lat, lon)","code":"localtree is the index made from quaddata    (QuadTree class, via SearchTrees pkg), not a data.table"},{"path":[]},{"path":"/reference/radius_inferred.html","id":null,"dir":"Reference","previous_headings":"","what":"radius_inferred - utility to estimate original radius requested in getblocksnearby()\r\nif we only have the outputs of getblocksnearby() — radius_inferred","title":"radius_inferred - utility to estimate original radius requested in getblocksnearby()\r\nif we only have the outputs of getblocksnearby() — radius_inferred","text":"radius_inferred - utility estimate original radius requested getblocksnearby() outputs getblocksnearby()","code":""},{"path":"/reference/radius_inferred.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"radius_inferred - utility to estimate original radius requested in getblocksnearby()\r\nif we only have the outputs of getblocksnearby() — radius_inferred","text":"","code":"radius_inferred(   s2b = NULL,   decimalsreported = 2,   decimalsforinferring = 3,   pctile_of_sites = 0.9,   nth_furthest_block = 2 )"},{"path":"/reference/radius_inferred.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"radius_inferred - utility to estimate original radius requested in getblocksnearby()\r\nif we only have the outputs of getblocksnearby() — radius_inferred","text":"s2b data.table ejam_uniq_id, distance, etc. output getblocksnearby() decimalsreported parameter fine tune estimates - generally changed decimalsforinferring parameter fine tune estimates - generally changed pctile_of_sites parameter fine tune estimates - generally changed nth_furthest_block parameter fine tune estimates - generally changed","code":""},{"path":"/reference/radius_inferred.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"radius_inferred - utility to estimate original radius requested in getblocksnearby()\r\nif we only have the outputs of getblocksnearby() — radius_inferred","text":"single number 1.5 3 estimate miles distance originally requested getblocksnearby()","code":""},{"path":"/reference/radius_inferred.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"radius_inferred - utility to estimate original radius requested in getblocksnearby()\r\nif we only have the outputs of getblocksnearby() — radius_inferred","text":"cases someone using EJAM functions like getblocksnearby() might later separate step use results getblocksnearby() summarize indicator values using function like doaggregate(), actual radius originally requested known. function tries approximate radius must requested analysis, looking sites2blocks information distances nearby blocks near analyzed sites. simple using max distance sites, sites getblocksnearby() reports one two distances larger radius requested, even avoidorphans FALSE. must reported distance adjusted small relative whole block, better estimate distance average resident block rather reporting distance point block internal point (centroid essentially). documented EJScreen information creating proximity scores, facility exactly top block internal point distance zero point actual distance average resident block, hence adjustment. blocks low density areas huge relatively small circular buffer (small radius) require adjustments often. block 3 miles radius someone wants radius 1 mile getblocksnearby() ejamit() analysis overall, site inside block might reported distance 2.7 miles average resident block estimated 2.7 miles away site block. Almost 2% US blocks affected issue selected radius 1 mile, 1 1,000 radius 3 miles. function based largely practical algorithm accurate within 0.01 miles vast majority time radius 1 3 miles.","code":""},{"path":"/reference/radius_inferred.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"radius_inferred - utility to estimate original radius requested in getblocksnearby()\r\nif we only have the outputs of getblocksnearby() — radius_inferred","text":"","code":"radius_inferred()   # radius_inferred(getblocksnearby(testpoints_n(100), radius = 3.25))"},{"path":"/reference/regid_from_naics.html","id":null,"dir":"Reference","previous_headings":"","what":"Find EPA-regulated facilities in FRS by NAICS code (industrial category) — regid_from_naics","title":"Find EPA-regulated facilities in FRS by NAICS code (industrial category) — regid_from_naics","text":"Get lat lon, Registry ID, given NAICS industry code(s) Find EPA Facility Registry Service (FRS) sites exact NAICS code (subcategories)","code":""},{"path":"/reference/regid_from_naics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find EPA-regulated facilities in FRS by NAICS code (industrial category) — regid_from_naics","text":"","code":"regid_from_naics(naics, id_only = FALSE)"},{"path":"/reference/regid_from_naics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find EPA-regulated facilities in FRS by NAICS code (industrial category) — regid_from_naics","text":"naics vector naics codes, data.table column named code, output naics_from_any()","code":""},{"path":"/reference/regid_from_naics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find EPA-regulated facilities in FRS by NAICS code (industrial category) — regid_from_naics","text":"data.table (just data.frame) columns called lat, lon, REGISTRY_ID, NAICS (see id_only parameter)","code":""},{"path":"/reference/regid_from_naics.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find EPA-regulated facilities in FRS by NAICS code (industrial category) — regid_from_naics","text":"NOTE: many FRS sites lack NAICS code! Also, function find sites identified FRS data child NAICS (subcategory exact query)! Relies  frs_by_naics (data.table) See info NAICS industry codes https://www.naics.com/search","code":""},{"path":"/reference/regid_from_naics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find EPA-regulated facilities in FRS by NAICS code (industrial category) — regid_from_naics","text":"","code":"regid_from_naics(321114)   latlon_from_naics(321114)   latlon_from_naics(EJAM::naics_from_any(\"cheese\")[,code] )   head(latlon_from_naics(c(3366, 33661, 336611), id_only=TRUE))   # mapfast(frs_from_naics(336611)) # simple map"},{"path":"/reference/regid_from_sic.html","id":null,"dir":"Reference","previous_headings":"","what":"Find EPA-regulated facilities in FRS by SIC code (industrial category) — regid_from_sic","title":"Find EPA-regulated facilities in FRS by SIC code (industrial category) — regid_from_sic","text":"Get lat lon, Registry ID, given SIC industry code(s) Find EPA Facility Registry Service (FRS) sites exact SIC code (subcategories)","code":""},{"path":"/reference/regid_from_sic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find EPA-regulated facilities in FRS by SIC code (industrial category) — regid_from_sic","text":"","code":"regid_from_sic(sic, id_only = FALSE)"},{"path":"/reference/regid_from_sic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find EPA-regulated facilities in FRS by SIC code (industrial category) — regid_from_sic","text":"sic vector SIC codes, data.table column named code, output sic_from_any()","code":""},{"path":"/reference/regid_from_sic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find EPA-regulated facilities in FRS by SIC code (industrial category) — regid_from_sic","text":"data.table (just data.frame) columns called lat, lon, REGISTRY_ID, SIC (see id_only parameter)","code":""},{"path":"/reference/regid_from_sic.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find EPA-regulated facilities in FRS by SIC code (industrial category) — regid_from_sic","text":"NOTE: many FRS sites lack SIC code! Also, function find sites identified FRS data child SIC (subcategory exact query)! Relies  frs_by_sic (data.table) See info SIC industry codes https://www.naics.com/search","code":""},{"path":"/reference/regid_from_sic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find EPA-regulated facilities in FRS by SIC code (industrial category) — regid_from_sic","text":"","code":"regid_from_sic('7300')   latlon_from_sic('7300')   latlon_from_sic(sic_from_any(\"cheese\")[,code] )   head(latlon_from_sic(c('6150', '6300', '5995'), id_only=TRUE))   # mapfast(frs_from_sic('6150')) # simple map"},{"path":"/reference/regionstats.html","id":null,"dir":"Reference","previous_headings":"","what":"regionstats (DATA) (obsolete) data.table of 100 percentiles and means for each EPA Region. — regionstats","title":"regionstats (DATA) (obsolete) data.table of 100 percentiles and means for each EPA Region. — regionstats","text":"data.table 100 percentiles means EPA Region (> 1,000 rows) block groups zone (e.g., block groups blockgroupstats) set indicators percent low income. column one indicator (specifies percentile). similar lookup tables gdb FTP site EJScreen.","code":""},{"path":"/reference/rmost.html","id":null,"dir":"Reference","previous_headings":"","what":"utility to rm(list=ls()) but not remove key datasets EJAM uses — rmost","title":"utility to rm(list=ls()) but not remove key datasets EJAM uses — rmost","text":"utility rm(list=ls()) remove key datasets EJAM uses","code":""},{"path":"/reference/rmost.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"utility to rm(list=ls()) but not remove key datasets EJAM uses — rmost","text":"","code":"rmost(   notremove = c(\"rmost\", \"localtree\", \"blockgroupstats\", \"usastats\", \"statestats\",     \"bgid2fips\", \"blockid2fips\", \"blockpoints\", \"blockwts\", \"quaddata\", \"bgej\") )"},{"path":"/reference/run_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Launch the Shiny Application in RStudio — run_app","title":"Launch the Shiny Application in RStudio — run_app","text":"launch Shiny web app RStudio","code":""},{"path":"/reference/run_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Launch the Shiny Application in RStudio — run_app","text":"","code":"run_app(   onStart = NULL,   options = list(),   enableBookmarking = \"server\",   uiPattern = \"/\",   ... )"},{"path":"/reference/run_app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Launch the Shiny Application in RStudio — run_app","text":"onStart function called app actually run. needed shinyAppObj, since shinyAppDir case, global.R file can used purpose. options Named options passed runApp call (can following: \"port\", \"launch.browser\", \"host\", \"quiet\", \"display.mode\" \"test.mode\"). can also specify width height parameters provide hint embedding environment ideal height/width app. enableBookmarking Can one \"url\", \"server\", \"disable\". default value, NULL, respect setting previous calls  enableBookmarking(). See enableBookmarking() information bookmarking app. uiPattern regular expression applied GET request determine whether ui used handle request. Note entire request path must match regular expression order match considered successful. ... arguments pass golem_opts. Maybe something like sitepoints=\"latlondata.xlsx\" sitepoints=testpoints_100 See ?golem::get_golem_options details.","code":""},{"path":"/reference/run_app.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Launch the Shiny Application in RStudio — run_app","text":"app_run_EJAM()                 like run_app() EJAM package","code":""},{"path":"/reference/setdiff2.html","id":null,"dir":"Reference","previous_headings":"","what":"UTILITY - see what is only in x or y but not both - just like setdiff except for y,x and also x,y — setdiff2","title":"UTILITY - see what is only in x or y but not both - just like setdiff except for y,x and also x,y — setdiff2","text":"setdiff2 aka unshared just shows elements one one sets x y","code":""},{"path":"/reference/setdiff2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UTILITY - see what is only in x or y but not both - just like setdiff except for y,x and also x,y — setdiff2","text":"","code":"setdiff2(x, y)"},{"path":"/reference/setdiff_yx.html","id":null,"dir":"Reference","previous_headings":"","what":"UTILITY - see what is in y not x — setdiff_yx","title":"UTILITY - see what is in y not x — setdiff_yx","text":"utility just like setdiff except y,x instead x,y","code":""},{"path":"/reference/setdiff_yx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UTILITY - see what is in y not x — setdiff_yx","text":"","code":"setdiff_yx(x, y)"},{"path":"/reference/shapefile_clean.html","id":null,"dir":"Reference","previous_headings":"","what":"Drop invalid rows and warn if all invalid — shapefile_clean","title":"Drop invalid rows and warn if all invalid — shapefile_clean","text":"Drop invalid rows warn invalid","code":""},{"path":"/reference/shapefile_clean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drop invalid rows and warn if all invalid — shapefile_clean","text":"","code":"shapefile_clean(shp, crs = 4269)"},{"path":"/reference/shapefile_clean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drop invalid rows and warn if all invalid — shapefile_clean","text":"shp shapefile object using sf::read_sf() crs used shp <- sf::st_transform(shp, crs = crs), default crs = 4269 Geodetic CRS NAD83","code":""},{"path":"/reference/shapefile_clean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Drop invalid rows and warn if all invalid — shapefile_clean","text":"shapefile object using sf::read_sf()","code":""},{"path":[]},{"path":"/reference/shapefile_filepaths_from_folder.html","id":null,"dir":"Reference","previous_headings":"","what":"Get list of valid filenames comprising shapefile including paths — shapefile_filepaths_from_folder","title":"Get list of valid filenames comprising shapefile including paths — shapefile_filepaths_from_folder","text":"Get list valid filenames comprising shapefile including paths","code":""},{"path":"/reference/shapefile_filepaths_from_folder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get list of valid filenames comprising shapefile including paths — shapefile_filepaths_from_folder","text":"","code":"shapefile_filepaths_from_folder(folder = NULL)"},{"path":"/reference/shapefile_filepaths_from_folder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get list of valid filenames comprising shapefile including paths — shapefile_filepaths_from_folder","text":"folder path folder contains files (.shp, .shx, .dbf, .prj)","code":""},{"path":"/reference/shapefile_filepaths_from_folder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get list of valid filenames comprising shapefile including paths — shapefile_filepaths_from_folder","text":"string vector filenames including full paths","code":""},{"path":[]},{"path":"/reference/shapefile_filepaths_valid.html","id":null,"dir":"Reference","previous_headings":"","what":"Confirm files have all the extensions .shp, .shx, .dbf, and .prj — shapefile_filepaths_valid","title":"Confirm files have all the extensions .shp, .shx, .dbf, and .prj — shapefile_filepaths_valid","text":"Confirm files extensions .shp, .shx, .dbf, .prj","code":""},{"path":"/reference/shapefile_filepaths_valid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confirm files have all the extensions .shp, .shx, .dbf, and .prj — shapefile_filepaths_valid","text":"","code":"shapefile_filepaths_valid(filepaths)"},{"path":"/reference/shapefile_filepaths_valid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confirm files have all the extensions .shp, .shx, .dbf, and .prj — shapefile_filepaths_valid","text":"filepaths vector full paths filenames (types .shp, .shx, .dbf, .prj) strings","code":""},{"path":"/reference/shapefile_filepaths_valid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Confirm files have all the extensions .shp, .shx, .dbf, and .prj — shapefile_filepaths_valid","text":"logical, indicating 4 extensions found among filepaths","code":""},{"path":[]},{"path":"/reference/shapefile_from_filepaths.html","id":null,"dir":"Reference","previous_headings":"","what":"Read shapefile from disk based on the filenames given — shapefile_from_filepaths","title":"Read shapefile from disk based on the filenames given — shapefile_from_filepaths","text":"Read shapefile disk based filenames given","code":""},{"path":"/reference/shapefile_from_filepaths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read shapefile from disk based on the filenames given — shapefile_from_filepaths","text":"","code":"shapefile_from_filepaths(filepaths = NULL, cleanit = TRUE, crs = 4269)"},{"path":"/reference/shapefile_from_filepaths.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read shapefile from disk based on the filenames given — shapefile_from_filepaths","text":"filepaths vector full paths filenames (types .shp, .shx, .dbf, .prj) strings cleanit set FALSE want skip validation dropping invalid rows crs cleanit = TRUE, crs passed shapefile_clean() default crs = 4269 Geodetic CRS NAD83 Also can check via x <- sf::st_crs(sf::read_sf()); x$input","code":""},{"path":"/reference/shapefile_from_filepaths.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read shapefile from disk based on the filenames given — shapefile_from_filepaths","text":"shapefile object using sf::read_sf()","code":""},{"path":[]},{"path":"/reference/shapefile_from_folder.html","id":null,"dir":"Reference","previous_headings":"","what":"Read shapefile from a folder — shapefile_from_folder","title":"Read shapefile from a folder — shapefile_from_folder","text":"Read shapefile folder","code":""},{"path":"/reference/shapefile_from_folder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read shapefile from a folder — shapefile_from_folder","text":"","code":"shapefile_from_folder(folder = NULL, cleanit = TRUE, crs = 4269)"},{"path":"/reference/shapefile_from_folder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read shapefile from a folder — shapefile_from_folder","text":"folder path folder contains files (.shp, .shx, .dbf, .prj) cleanit set FALSE want skip validation dropping invalid rows crs passed shapefile_from_filepaths() default crs = 4269 Geodetic CRS NAD83","code":""},{"path":"/reference/shapefile_from_folder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read shapefile from a folder — shapefile_from_folder","text":"shapefile object using sf::read_sf()","code":""},{"path":"/reference/shapefile_from_folder.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read shapefile from a folder — shapefile_from_folder","text":"","code":"if (FALSE) {   testfolder <- system.file(\"testdata/shapes/Portland_neighborhoods\", package = \"EJAM\")   testshape <- shapefile_from_folder(testfolder)      testpaths <- shapefile_filepaths_from_folder(testfolder)   testshape <- shapefile_from_filepaths(testpaths)      ## if interactive(), R user can point to right folder or select the right set of files:   # testshape <- shapefile_from_filepaths()   # testshape <- shapefile_from_folder()      x <- get_blockpoints_in_shape(testshape)   leaflet(x$polys) %>% addTiles() %>% addPolygons(color = \"blue\")   DT::datatable(out$results_bysite)      }"},{"path":"/reference/shapefile_from_sitepoints.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert table of lat,lon points/sites into sf:: shapefile — shapefile_from_sitepoints","title":"Convert table of lat,lon points/sites into sf:: shapefile — shapefile_from_sitepoints","text":"Creates simple feature (sf) dataframe points","code":""},{"path":"/reference/shapefile_from_sitepoints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert table of lat,lon points/sites into sf:: shapefile — shapefile_from_sitepoints","text":"","code":"shapefile_from_sitepoints(sitepoints, crs = 4269)"},{"path":"/reference/shapefile_from_sitepoints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert table of lat,lon points/sites into sf:: shapefile — shapefile_from_sitepoints","text":"sitepoints data.table data.frame columns called lat,lon crs used st_as_sf() default crs = 4269 Geodetic CRS NAD83","code":""},{"path":"/reference/shapefile_from_sitepoints.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert table of lat,lon points/sites into sf:: shapefile — shapefile_from_sitepoints","text":"shapefile via sf::st_as_sf()","code":""},{"path":[]},{"path":"/reference/shapes_blockgroups_from_bgfips.html","id":null,"dir":"Reference","previous_headings":"","what":"Get boundaries of blockgroups, via API, to map them — shapes_blockgroups_from_bgfips","title":"Get boundaries of blockgroups, via API, to map them — shapes_blockgroups_from_bgfips","text":"Get boundaries blockgroups, via API, map ","code":""},{"path":"/reference/shapes_blockgroups_from_bgfips.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get boundaries of blockgroups, via API, to map them — shapes_blockgroups_from_bgfips","text":"","code":"shapes_blockgroups_from_bgfips(   bgfips = \"010890029222\",   outFields = \"\",   myservice =     c(\"https://services.arcgis.com/P3ePLMYs2RVChkJx/ArcGIS/rest/services/USA_Boundaries_2022/FeatureServer/5/query\",     \"https://services.arcgis.com/P3ePLMYs2RVChkJx/ArcGIS/rest/services/USA_Block_Groups/FeatureServer/0/query\",     \"https://services.arcgis.com/cJ9YHowT8TU7DUyn/ArcGIS/rest/services/EJScreen_2_21_US_Percentiles_Block_Groups/FeatureServer/0/query\")[1] )"},{"path":"/reference/shapes_blockgroups_from_bgfips.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get boundaries of blockgroups, via API, to map them — shapes_blockgroups_from_bgfips","text":"bgfips one block group FIPS codes 12-character strings vector outFields can \"*\" , can just variables like SQMI, POPULATION_2020, etc., none myservice URL feature service get shapes . \"https://services.arcgis.com/cJ9YHowT8TU7DUyn/ArcGIS/rest/services/ EJScreen_2_21_US_Percentiles_Block_Groups/FeatureServer/0/query\" example provides EJScreen indicator values, NPL_CNT, TSDF_CNT, EXCEED_COUNT_90, etc.","code":""},{"path":"/reference/shapes_blockgroups_from_bgfips.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get boundaries of blockgroups, via API, to map them — shapes_blockgroups_from_bgfips","text":"spatial object via sf::read_sf()","code":""},{"path":"/reference/shapes_blockgroups_from_bgfips.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get boundaries of blockgroups, via API, to map them — shapes_blockgroups_from_bgfips","text":"useful mostly small numbers blockgroups. EJScreen map services provide ways map blockgroups see EJScreen data.","code":""},{"path":"/reference/shapes_counties_from_countyfips.html","id":null,"dir":"Reference","previous_headings":"","what":"Get boundaries of US Counties via API, to map them — shapes_counties_from_countyfips","title":"Get boundaries of US Counties via API, to map them — shapes_counties_from_countyfips","text":"Get boundaries US Counties via API, map ","code":""},{"path":"/reference/shapes_counties_from_countyfips.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get boundaries of US Counties via API, to map them — shapes_counties_from_countyfips","text":"","code":"shapes_counties_from_countyfips(   countyfips = \"10001\",   outFields = \"\",   myservice =     c(\"https://services.arcgis.com/P3ePLMYs2RVChkJx/ArcGIS/rest/services/USA_Boundaries_2022/FeatureServer/2/query\",     \"https://services.arcgis.com/P3ePLMYs2RVChkJx/ArcGIS/rest/services/USA_Counties_and_States_with_PR/FeatureServer/0/query\",     \"https://services.arcgis.com/cJ9YHowT8TU7DUyn/ArcGIS/rest/services/EJScreen_2_22_US_Percentiles_Tracts/FeatureServer/query\")[1] )"},{"path":"/reference/shapes_counties_from_countyfips.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get boundaries of US Counties via API, to map them — shapes_counties_from_countyfips","text":"countyfips FIPS codes 5-character strings (numbers) vector fips_counties_from_state_abbrev(\"DE\") outFields can \"*\" , can just variables like SQMI, POPULATION_2020, etc., none myservice URL feature service get shapes . default tested","code":""},{"path":"/reference/shapes_counties_from_countyfips.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get boundaries of US Counties via API, to map them — shapes_counties_from_countyfips","text":"spatial object via sf::read_sf()","code":""},{"path":"/reference/shape_buffered_from_shapefile.html","id":null,"dir":"Reference","previous_headings":"","what":"shape_buffered_from_shapefile - add buffer around shape — shape_buffered_from_shapefile","title":"shape_buffered_from_shapefile - add buffer around shape — shape_buffered_from_shapefile","text":"shape_buffered_from_shapefile - add buffer around shape","code":""},{"path":"/reference/shape_buffered_from_shapefile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"shape_buffered_from_shapefile - add buffer around shape — shape_buffered_from_shapefile","text":"","code":"shape_buffered_from_shapefile(shapefile, radius.miles, crs = 4269, ...)"},{"path":"/reference/shape_buffered_from_shapefile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"shape_buffered_from_shapefile - add buffer around shape — shape_buffered_from_shapefile","text":"shapefile spatial object like areas high risk areas facilities analyzed radius.miles width buffer add shapefile (case dist units object, convertible arc_degree x geographic coordinates, st_crs(x)$units otherwise) crs used st_transform()  default crs = 4269 Geodetic CRS NAD83 ... passed st_buffer()","code":""},{"path":"/reference/shape_buffered_from_shapefile.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"shape_buffered_from_shapefile - add buffer around shape — shape_buffered_from_shapefile","text":"Just wrapper sf::st_buffer()","code":""},{"path":[]},{"path":"/reference/shape_buffered_from_shapefile_points.html","id":null,"dir":"Reference","previous_headings":"","what":"shape_buffered_from_shapefile_points - add buffer around shape (points, here) — shape_buffered_from_shapefile_points","title":"shape_buffered_from_shapefile_points - add buffer around shape (points, here) — shape_buffered_from_shapefile_points","text":"shape_buffered_from_shapefile_points - add buffer around shape (points, )","code":""},{"path":"/reference/shape_buffered_from_shapefile_points.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"shape_buffered_from_shapefile_points - add buffer around shape (points, here) — shape_buffered_from_shapefile_points","text":"","code":"shape_buffered_from_shapefile_points(   shapefile_points,   radius.miles,   crs = 4269,   ... )"},{"path":"/reference/shape_buffered_from_shapefile_points.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"shape_buffered_from_shapefile_points - add buffer around shape (points, here) — shape_buffered_from_shapefile_points","text":"shapefile_points spatial object like areas high risk areas facilities analyzed radius.miles width buffer add shapefile_points (case dist units object, convertible arc_degree x geographic coordinates, st_crs(x)$units otherwise) crs used st_transform()  default crs = 4269 Geodetic CRS NAD83 ... passed st_buffer()","code":""},{"path":"/reference/shape_buffered_from_shapefile_points.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"shape_buffered_from_shapefile_points - add buffer around shape (points, here) — shape_buffered_from_shapefile_points","text":"Just wrapper sf::st_buffer()","code":""},{"path":[]},{"path":"/reference/SIC.html","id":null,"dir":"Reference","previous_headings":"","what":"SIC (DATA) named list of all SIC code numbers and category name for each — SIC","title":"SIC (DATA) named list of all SIC code numbers and category name for each — SIC","text":"SIC (DATA) named list SIC code numbers category name ","code":""},{"path":"/reference/SIC.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"SIC (DATA) named list of all SIC code numbers and category name for each — SIC","text":"see https://siccode.com","code":""},{"path":[]},{"path":"/reference/sictable.html","id":null,"dir":"Reference","previous_headings":"","what":"sictable (DATA) data.table of SIC code(s) and industry names for each EPA-regulated site in Facility Registry Service\r\nAlso has the 2,3, and 4-digit SIC that this code falls under, where relevant for given length — sictable","title":"sictable (DATA) data.table of SIC code(s) and industry names for each EPA-regulated site in Facility Registry Service\r\nAlso has the 2,3, and 4-digit SIC that this code falls under, where relevant for given length — sictable","text":"similar data file EJAM::SIC useful format newer functions work .","code":""},{"path":"/reference/sictable.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"sictable (DATA) data.table of SIC code(s) and industry names for each EPA-regulated site in Facility Registry Service\r\nAlso has the 2,3, and 4-digit SIC that this code falls under, where relevant for given length — sictable","text":"see https://siccode.com","code":""},{"path":[]},{"path":"/reference/sic_categories.html","id":null,"dir":"Reference","previous_headings":"","what":"See the names of SIC industrial categories and their codes — sic_categories","title":"See the names of SIC industrial categories and their codes — sic_categories","text":"Easy way view, RStudio console, SIC categories. SIC 4-digit codes, like 7218 - Industrial launderers","code":""},{"path":"/reference/sic_categories.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"See the names of SIC industrial categories and their codes — sic_categories","text":"","code":"sic_categories()"},{"path":[]},{"path":"/reference/sic_from_any.html","id":null,"dir":"Reference","previous_headings":"","what":"General way to search for industry names and NAICS codes — sic_from_any","title":"General way to search for industry names and NAICS codes — sic_from_any","text":"Find industry names codes searching queried code(s) text","code":""},{"path":"/reference/sic_from_any.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"General way to search for industry names and NAICS codes — sic_from_any","text":"","code":"sic_from_any(   query,   children = FALSE,   ignore.case = TRUE,   fixed = FALSE,   website_scrape = FALSE,   website_url = FALSE )"},{"path":"/reference/sic_from_any.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"General way to search for industry names and NAICS codes — sic_from_any","text":"query query string(s) /number(s), vector NAICS codes industry names regular expression partial words children logical, TRUE, also return subcategories - NAICS starts digits ignore.case see grepl() fixed exact match? see grepl() website_scrape whether scrape info NAICS website return table codes names match (web query uses synonyms gets hits) website_url whether return URL webpage info NAICS (web query uses synonyms gets hits)","code":""},{"path":"/reference/sic_from_any.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"General way to search for industry names and NAICS codes — sic_from_any","text":"subset sictable data.table (just codes column)","code":""},{"path":[]},{"path":"/reference/sic_from_code.html","id":null,"dir":"Reference","previous_headings":"","what":"Search for industry names by SIC code(s), 4 digits each — sic_from_code","title":"Search for industry names by SIC code(s), 4 digits each — sic_from_code","text":"Search industry names SIC code(s), 4 digits ","code":""},{"path":"/reference/sic_from_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search for industry names by SIC code(s), 4 digits each — sic_from_code","text":"","code":"sic_from_code(mycodes, children = FALSE)"},{"path":"/reference/sic_from_code.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search for industry names by SIC code(s), 4 digits each — sic_from_code","text":"mycodes vector character SIC codes. see https://siccode.com children logical, TRUE, also return subcategories - SIC starts digits","code":""},{"path":"/reference/sic_from_code.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search for industry names by SIC code(s), 4 digits each — sic_from_code","text":"subset sictable data.table (just codes column)","code":""},{"path":[]},{"path":"/reference/sic_from_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Search for industry names and SIC codes by query string — sic_from_name","title":"Search for industry names and SIC codes by query string — sic_from_name","text":"query parts words, etc. industry name.","code":""},{"path":"/reference/sic_from_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search for industry names and SIC codes by query string — sic_from_name","text":"","code":"sic_from_name(mynames, children = FALSE, ignore.case = TRUE, fixed = FALSE)"},{"path":"/reference/sic_from_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search for industry names and SIC codes by query string — sic_from_name","text":"mynames query string, vector SIC industry names regular expression partial words. See https://siccode.com children logical, TRUE, also return subcategories - SIC starts digits ignore.case see grepl() fixed exact match? see grepl()","code":""},{"path":"/reference/sic_from_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search for industry names and SIC codes by query string — sic_from_name","text":"subset sictable data.table (just codes column)","code":""},{"path":[]},{"path":"/reference/sic_from_name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search for industry names and SIC codes by query string — sic_from_name","text":"","code":"data.table::fintersect(sic_from_any( \"glass\"), sic_from_any(\"paint\"))"},{"path":"/reference/sic_subcodes_from_code.html","id":null,"dir":"Reference","previous_headings":"","what":"Find subcategories of the given overall SIC industry code(s) — sic_subcodes_from_code","title":"Find subcategories of the given overall SIC industry code(s) — sic_subcodes_from_code","text":"Given 3-digit SIC code, example, get SIC start digits.","code":""},{"path":"/reference/sic_subcodes_from_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find subcategories of the given overall SIC industry code(s) — sic_subcodes_from_code","text":"","code":"sic_subcodes_from_code(mycodes)"},{"path":"/reference/sic_subcodes_from_code.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find subcategories of the given overall SIC industry code(s) — sic_subcodes_from_code","text":"mycodes SIC codes vector, 2 4 digits . See https://siccode.com","code":""},{"path":"/reference/sic_subcodes_from_code.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find subcategories of the given overall SIC industry code(s) — sic_subcodes_from_code","text":"subset sictable data.table (just codes column)","code":""},{"path":"/reference/sic_subcodes_from_code.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find subcategories of the given overall SIC industry code(s) — sic_subcodes_from_code","text":"similar idea naics2children() robust See sic_from_any() uses ","code":""},{"path":[]},{"path":"/reference/sic_subcodes_from_code.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find subcategories of the given overall SIC industry code(s) — sic_subcodes_from_code","text":"","code":"# codes starting with '07'   sic_subcodes_from_code('07')   # codes starting with '078'   sic_subcodes_from_code('078')"},{"path":"/reference/sites2blocks_example1000pts_1miles.html","id":null,"dir":"Reference","previous_headings":"","what":"test output of getblocksnearby(), and is an input to doaggregate() — sites2blocks_example1000pts_1miles","title":"test output of getblocksnearby(), and is an input to doaggregate() — sites2blocks_example1000pts_1miles","text":"test output getblocksnearby(), input doaggregate()","code":""},{"path":"/reference/sites2blocks_example1000pts_1miles.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"test output of getblocksnearby(), and is an input to doaggregate() — sites2blocks_example1000pts_1miles","text":"output getblocksnearby(testpoints_1000, radius = 1)  testoutput_getblocksnearby_1000pts_1miles","code":""},{"path":[]},{"path":"/reference/sites2blocks_example100pts_1miles.html","id":null,"dir":"Reference","previous_headings":"","what":"test output of getblocksnearby(), and is an input to doaggregate() — sites2blocks_example100pts_1miles","title":"test output of getblocksnearby(), and is an input to doaggregate() — sites2blocks_example100pts_1miles","text":"test output getblocksnearby(), input doaggregate()","code":""},{"path":"/reference/sites2blocks_example100pts_1miles.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"test output of getblocksnearby(), and is an input to doaggregate() — sites2blocks_example100pts_1miles","text":"output getblocksnearby(testpoints_100, radius = 1)  testoutput_getblocksnearby_100pts_1miles","code":""},{"path":[]},{"path":"/reference/sites2blocks_example10pts_1miles.html","id":null,"dir":"Reference","previous_headings":"","what":"test output of getblocksnearby(), and is an input to doaggregate() — sites2blocks_example10pts_1miles","title":"test output of getblocksnearby(), and is an input to doaggregate() — sites2blocks_example10pts_1miles","text":"test output getblocksnearby(), input doaggregate()","code":""},{"path":"/reference/sites2blocks_example10pts_1miles.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"test output of getblocksnearby(), and is an input to doaggregate() — sites2blocks_example10pts_1miles","text":"output getblocksnearby(testpoints_10, radius = 1)  testoutput_getblocksnearby_10pts_1miles","code":""},{"path":[]},{"path":"/reference/speedtable_expand.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility used by speedtest() and speedtable_summarize() — speedtable_expand","title":"Utility used by speedtest() and speedtable_summarize() — speedtable_expand","text":"Utility used speedtest() speedtable_summarize()","code":""},{"path":"/reference/speedtable_expand.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility used by speedtest() and speedtable_summarize() — speedtable_expand","text":"","code":"speedtable_expand(speedtable)"},{"path":"/reference/speedtable_expand.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility used by speedtest() and speedtable_summarize() — speedtable_expand","text":"speedtable must columns called  points, miles, perhr","code":""},{"path":"/reference/speedtable_summarize.html","id":null,"dir":"Reference","previous_headings":"","what":"utility used by speedtest() — speedtable_summarize","title":"utility used by speedtest() — speedtable_summarize","text":"utility used speedtest()","code":""},{"path":"/reference/speedtable_summarize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"utility used by speedtest() — speedtable_summarize","text":"","code":"speedtable_summarize(speedtable)"},{"path":"/reference/speedtable_summarize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"utility used by speedtest() — speedtable_summarize","text":"speedtable speedtest(), columns named points perhr","code":""},{"path":[]},{"path":"/reference/speedtest.html","id":null,"dir":"Reference","previous_headings":"","what":"Run EJAM analysis for several radii and numbers of sitepoints, recording how long each step takes — speedtest","title":"Run EJAM analysis for several radii and numbers of sitepoints, recording how long each step takes — speedtest","text":"Run EJAM analysis several radii numbers sitepoints, recording long step takes","code":""},{"path":"/reference/speedtest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run EJAM analysis for several radii and numbers of sitepoints, recording how long each step takes — speedtest","text":"","code":"speedtest(   n = 10,   sitepoints = NULL,   weighting = \"frs\",   radii = c(1, 3.106856, 5, 10, 31.06856)[1:3],   avoidorphans = FALSE,   test_ejamit = FALSE,   test_getblocksnearby = TRUE,   test_doaggregate = TRUE,   test_batch.summarize = FALSE,   logging = FALSE,   logfolder = getwd(),   logfilename = \"log_n_datetime.txt\",   honk_when_ready = TRUE,   saveoutput = FALSE,   plot = TRUE,   getblocks_diagnostics_shown = FALSE,   ... )"},{"path":"/reference/speedtest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run EJAM analysis for several radii and numbers of sitepoints, recording how long each step takes — speedtest","text":"n optional, vector 1 counts many random points test, set 0 interactively pick file points RStudio (n ignored sitepoints provided) sitepoints optional,  (use want random points) data.frame points path/file points, columns lat lon decimal degrees weighting optional, using random points, weight , facilities, people, blockgroups. see testpoints_n() radii optional, one radius values miles use creating circular buffers findings residents nearby sitepoints. default list includes one 5km (approx 3.1 miles) avoidorphans see getblocksnearby() ejamit() regarding param test_ejamit whether test ejamit() instead subcomponents like getblocksnearby(), doaggregate(), etc test_getblocksnearby whether include function timing - used always done test_doaggregate whether include function timing test_batch.summarize whether include function timing logging logical optional, whether save log file timings steps. NOTE slows though. logfolder optional, name folder log file logfilename optional, name log file go folder honk_when_ready optional, self-explanatory saveoutput slows set TRUE save run .rda file plot whether create plot results getblocks_diagnostics_shown set TRUE see details block counts etc. ... passed plotting function","code":""},{"path":"/reference/speedtest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run EJAM analysis for several radii and numbers of sitepoints, recording how long each step takes — speedtest","text":"EJAM results similar web app ejamit() also creates plot","code":""},{"path":"/reference/speedtest.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run EJAM analysis for several radii and numbers of sitepoints, recording how long each step takes — speedtest","text":"essentially test script times step EJAM large dataset pick sample size (n) (enter sitepoints, set n=0 interactively pick file points RStudio) pick n random points pick different radii circular buffering analyze indicators circular buffers overall (find blocks nearby calc indicators) get stats summarize indicators compare times steps radii approaches tools","code":""},{"path":[]},{"path":"/reference/speedtest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run EJAM analysis for several radii and numbers of sitepoints, recording how long each step takes — speedtest","text":"","code":"if (FALSE) {    speedseen_few <- speedtest(c(50,500), radii=c(1, 3.106856), logging=FALSE, honk=FALSE)      speedseen_nearer_to1k <- speedtest(n = c(1e2,1e3,1e4 ), radii=c(1, 3.106856,5 ),     logging=TRUE, honk=FALSE)   save( speedseen_nearer_to1k, file = \"~/../Downloads/speedseen_nearer_to1k.rda\")   rstudioapi::savePlotAsImage(        \"~/../Downloads/speedseen_nearer_to1k.png\")      speedseen_all <- speedtest(     n = c(1e2,1e3,1e4),      radii=c(1, 3.106856, 5, 10, 31.06856),      logging=TRUE, honk=TRUE   )  }"},{"path":"/reference/speedtest_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"utility to plot output of speedtest(), rate of points analyzed per hour — speedtest_plot","title":"utility to plot output of speedtest(), rate of points analyzed per hour — speedtest_plot","text":"utility plot output speedtest(), rate points analyzed per hour","code":""},{"path":"/reference/speedtest_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"utility to plot output of speedtest(), rate of points analyzed per hour — speedtest_plot","text":"","code":"speedtest_plot(x, ltype = \"b\", plotfile = NULL, secondsperthousand = FALSE)"},{"path":"/reference/speedtest_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"utility to plot output of speedtest(), rate of points analyzed per hour — speedtest_plot","text":"x table speedtest() ltype optional type line plot plotfile optional path filename .png image file save","code":""},{"path":"/reference/speedtest_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"utility to plot output of speedtest(), rate of points analyzed per hour — speedtest_plot","text":"side effect plot. returns x seconds column added ","code":""},{"path":[]},{"path":"/reference/stateinfo.html","id":null,"dir":"Reference","previous_headings":"","what":"stateinfo (DATA) data.frame of state abbreviations and state names (50+DC+PR; not AS, GU, MP, VI, UM) — stateinfo","title":"stateinfo (DATA) data.frame of state abbreviations and state names (50+DC+PR; not AS, GU, MP, VI, UM) — stateinfo","text":"52 rows variables: ST 2-letter abbreviation, statename State name, etc.","code":""},{"path":"/reference/stateinfo.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"stateinfo (DATA) data.frame of state abbreviations and state names (50+DC+PR; not AS, GU, MP, VI, UM) — stateinfo","text":"Created EJAM datacreate_stateinfo.R script Also see https://www.census.gov/programs-surveys/decennial-census/decade/2020/planning-management/release/2020-island-areas-data-products.html column names: \"ST\"  \"statename\"  \"ftpname\"   \"FIPS.ST\"   \"REGION\" datasets lack PR. (72) Many datasets lack :  , GU, MP, VI (codes \"60\" \"66\" \"69\" \"78\") Almost datasets lack UM. (74)","code":"72 PR                 Puerto Rico            66 GU                        Guam             69 MP    Northern Mariana Islands              78 VI         U.S. Virgin Islands             74 UM U.S. Minor Outlying Islands"},{"path":[]},{"path":"/reference/stateinfo2.html","id":null,"dir":"Reference","previous_headings":"","what":"stateinfo2 (DATA) data.frame of state abbreviations and state names (50+DC+PR; not AS, GU, MP, VI, UM) — stateinfo2","title":"stateinfo2 (DATA) data.frame of state abbreviations and state names (50+DC+PR; not AS, GU, MP, VI, UM) — stateinfo2","text":"52 rows several variables: ST 2-letter abbreviation, statename State name, etc.","code":""},{"path":"/reference/stateinfo2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"stateinfo2 (DATA) data.frame of state abbreviations and state names (50+DC+PR; not AS, GU, MP, VI, UM) — stateinfo2","text":"Created EJAM datacreate_stateinfo2.R script Also see https://www.census.gov/programs-surveys/decennial-census/decade/2020/planning-management/release/2020-island-areas-data-products.html column names: c(\"statename\", \"FIPS.ST\", \"ST\", \"ftpname\", \"REGION\", \".usa.plus.pr\", \".usa\", \".state\", \".contiguous.us\", \".island.areas\", \"area.sqmi\", \"area.sqkm\", \"landarea.sqmi\", \"landarea.sqkm\", \"waterarea.sqmi\", \"waterarea.sqkm\", \"inland.sqmi\", \"inland.sqkm\", \"coastal.sqmi\", coastal.sqkm\", \"greatlakes.sqmi\", \"greatlakes.sqkm\", \"territorial.sqmi\", \"territorial.sqkm\", \"lat\", \"lon\") datasets lack PR. (72) Many datasets lack :  , GU, MP, VI (codes \"60\" \"66\" \"69\" \"78\") Almost datasets lack UM. (74)","code":"72 PR                 Puerto Rico            66 GU                        Guam             69 MP    Northern Mariana Islands              78 VI         U.S. Virgin Islands             74 UM U.S. Minor Outlying Islands"},{"path":[]},{"path":"/reference/statestats.html","id":null,"dir":"Reference","previous_headings":"","what":"statestats (DATA) data.frame of 100 percentiles and means for each US State and PR and DC. — statestats","title":"statestats (DATA) data.frame of 100 percentiles and means for each US State and PR and DC. — statestats","text":"data.frame 100 percentiles means US State PR DC (approx 5,300 rows) block groups zone (e.g., block groups blockgroupstats) set indicators percent low income. column one indicator (specifies percentile). similar lookup tables gdb FTP site EJScreen, except also data demographic race/ethnicity subgroups. details table made, see /EJAM/data-raw/usastats_subgroups.R","code":""},{"path":"/reference/statestats_means.html","id":null,"dir":"Reference","previous_headings":"","what":"statestats_means - convenient way to see STATE MEANS of ENVIRONMENTAL and DEMOGRAPHIC indicators — statestats_means","title":"statestats_means - convenient way to see STATE MEANS of ENVIRONMENTAL and DEMOGRAPHIC indicators — statestats_means","text":"statestats_means - convenient way see STATE MEANS ENVIRONMENTAL DEMOGRAPHIC indicators","code":""},{"path":"/reference/statestats_means.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"statestats_means - convenient way to see STATE MEANS of ENVIRONMENTAL and DEMOGRAPHIC indicators — statestats_means","text":"","code":"statestats_means(   ST = unique(EJAM::statestats$REGION),   varnames = c(EJAM::names_e, EJAM::names_d, EJAM::names_d_subgroups_nh),   PCTILES = \"mean\",   dig = 4 )"},{"path":"/reference/statestats_means.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"statestats_means - convenient way to see STATE MEANS of ENVIRONMENTAL and DEMOGRAPHIC indicators — statestats_means","text":"ST vector state abbreviations, USA varnames names columns lookup table, like \"proximity.rmp\" PCTILES vector percentiles 0-100 /\"mean\" dig digits round ","code":""},{"path":"/reference/statestats_query.html","id":null,"dir":"Reference","previous_headings":"","what":"statestats_query - convenient way to see mean, pctiles of Env or Demog indicators from lookup table — statestats_query","title":"statestats_query - convenient way to see mean, pctiles of Env or Demog indicators from lookup table — statestats_query","text":"statestats_query - convenient way see mean, pctiles Env Demog indicators lookup table","code":""},{"path":"/reference/statestats_query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"statestats_query - convenient way to see mean, pctiles of Env or Demog indicators from lookup table — statestats_query","text":"","code":"statestats_query(   ST = sort(unique(EJAM::statestats$REGION)),   varnames = c(EJAM::names_e, EJAM::names_d),   PCTILES = NULL,   dig = 3 )"},{"path":"/reference/statestats_query.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"statestats_query - convenient way to see mean, pctiles of Env or Demog indicators from lookup table — statestats_query","text":"ST vector state abbreviations, USA varnames names columns lookup table, like \"proximity.rmp\" PCTILES vector percentiles 0-100 /\"mean\" dig digits round ","code":""},{"path":"/reference/statestats_query.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"statestats_query - convenient way to see mean, pctiles of Env or Demog indicators from lookup table — statestats_query","text":"","code":"if (FALSE) {  usastats_querye()  #  data.frame where names_e are the names(),  #  means plus other percentiles, and there are other cols REGION PCTILE  avg.in.us                # This is a data.frame, 1 row, where colnames are indicators avg.in.us[names_e]          # subset is a data.frame! unlist(avg.in.us[names_e])  # to make it a vector  usastats_means()        # This is a matrix, with 1 col, and indicator names are rownames usastats_means(names_e)     # subset is a matrix        and indicator names are rownames usastats_means()[names_e, ] # subset is a named vector  and indicator names are  names  usastats_means() statestats_query()  statestats_query()[,names_d] statestats_query(varnames = names_d)  statestats_query()[,names_e] statestats_query(varnames = names_e)  statestats_query(varnames = names_d_subgroups) head(statestats_query(varnames = longlist))  ## in USA overall, see mean and key percentiles # for all demog and envt indicators usastats_query() # or statestats_query('us')  # can say us or US or USA or usa etc. usastats_query(PCTILES = 'mean') usastats_means() # same but nicer looking format in console usastats_means(dig=4)  # long list of variables: x = intersect(EJAM::names_all_r,  names(EJAM::usastats)) usastats_means(x)  usastats[!(usastats$PCTILE < 50), c(\"PCTILE\", names_d)] usastats[!(usastats$PCTILE < 50), c(\"PCTILE\", names_e)]  ## in 1 state, see mean and key percentiles for all demog and envt indicators statestats_query('MD')  ## in 1 state, see mean and key percentiles for just demog indicators statestats_queryd('MD')  ## 1 indicator in 1 state, see a few key percentiles and mean statestats_query('MD','proximity.tsdf')  ## mean of 1 indicator for each state statestats_query(varnames = 'proximity.tsdf')  ## using full blockgroup dataset, not lookup tables of percentiles,  blockgroupstats[, lapply(.SD, function(x) mean(x, na.rm=T)),    .SDcols= c(names_d, names_e)]  ##   see all total counts (not just US means),  ##   demographics including subgroups,  ##   but not environmental indicators. t(round(ustotals2(bg = blockgroupstats),2))   #  ustotals2 is from EJAMbatch.summarizer package t(blockgroupstats[, lapply(.SD, function(x) mean(x, na.rm=T)),     .SDcols= c(names_e, names_d)])  }"},{"path":"/reference/statestats_queryd.html","id":null,"dir":"Reference","previous_headings":"","what":"statestats_queryd - convenient way to see mean, pctiles of DEMOG indicators from lookup table — statestats_queryd","title":"statestats_queryd - convenient way to see mean, pctiles of DEMOG indicators from lookup table — statestats_queryd","text":"statestats_queryd - convenient way see mean, pctiles DEMOG indicators lookup table","code":""},{"path":"/reference/statestats_queryd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"statestats_queryd - convenient way to see mean, pctiles of DEMOG indicators from lookup table — statestats_queryd","text":"","code":"statestats_queryd(   ST = sort(unique(EJAM::statestats$REGION)),   varnames = c(EJAM::names_d, EJAM::names_d_subgroups_nh),   PCTILES = NULL,   dig = 4 )"},{"path":"/reference/statestats_queryd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"statestats_queryd - convenient way to see mean, pctiles of DEMOG indicators from lookup table — statestats_queryd","text":"ST vector state abbreviations, USA varnames names columns lookup table, like \"proximity.rmp\" PCTILES vector percentiles 0-100 /\"mean\" dig digits round ","code":""},{"path":"/reference/statestats_queryd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"statestats_queryd - convenient way to see mean, pctiles of DEMOG indicators from lookup table — statestats_queryd","text":"","code":"if (FALSE) {  usastats_querye()  #  data.frame where names_e are the names(),  #  means plus other percentiles, and there are other cols REGION PCTILE  avg.in.us                # This is a data.frame, 1 row, where colnames are indicators avg.in.us[names_e]          # subset is a data.frame! unlist(avg.in.us[names_e])  # to make it a vector  usastats_means()        # This is a matrix, with 1 col, and indicator names are rownames usastats_means(names_e)     # subset is a matrix        and indicator names are rownames usastats_means()[names_e, ] # subset is a named vector  and indicator names are  names  usastats_means() statestats_query()  statestats_query()[,names_d] statestats_query(varnames = names_d)  statestats_query()[,names_e] statestats_query(varnames = names_e)  statestats_query(varnames = names_d_subgroups) head(statestats_query(varnames = longlist))  ## in USA overall, see mean and key percentiles # for all demog and envt indicators usastats_query() # or statestats_query('us')  # can say us or US or USA or usa etc. usastats_query(PCTILES = 'mean') usastats_means() # same but nicer looking format in console usastats_means(dig=4)  # long list of variables: x = intersect(EJAM::names_all_r,  names(EJAM::usastats)) usastats_means(x)  usastats[!(usastats$PCTILE < 50), c(\"PCTILE\", names_d)] usastats[!(usastats$PCTILE < 50), c(\"PCTILE\", names_e)]  ## in 1 state, see mean and key percentiles for all demog and envt indicators statestats_query('MD')  ## in 1 state, see mean and key percentiles for just demog indicators statestats_queryd('MD')  ## 1 indicator in 1 state, see a few key percentiles and mean statestats_query('MD','proximity.tsdf')  ## mean of 1 indicator for each state statestats_query(varnames = 'proximity.tsdf')  ## using full blockgroup dataset, not lookup tables of percentiles,  blockgroupstats[, lapply(.SD, function(x) mean(x, na.rm=T)),    .SDcols= c(names_d, names_e)]  ##   see all total counts (not just US means),  ##   demographics including subgroups,  ##   but not environmental indicators. t(round(ustotals2(bg = blockgroupstats),2))   #  ustotals2 is from EJAMbatch.summarizer package t(blockgroupstats[, lapply(.SD, function(x) mean(x, na.rm=T)),     .SDcols= c(names_e, names_d)])  }"},{"path":"/reference/statestats_querye.html","id":null,"dir":"Reference","previous_headings":"","what":"statestats_querye - convenient way to see mean, pctiles of ENVIRONMENTAL indicators from lookup table — statestats_querye","title":"statestats_querye - convenient way to see mean, pctiles of ENVIRONMENTAL indicators from lookup table — statestats_querye","text":"statestats_querye - convenient way see mean, pctiles ENVIRONMENTAL indicators lookup table","code":""},{"path":"/reference/statestats_querye.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"statestats_querye - convenient way to see mean, pctiles of ENVIRONMENTAL indicators from lookup table — statestats_querye","text":"","code":"statestats_querye(   ST = sort(unique(EJAM::statestats$REGION)),   varnames = EJAM::names_e,   PCTILES = NULL,   dig = 4 )"},{"path":"/reference/statestats_querye.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"statestats_querye - convenient way to see mean, pctiles of ENVIRONMENTAL indicators from lookup table — statestats_querye","text":"dig many digits round ","code":""},{"path":"/reference/statestats_querye.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"statestats_querye - convenient way to see mean, pctiles of ENVIRONMENTAL indicators from lookup table — statestats_querye","text":"","code":"if (FALSE) {  usastats_querye()  #  data.frame where names_e are the names(),  #  means plus other percentiles, and there are other cols REGION PCTILE  avg.in.us                # This is a data.frame, 1 row, where colnames are indicators avg.in.us[names_e]          # subset is a data.frame! unlist(avg.in.us[names_e])  # to make it a vector  usastats_means()        # This is a matrix, with 1 col, and indicator names are rownames usastats_means(names_e)     # subset is a matrix        and indicator names are rownames usastats_means()[names_e, ] # subset is a named vector  and indicator names are  names  usastats_means() statestats_query()  statestats_query()[,names_d] statestats_query(varnames = names_d)  statestats_query()[,names_e] statestats_query(varnames = names_e)  statestats_query(varnames = names_d_subgroups) head(statestats_query(varnames = longlist))  ## in USA overall, see mean and key percentiles # for all demog and envt indicators usastats_query() # or statestats_query('us')  # can say us or US or USA or usa etc. usastats_query(PCTILES = 'mean') usastats_means() # same but nicer looking format in console usastats_means(dig=4)  # long list of variables: x = intersect(EJAM::names_all_r,  names(EJAM::usastats)) usastats_means(x)  usastats[!(usastats$PCTILE < 50), c(\"PCTILE\", names_d)] usastats[!(usastats$PCTILE < 50), c(\"PCTILE\", names_e)]  ## in 1 state, see mean and key percentiles for all demog and envt indicators statestats_query('MD')  ## in 1 state, see mean and key percentiles for just demog indicators statestats_queryd('MD')  ## 1 indicator in 1 state, see a few key percentiles and mean statestats_query('MD','proximity.tsdf')  ## mean of 1 indicator for each state statestats_query(varnames = 'proximity.tsdf')  ## using full blockgroup dataset, not lookup tables of percentiles,  blockgroupstats[, lapply(.SD, function(x) mean(x, na.rm=T)),    .SDcols= c(names_d, names_e)]  ##   see all total counts (not just US means),  ##   demographics including subgroups,  ##   but not environmental indicators. t(round(ustotals2(bg = blockgroupstats),2))   #  ustotals2 is from EJAMbatch.summarizer package t(blockgroupstats[, lapply(.SD, function(x) mean(x, na.rm=T)),     .SDcols= c(names_e, names_d)])  }"},{"path":"/reference/states_as_sites.html","id":null,"dir":"Reference","previous_headings":"","what":"FIPS - Analyze US States as if they were sites, to get EJ indicators summary — states_as_sites","title":"FIPS - Analyze US States as if they were sites, to get EJ indicators summary — states_as_sites","text":"FIPS - Analyze US States sites, get EJ indicators summary","code":""},{"path":"/reference/states_as_sites.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FIPS - Analyze US States as if they were sites, to get EJ indicators summary — states_as_sites","text":"","code":"states_as_sites(fips)"},{"path":"/reference/states_as_sites.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FIPS - Analyze US States as if they were sites, to get EJ indicators summary — states_as_sites","text":"fips State FIPS vector, like c(\"01\", \"02\") fips_state_from_state_abbrev(c(\"DE\", \"RI\"))","code":""},{"path":"/reference/states_as_sites.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FIPS - Analyze US States as if they were sites, to get EJ indicators summary — states_as_sites","text":"provides table similar output getblocksnearby(), data.table one row per blockgroup states, pairs states fips - bgid, ejam_uniq_id (1 N) assigned state missing blockid distance ready doaggregate().","code":""},{"path":"/reference/states_as_sites.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"FIPS - Analyze US States as if they were sites, to get EJ indicators summary — states_as_sites","text":"function provides one row per blockgroup. getblocksnearby_from_fips() provides one row per block. See \"Value\"","code":""},{"path":"/reference/states_as_sites.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FIPS - Analyze US States as if they were sites, to get EJ indicators summary — states_as_sites","text":"","code":"s2b <- states_as_sites(fips_state_from_state_abbrev(c(\"DE\", \"RI\")))"},{"path":"/reference/states_infer.html","id":null,"dir":"Reference","previous_headings":"","what":"states_infer - Get table of info on States (from latlon or FIPS) — states_infer","title":"states_infer - Get table of info on States (from latlon or FIPS) — states_infer","text":"Get cleaned table US State etc. ejam_uniq_id, lat/lon, FIPS","code":""},{"path":"/reference/states_infer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"states_infer - Get table of info on States (from latlon or FIPS) — states_infer","text":"","code":"states_infer(x)"},{"path":"/reference/states_infer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"states_infer - Get table of info on States (from latlon or FIPS) — states_infer","text":"x data.frame data.table either ST column lat lon columns, FIPS, optionally column like  id n","code":""},{"path":"/reference/states_infer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"states_infer - Get table of info on States (from latlon or FIPS) — states_infer","text":"data.frame unique id, ST, etc.","code":""},{"path":[]},{"path":"/reference/states_shapefile.html","id":null,"dir":"Reference","previous_headings":"","what":"states_shapefile (DATA) US States boundaries 2020 shapefile from TIGER — states_shapefile","title":"states_shapefile (DATA) US States boundaries 2020 shapefile from TIGER — states_shapefile","text":"used figure state contains point (facility/site).","code":""},{"path":"/reference/states_shapefile.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"states_shapefile (DATA) US States boundaries 2020 shapefile from TIGER — states_shapefile","text":"used state_from_latlon() find state associated point user wants analyze. needed report indicators form State-specific percentiles (e.g., score 80th percentile within Texas). created package via script EJAM/data-raw/datacreate_states_shapefile.R downloads data Census Bureau.","code":""},{"path":[]},{"path":"/reference/state_from_blockid.html","id":null,"dir":"Reference","previous_headings":"","what":"given vector of blockids, get state abbreviation of each — state_from_blockid","title":"given vector of blockids, get state abbreviation of each — state_from_blockid","text":"given vector blockids, get state abbreviation ","code":""},{"path":"/reference/state_from_blockid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"given vector of blockids, get state abbreviation of each — state_from_blockid","text":"","code":"state_from_blockid(blockid)"},{"path":"/reference/state_from_blockid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"given vector of blockids, get state abbreviation of each — state_from_blockid","text":"blockid vector blockid values EJAM table called blockpoints","code":""},{"path":"/reference/state_from_blockid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"given vector of blockids, get state abbreviation of each — state_from_blockid","text":"vector ST info like AK, CA, DE, etc.","code":""},{"path":"/reference/state_from_blockid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"given vector of blockids, get state abbreviation of each — state_from_blockid","text":"","code":"state_from_blockid(c(8174952, blockpoints$blockid[5:6]))"},{"path":"/reference/state_from_blocktable.html","id":null,"dir":"Reference","previous_headings":"","what":"state_from_blocktable was used only in some special cases of using testpoints_n() — state_from_blocktable","title":"state_from_blocktable was used only in some special cases of using testpoints_n() — state_from_blocktable","text":"given data.table blockid column, get state abbreviation - used?","code":""},{"path":"/reference/state_from_blocktable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"state_from_blocktable was used only in some special cases of using testpoints_n() — state_from_blocktable","text":"","code":"state_from_blocktable(dt_with_blockid)"},{"path":"/reference/state_from_blocktable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"state_from_blocktable was used only in some special cases of using testpoints_n() — state_from_blocktable","text":"dt_with_blockid","code":""},{"path":"/reference/state_from_blocktable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"state_from_blocktable was used only in some special cases of using testpoints_n() — state_from_blocktable","text":"vector ST info like AK, CA, DE, etc.","code":""},{"path":"/reference/state_from_blocktable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"state_from_blocktable was used only in some special cases of using testpoints_n() — state_from_blocktable","text":"","code":"state_from_blocktable(blockpoints[45:49,])"},{"path":"/reference/state_from_fips.html","id":null,"dir":"Reference","previous_headings":"","what":"Get FIPS of ALL BLOCKGROUPS in the States or Counties — state_from_fips","title":"Get FIPS of ALL BLOCKGROUPS in the States or Counties — state_from_fips","text":"Get State abbreviations blockgroups within input FIPS","code":""},{"path":"/reference/state_from_fips.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get FIPS of ALL BLOCKGROUPS in the States or Counties — state_from_fips","text":"","code":"state_from_fips(fips, uniqueonly = FALSE)"},{"path":"/reference/state_from_fips.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get FIPS of ALL BLOCKGROUPS in the States or Counties — state_from_fips","text":"fips Census FIPS codes vector, numeric char, 2-digit, 5-digit, etc. OK uniqueonly set TRUE, returns unique results. parameter mostly remind user default uniques .","code":""},{"path":"/reference/state_from_fips.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get FIPS of ALL BLOCKGROUPS in the States or Counties — state_from_fips","text":"vector 2-character state abbreviations like CA,CA,CA,MD,MD,TX","code":""},{"path":"/reference/state_from_fips.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get FIPS of ALL BLOCKGROUPS in the States or Counties — state_from_fips","text":"Returns vector 2-letter State abbreviations one per blockgroup matches input FIPS, necessarily vector long input vector FIPS codes!, just short list unique states!","code":""},{"path":"/reference/state_from_latlon.html","id":null,"dir":"Reference","previous_headings":"","what":"Find what state is where each point is located — state_from_latlon","title":"Find what state is where each point is located — state_from_latlon","text":"Takes 3 seconds find state 1k points, faster alternative useful","code":""},{"path":"/reference/state_from_latlon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find what state is where each point is located — state_from_latlon","text":"","code":"state_from_latlon(lat, lon, states_shapefile = EJAM::states_shapefile)"},{"path":"/reference/state_from_latlon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find what state is where each point is located — state_from_latlon","text":"lat latitudes vector lon longitudes vector shapefile shapefile US States, package already","code":""},{"path":"/reference/state_from_latlon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find what state is where each point is located — state_from_latlon","text":"Returns data.frame: ST, statename, FIPS.ST, REGION, n many rows elements lat lon","code":""},{"path":[]},{"path":"/reference/state_from_latlon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find what state is where each point is located — state_from_latlon","text":"","code":"myprogram <- \"CAMDBS\" # 739 sites  pts <- frs_from_program(myprogram)[ , .(lat, lon, REGISTRY_ID,  PRIMARY_NAME)]  # add a column with State abbreviation  pts[, ST := state_from_latlon(lat=lat, lon = lon)$ST]  #map these points  mapfast(pts[ST == 'TX',], radius = 1) # 1 miles radius circles"},{"path":"/reference/structure.of.output.list.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility to print summary info about the output of ejamit() or doaggregate() — structure.of.output.list","title":"Utility to print summary info about the output of ejamit() or doaggregate() — structure.of.output.list","text":"Utility print summary info output ejamit() doaggregate()","code":""},{"path":"/reference/structure.of.output.list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility to print summary info about the output of ejamit() or doaggregate() — structure.of.output.list","text":"","code":"structure.of.output.list(x, maxshown = 10)"},{"path":"/reference/structure.of.output.list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility to print summary info about the output of ejamit() or doaggregate() — structure.of.output.list","text":"x output ejamit() doaggregate(), list objects holding results analysis maxshown shows first 10 elements list default","code":""},{"path":"/reference/structure.of.output.list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility to print summary info about the output of ejamit() or doaggregate() — structure.of.output.list","text":"data.frame summarizing names list, whether element data.table, data.frame, vector, rows/cols/length info","code":""},{"path":"/reference/structure.of.output.list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility to print summary info about the output of ejamit() or doaggregate() — structure.of.output.list","text":"","code":"structure.of.output.list(testpoints_10)   structure.of.output.list(testoutput_getblocksnearby_10pts_1miles)   structure.of.output.list(testoutput_doaggregate_10pts_1miles)   structure.of.output.list(testoutput_ejamit_10pts_1miles)   structure.of.output.list(testoutput_ejscreenapi_plus_5)   structure.of.output.list(testoutput_ejscreenit_5)"},{"path":"/reference/ST_by_site_from_sites2blocks.html","id":null,"dir":"Reference","previous_headings":"","what":"Get State that each site is in, from a table of ejam_uniq_id, blockid, distance — ST_by_site_from_sites2blocks","title":"Get State that each site is in, from a table of ejam_uniq_id, blockid, distance — ST_by_site_from_sites2blocks","text":"Find 2-character State abbreviation site. need know state site , able report state percentiles, original list ejam_uniq_id lat/lon State info. can infer State site located , based state nearest block (parent blockgroup).","code":""},{"path":"/reference/ST_by_site_from_sites2blocks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get State that each site is in, from a table of ejam_uniq_id, blockid, distance — ST_by_site_from_sites2blocks","text":"","code":"ST_by_site_from_sites2blocks(sites2blocks)"},{"path":"/reference/ST_by_site_from_sites2blocks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get State that each site is in, from a table of ejam_uniq_id, blockid, distance — ST_by_site_from_sites2blocks","text":"sites2blocks data.table data.frame, like testoutput_getblocksnearby_10pts_1miles, getblocksnearby() columns ejam_uniq_id blockid distance","code":""},{"path":"/reference/ST_by_site_from_sites2blocks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get State that each site is in, from a table of ejam_uniq_id, blockid, distance — ST_by_site_from_sites2blocks","text":"data.table columns  ejam_uniq_id, ST","code":""},{"path":"/reference/ST_by_site_from_sites2blocks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get State that each site is in, from a table of ejam_uniq_id, blockid, distance — ST_by_site_from_sites2blocks","text":"","code":"if (FALSE) {   fname = './inst/testdata/testpoints_207_sites_with_signif_violations_NAICS_326_ECHO.csv'   x = ST_by_site_from_sites2blocks(     getblocksnearby( latlon_from_anything(fname), quadtree = localtree))   y = read_csv_or_xl(fname)   x$ST == y$FacState   }   ST_by_site_from_sites2blocks(testoutput_getblocksnearby_10pts_1miles)"},{"path":"/reference/table4gt_from_scorevectors.html","id":null,"dir":"Reference","previous_headings":"","what":"DRAFT EXPERIMENTAL - attempt to make table more flexible / any indicators — table4gt_from_scorevectors","title":"DRAFT EXPERIMENTAL - attempt to make table more flexible / any indicators — table4gt_from_scorevectors","text":"Based just indicator names value , tries fill rest summary table's data. formats data.frame ready next step","code":""},{"path":"/reference/table4gt_from_scorevectors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DRAFT EXPERIMENTAL - attempt to make table more flexible / any indicators — table4gt_from_scorevectors","text":"","code":"table4gt_from_scorevectors(   varnames_r = names_e,   varnames_shown = fixcolnames(varnames_r, \"r\", \"long\"),   value = as.vector(usastats_means(varnames_r)),   state_avg = NULL,   state_pctile = NULL,   usa_avg = NULL,   usa_pctile = NULL,   state_ratio = NULL,   usa_ratio = NULL,   ST = \"NY\" )"},{"path":"/reference/table4gt_from_scorevectors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DRAFT EXPERIMENTAL - attempt to make table more flexible / any indicators — table4gt_from_scorevectors","text":"varnames_r vector variable names like names_d varnames_shown vector like names_d_friendly value indicator values place overall state_avg indicator values average State state_pctile indicator values State percentiles usa_avg indicator values US average usa_pctile indicator values US percentiles state_ratio indicator values ratio State average usa_ratio indicator values ratio US average","code":""},{"path":"/reference/table4gt_from_scorevectors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DRAFT EXPERIMENTAL - attempt to make table more flexible / any indicators — table4gt_from_scorevectors","text":"data.frame ready table_gt_format_step2 ???","code":""},{"path":[]},{"path":"/reference/tablefixed.html","id":null,"dir":"Reference","previous_headings":"","what":"Table of counts of integer values zero through maxbin — tablefixed","title":"Table of counts of integer values zero through maxbin — tablefixed","text":"Like tabulate table, sort , includes zero unlike tabulate, lets ensure results include every integer 0 maxbin, can, example, easily combine tables counts include integers.","code":""},{"path":"/reference/tablefixed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Table of counts of integer values zero through maxbin — tablefixed","text":"","code":"tablefixed(x, maxbin = NULL)"},{"path":"/reference/tablefixed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Table of counts of integer values zero through maxbin — tablefixed","text":"x vector integers, like counts, can include 0 maxbin highest integer among x, number bins","code":""},{"path":"/reference/tablefixed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Table of counts of integer values zero through maxbin — tablefixed","text":"summary table","code":""},{"path":"/reference/tablefixed.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Table of counts of integer values zero through maxbin — tablefixed","text":"likely efficient way existing package, useful fast enough. using dataset like EJScreen 13 indicators interest, counting many 13 various cutpoints, may zero rows exactly 8 cutoff, example. function makes easier combine tables summary 0-13 table table() return integers came given case (one cutoff).","code":""},{"path":[]},{"path":"/reference/table_gt_format_step1.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate and reshape 1 row of ejamit results to prep for formatting as gt table/report — table_gt_format_step1","title":"Validate and reshape 1 row of ejamit results to prep for formatting as gt table/report — table_gt_format_step1","text":"Reshapes columns 1 row data.table tall multirow data.frame.","code":""},{"path":"/reference/table_gt_format_step1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate and reshape 1 row of ejamit results to prep for formatting as gt table/report — table_gt_format_step1","text":"","code":"table_gt_format_step1(ejamit_results_1row = NULL, type = \"demog\")"},{"path":"/reference/table_gt_format_step1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate and reshape 1 row of ejamit results to prep for formatting as gt table/report — table_gt_format_step1","text":"ejamit_results_1row data.table (data.frame) like testoutput_ejamit_100pts_1miles$results_overall something like ejamit(testpoints_100, radius = 1)$results_overall type demog envt specify type table","code":""},{"path":[]},{"path":"/reference/table_gt_format_step2.html","id":null,"dir":"Reference","previous_headings":"","what":"Format a table of demog or envt scores, percentiles, etc. to look similar to EJScreen report tables — table_gt_format_step2","title":"Format a table of demog or envt scores, percentiles, etc. to look similar to EJScreen report tables — table_gt_format_step2","text":"Format table demog envt scores, percentiles, etc. look similar EJScreen report tables","code":""},{"path":"/reference/table_gt_format_step2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format a table of demog or envt scores, percentiles, etc. to look similar to EJScreen report tables — table_gt_format_step2","text":"","code":"table_gt_format_step2(   df,   type = c(\"demog\", \"envt\")[1],   my_cell_color = \"#dce6f0\",   my_border_color = \"#aaaaaa\",   digits_default = 2 )"},{"path":"/reference/table_gt_format_step2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format a table of demog or envt scores, percentiles, etc. to look similar to EJScreen report tables — table_gt_format_step2","text":"df data frame table_gt_format_step1 just specific format key EJAM results. columns (still works first two omitted user-provided indicators used - just names indicator 1, indicator 2, etc.): varnames_r, varnames_shown, value, state_avg, state_pctile, usa_avg, usa_pctile one row per indicator, varnames_shown longer indicator names use report. sort order df ignored!  Instead, variables shown order shown EJScreen reports, recorded map_headernames checked via varinfo(varnames_r, \"reportsort\"), etc. Uses gt R package formatting. type string - must demog envt my_cell_color color table cell fill backgrounds,  can given string ('blue') hex code ('#0070c0') my_border_color color table borders boundaries, can given string ('blue') hex code ('#0070c0') digits_default number digits round specified given indicator (rounding info drawn map_headernames$decimals)","code":""},{"path":"/reference/table_gt_format_step2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format a table of demog or envt scores, percentiles, etc. to look similar to EJScreen report tables — table_gt_format_step2","text":"gt-style table formatting closely match EJScreen standard report formatting","code":""},{"path":[]},{"path":"/reference/table_gt_from_ejamit.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a gt-format table of results from EJAM — table_gt_from_ejamit","title":"Create a gt-format table of results from EJAM — table_gt_from_ejamit","text":"Uses list results ejamit()","code":""},{"path":"/reference/table_gt_from_ejamit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a gt-format table of results from EJAM — table_gt_from_ejamit","text":"","code":"table_gt_from_ejamit(ejamitoutput = NULL, type = c(\"demog\", \"envt\")[1])"},{"path":"/reference/table_gt_from_ejamit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a gt-format table of results from EJAM — table_gt_from_ejamit","text":"ejamitoutput list EJAM results formatted testoutput_ejamit_100pts_1miles, output ejamit() type Must \"demog\" \"envt\" -- Creates one time","code":""},{"path":"/reference/table_gt_from_ejamit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a gt-format table of results from EJAM — table_gt_from_ejamit","text":"Provides table gt format R package called gt","code":""},{"path":"/reference/table_gt_from_ejamit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a gt-format table of results from EJAM — table_gt_from_ejamit","text":"See R package called gt. Also see code creates html tables html template code creates formatted spreadsheets like table_xls_format()","code":""},{"path":"/reference/table_gt_from_ejamit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a gt-format table of results from EJAM — table_gt_from_ejamit","text":"","code":"table_gt_from_ejamit(testoutput_ejamit_100pts_1miles)"},{"path":"/reference/table_gt_from_ejamit_1site.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a formatted table of results for 1 site from EJAM — table_gt_from_ejamit_1site","title":"Create a formatted table of results for 1 site from EJAM — table_gt_from_ejamit_1site","text":"Uses 1 row results_bysite part ejamit() output","code":""},{"path":"/reference/table_gt_from_ejamit_1site.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a formatted table of results for 1 site from EJAM — table_gt_from_ejamit_1site","text":"","code":"table_gt_from_ejamit_1site(...)"},{"path":"/reference/table_gt_from_ejamit_1site.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a formatted table of results for 1 site from EJAM — table_gt_from_ejamit_1site","text":"... passed table_gt_from_ejamit_overall()","code":""},{"path":"/reference/table_gt_from_ejamit_1site.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a formatted table of results for 1 site from EJAM — table_gt_from_ejamit_1site","text":"","code":"table_gt_from_ejamit_1site(testoutput_ejamit_100pts_1miles$results_bysite[ 1, ])"},{"path":"/reference/table_gt_from_ejamit_overall.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a formatted table of results from EJAM overall summary stats — table_gt_from_ejamit_overall","title":"Create a formatted table of results from EJAM overall summary stats — table_gt_from_ejamit_overall","text":"Uses results_overall element ejamit() output","code":""},{"path":"/reference/table_gt_from_ejamit_overall.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a formatted table of results from EJAM overall summary stats — table_gt_from_ejamit_overall","text":"","code":"table_gt_from_ejamit_overall(   ejamit_results_1row = NULL,   type = c(\"demog\", \"envt\")[1] )"},{"path":"/reference/table_gt_from_ejamit_overall.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a formatted table of results from EJAM overall summary stats — table_gt_from_ejamit_overall","text":"ejamit_results_1row 1-row data.table like testoutput_ejamit_100pts_1miles$results_overall, come ejamit(testpoints_10)$results_overall type Must \"demog\" \"envt\" -- Creates one time","code":""},{"path":"/reference/table_gt_from_ejamit_overall.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a formatted table of results from EJAM overall summary stats — table_gt_from_ejamit_overall","text":"Provides table gt format R package called gt","code":""},{"path":"/reference/table_gt_from_ejamit_overall.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a formatted table of results from EJAM overall summary stats — table_gt_from_ejamit_overall","text":"","code":"x <- table_gt_from_ejamit_overall(testoutput_ejamit_100pts_1miles$results_overall)"},{"path":"/reference/table_order_variables.html","id":null,"dir":"Reference","previous_headings":"","what":"Get order of variable names to sort by, as seen in EJScreen Community Report — table_order_variables","title":"Get order of variable names to sort by, as seen in EJScreen Community Report — table_order_variables","text":"Get order variable names sort , seen EJScreen Community Report","code":""},{"path":"/reference/table_order_variables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get order of variable names to sort by, as seen in EJScreen Community Report — table_order_variables","text":"","code":"table_order_variables(   varnames,   s1 = \"ejscreensort\",   s2 = \"sortvarlistEJSCREENREPORT\",   s3 = \"sort_within_varlistEJSCREENREPORT\" )"},{"path":"/reference/table_order_variables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get order of variable names to sort by, as seen in EJScreen Community Report — table_order_variables","text":"varnames vector indicator variables names blockgroupstats, bgej, etc., \"pm\", \"pctlowinc\", \"pctile.EJ.DISPARITY.traffic.score.eo\" etc. others found names_all_r, specific subsets like c(names_d, names_d_subgroups, names_e) c(names_ej_pctile, names_ej_state_pctile, names_ej_supp_pctile, names_ej_supp_state_pctile) s1 name column map_headernames get sort info s2 optional like s1 secondary s1 s3 optional tertiary","code":""},{"path":"/reference/table_order_variables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get order of variable names to sort by, as seen in EJScreen Community Report — table_order_variables","text":"vector order(), used sorting data.frame example","code":""},{"path":"/reference/table_order_variables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get order of variable names to sort by, as seen in EJScreen Community Report — table_order_variables","text":"","code":"cbind(table_order_variables(c(names_d, names_d_subgroups, names_e)))      out <- testoutput_ejamit_10pts_1miles   vars <- out$formatted[ , 'indicator']   vars <- fixcolnames(vars, 'long', 'r')   out$formatted[table_order_variables(vars), ]"},{"path":"/reference/table_ratios_from_ejamit.html","id":null,"dir":"Reference","previous_headings":"","what":"DRAFT - uick view of summary stats by type of stat, but lacks rounding specific to each type, etc. — table_ratios_from_ejamit","title":"DRAFT - uick view of summary stats by type of stat, but lacks rounding specific to each type, etc. — table_ratios_from_ejamit","text":"DRAFT - uick view summary stats type stat, lacks rounding specific type, etc.","code":""},{"path":"/reference/table_ratios_from_ejamit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DRAFT - uick view of summary stats by type of stat, but lacks rounding specific to each type, etc. — table_ratios_from_ejamit","text":"","code":"table_ratios_from_ejamit(   ejamitout,   vartypes = c(\"ratio\", \"pctile\", \"pct\", \"all\")[1],   stats = c(\"Average site\", \"Average person\", \"Median site\", \"Median person\", \"Min\",     \"Max\"),   decimals = 1 )"},{"path":"/reference/table_ratios_from_ejamit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DRAFT - uick view of summary stats by type of stat, but lacks rounding specific to each type, etc. — table_ratios_from_ejamit","text":"ejamitout na vartypes na stats na decimals na","code":""},{"path":"/reference/table_ratios_from_ejamit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DRAFT - uick view of summary stats by type of stat, but lacks rounding specific to each type, etc. — table_ratios_from_ejamit","text":"na","code":""},{"path":"/reference/table_round.html","id":null,"dir":"Reference","previous_headings":"","what":"Round numbers in a table, each column to appropriate number of decimal places — table_round","title":"Round numbers in a table, each column to appropriate number of decimal places — table_round","text":"Round numbers table, column appropriate number decimal places","code":""},{"path":"/reference/table_round.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Round numbers in a table, each column to appropriate number of decimal places — table_round","text":"","code":"table_round(x, var = names(x), varnametype = \"rname\", ...)"},{"path":"/reference/table_round.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Round numbers in a table, each column to appropriate number of decimal places — table_round","text":"x data.frame, data.table, vector least numerical columns, like results ejamit()$results_bysite var optional, assumed names(x) default, specifies colnames table names vector elements, within x varnametype optional, name column map_headernames looked var ... passed var_is_numeric_ish()","code":""},{"path":"/reference/table_round.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Round numbers in a table, each column to appropriate number of decimal places — table_round","text":"Returns original x appropriate cells rounded .","code":""},{"path":[]},{"path":"/reference/table_round.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Round numbers in a table, each column to appropriate number of decimal places — table_round","text":"","code":"table_round(c(12.123456, 9, NA ), 'pm')   x <- testoutput_ejamit_10pts_1miles$results_bysite[    1:2, c('lat','lon', 'pop', names_these, names_ratio_to_avg_these, names_e_pctile),     with = FALSE  ]   table_rounding_info(names(x))   table_round(x)"},{"path":"/reference/table_rounding_info.html","id":null,"dir":"Reference","previous_headings":"","what":"How many decimal places to round to for given variable(s) — table_rounding_info","title":"How many decimal places to round to for given variable(s) — table_rounding_info","text":"many decimal places round given variable(s)","code":""},{"path":"/reference/table_rounding_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"How many decimal places to round to for given variable(s) — table_rounding_info","text":"","code":"table_rounding_info(var, varnametype = \"rname\")"},{"path":"/reference/table_rounding_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"How many decimal places to round to for given variable(s) — table_rounding_info","text":"var vector variable names c(\"pctlowinc\", \"cancer\") c(names_d, names_d_subgroups) varnametype column map_headernames use looking var, like \"rname\" \"api\" \"long\"","code":""},{"path":"/reference/table_rounding_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"How many decimal places to round to for given variable(s) — table_rounding_info","text":"named vector size var, var names.","code":""},{"path":[]},{"path":"/reference/table_rounding_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"How many decimal places to round to for given variable(s) — table_rounding_info","text":"","code":"table_rounding_info(\"pm\")   table_round(8.252345, \"pm\")   table_round(8, \"pm\")      cbind(table_rounding_info(names_all_r), fixcolnames(names_all_r, \"r\", \"long\"))"},{"path":"/reference/table_tall_from_overall.html","id":null,"dir":"Reference","previous_headings":"","what":"Format the results_overall part of the output of ejamit() or doaggregate() — table_tall_from_overall","title":"Format the results_overall part of the output of ejamit() or doaggregate() — table_tall_from_overall","text":"Take quick look results RStudio console","code":""},{"path":"/reference/table_tall_from_overall.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format the results_overall part of the output of ejamit() or doaggregate() — table_tall_from_overall","text":"","code":"table_tall_from_overall(results_overall, longnames)"},{"path":"/reference/table_tall_from_overall.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format the results_overall part of the output of ejamit() or doaggregate() — table_tall_from_overall","text":"results_overall data.table 1 row, output ejamit() doaggregate() longnames vector names variables results_overall, output ejamit() doaggregate()","code":""},{"path":"/reference/table_tall_from_overall.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format the results_overall part of the output of ejamit() or doaggregate() — table_tall_from_overall","text":"data.table one row per indicator","code":""},{"path":"/reference/table_tall_from_overall.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format the results_overall part of the output of ejamit() or doaggregate() — table_tall_from_overall","text":"","code":"table_tall_from_overall(testoutput_ejamit_10pts_1miles$results_overall)  table_tall_from_overall(x$results_bysite[1, ])"},{"path":"/reference/table_validated_ejamit_row.html","id":null,"dir":"Reference","previous_headings":"","what":"Cleans/validates EJAM results for 1 place or overall — table_validated_ejamit_row","title":"Cleans/validates EJAM results for 1 place or overall — table_validated_ejamit_row","text":"first step formatting results nice tables","code":""},{"path":"/reference/table_validated_ejamit_row.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cleans/validates EJAM results for 1 place or overall — table_validated_ejamit_row","text":"","code":"table_validated_ejamit_row(ejamit_results_1row = NULL)"},{"path":"/reference/table_validated_ejamit_row.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cleans/validates EJAM results for 1 place or overall — table_validated_ejamit_row","text":"ejamit_results_1row 1-row data.table like testoutput_ejamit_100pts_1miles$results_overall, come ejamit(testpoints_10)$results_overall single row testoutput_ejamit_100pts_1miles$results_bysite","code":""},{"path":"/reference/table_validated_ejamit_row.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cleans/validates EJAM results for 1 place or overall — table_validated_ejamit_row","text":"Returns input 1-row data.table, indicators etc. columns. 1 row table, colnames expected, returns correct structure filled NA values.","code":""},{"path":"/reference/table_validated_ejamit_row.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cleans/validates EJAM results for 1 place or overall — table_validated_ejamit_row","text":"","code":"x <- table_validated_ejamit_row(testoutput_ejamit_100pts_1miles$results_bysite[ 1, ])   x <- table_validated_ejamit_row(testoutput_ejamit_100pts_1miles$results_overall)"},{"path":"/reference/table_xls_format.html","id":null,"dir":"Reference","previous_headings":"","what":"Format EJAM tabular outputs for saving as Excel spreadsheet — table_xls_format","title":"Format EJAM tabular outputs for saving as Excel spreadsheet — table_xls_format","text":"Used table_xls_from_ejam()","code":""},{"path":"/reference/table_xls_format.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format EJAM tabular outputs for saving as Excel spreadsheet — table_xls_format","text":"","code":"table_xls_format(   overall,   eachsite,   longnames = NULL,   formatted = NULL,   bybg = NULL,   plot_distance_by_group = FALSE,   summary_plot = NULL,   plotlatest = FALSE,   plotfilename = NULL,   mapadd = FALSE,   report_map = NULL,   ok2plot = TRUE,   analysis_title = \"EJAM analysis\",   buffer_desc = \"Selected Locations\",   radius_or_buffer_in_miles = NULL,   radius_or_buffer_description =     \"Miles radius of circular buffer (or distance used if buffering around polygons)\",   notes = NULL,   heatmap_colnames = NULL,   heatmap_cuts = c(80, 90, 95),   heatmap_colors = c(\"yellow\", \"orange\", \"red\"),   heatmap2_colnames = NULL,   heatmap2_cuts = c(1.009, 2, 3),   heatmap2_colors = c(\"yellow\", \"orange\", \"red\"),   hyperlink_colnames = c(\"EJScreen Report\", \"EJScreen Map\", \"ECHO report\"),   graycolnames = NULL,   narrowcolnames = NULL,   graycolor = \"gray\",   narrow6 = 6,   testing = FALSE,   launchexcel = FALSE,   saveas = NULL,   ... )"},{"path":"/reference/table_xls_format.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format EJAM tabular outputs for saving as Excel spreadsheet — table_xls_format","text":"overall table save one tab, ejamit()$overall, EJAM analysis indicators overall (one row), entire output ejamit() passed overall, function figures eachsite, etc. eachsite table save one tab, ejamit()$overall, EJAM analysis site site (one row per site) longnames vector indicator names display Excel table formatted optional table save one tab, ejamit()$overall, EJAM analysis overall different format bybg Optional large table details block group needed analyze distances group. plot_distance_by_group logical, whether try add plot mean distance group. requires bybg provided parameter input function. summary_plot optional plot object passed EJAM shiny app save 'Plot' sheet Excel table plotlatest optional logical. TRUE, recently displayed plot (prior function called) inserted tab called plot2 plotfilename full path including name .png file insert mapadd logical optional - try include map points report_map leaflet map object passed Shiny app display 'Map' sheet ok2plot can set FALSE prevent plots attempted, debugging analysis_title optional title passed Shiny app 'Notes' sheet buffer_desc optional description buffer used analysis, passed 'Notes' sheet radius_or_buffer_description optional text saying distance radius polygon buffer, passed 'Notes' sheet notes Text additional notes put notes tab, optional vector character elements pasted one line . heatmap_colnames optional vector colnames apply heatmap colors heatmap_cuts vector values separate heatmap colors, 0-100 heatmap_colors vector color names heatmap bins, length heatmap_cuts, first color >= 1st cutpoint, <2d, second color >=2d cutpoint <3d, etc. hyperlink_colnames names treat URLs hyperlinks graycolnames columns deemphasize narrowcolnames column numbers make narrow graycolor color used deemphasize columns narrow6 narrow testing optional testing launchexcel Set TRUE function launch Excel immediately, showing final workbook created . saveas NULL, valid path filename.xlsx provided, workbook saved locally path name. Warning: overwrite existing file. ... params passed along openxlsx::writeData() radius_miles provided, miles buffer distance (polygon point circular buffers)","code":""},{"path":"/reference/table_xls_format.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format EJAM tabular outputs for saving as Excel spreadsheet — table_xls_format","text":"workbook, ready saved spreadsheet format, tabs like \"Overall\" \"Site\"","code":""},{"path":"/reference/table_xls_format.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Format EJAM tabular outputs for saving as Excel spreadsheet — table_xls_format","text":"Already took put code table_xls_format() table_xls_format_api()","code":""},{"path":[]},{"path":"/reference/table_xls_format.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format EJAM tabular outputs for saving as Excel spreadsheet — table_xls_format","text":"","code":"if (FALSE) {   table_xls_format(     testoutput_ejamit_100pts_1miles$results_overall,      testoutput_ejamit_100pts_1miles$results_bysite,     saveas =  \"out1.xlsx\")  # can just pass the whole results of ejamit(), for convenience  wb <- table_xls_format(testoutput_ejamit_100pts_1miles)  openxlsx::saveWorkbook(wb, file = \"out2.xlsx\") }"},{"path":"/reference/table_xls_from_ejam.html","id":null,"dir":"Reference","previous_headings":"","what":"Format the results of ejamit() for excel and optionally save .xlsx file — table_xls_from_ejam","title":"Format the results of ejamit() for excel and optionally save .xlsx file — table_xls_from_ejam","text":"Uses table_xls_format() format save results","code":""},{"path":"/reference/table_xls_from_ejam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format the results of ejamit() for excel and optionally save .xlsx file — table_xls_from_ejam","text":"","code":"table_xls_from_ejam(   ejamitout,   fname = NULL,   save_now = TRUE,   overwrite = TRUE,   launchexcel = FALSE,   interactive_console = TRUE,   ok2plot = TRUE,   in.testing = FALSE,   in.analysis_title = \"EJAM analysis\",   react.v1_summary_plot = NULL,   radius_or_buffer_in_miles = NULL,   buffer_desc = \"Selected Locations\",   radius_or_buffer_description =     \"Miles radius of circular buffer (or distance used if buffering around polygons)\",   hyperlink_colnames = c(\"EJScreen Report\", \"EJScreen Map\", \"ECHO report\"),   ... )"},{"path":"/reference/table_xls_from_ejam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format the results of ejamit() for excel and optionally save .xlsx file — table_xls_from_ejam","text":"ejamitout output ejamit() fname optional name full path name file save locally, like \".xlsx\" save_now optional logical, whether save .xlsx file locally just return workbook object can later written .xlsx file using openxlsx::saveWorkbook() overwrite optional logical, passed openxlsx::saveWorkbook() launchexcel optional logical, passed table_xls_format(), whether launch browser see spreadsheet immediately interactive_console optional - set FALSE used code server. TRUE, prompts RStudio user interactively asking save downloaded file ok2plot optional logical, passed  table_xls_format(), whether safe try plot set FALSE debugging plot problems .testing optional logical .analysis_title optional title character string react.v1_summary_plot optional - plot object radius_or_buffer_in_miles optional radius miles radius_or_buffer_description optional text phrase describing places analyzed hyperlink_colnames optional names columns URLs ... optional additional parameters passed table_xls_format(), heatmap_colnames, heatmap_cuts, heatmap_colors, etc.","code":""},{"path":"/reference/table_xls_from_ejam.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format the results of ejamit() for excel and optionally save .xlsx file — table_xls_from_ejam","text":"returns workbook object use openxlsx::saveWorkbook(wb_out, pathname) returns just full path/file name saved save_now = TRUE","code":""},{"path":[]},{"path":"/reference/testoutput_doaggregate_1000pts_1miles.html","id":null,"dir":"Reference","previous_headings":"","what":"test output of doaggregate() — testoutput_doaggregate_1000pts_1miles","title":"test output of doaggregate() — testoutput_doaggregate_1000pts_1miles","text":"test output doaggregate()","code":""},{"path":"/reference/testoutput_doaggregate_1000pts_1miles.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"test output of doaggregate() — testoutput_doaggregate_1000pts_1miles","text":"output doaggregate(testoutput_getblocksnearby_1000pts_1miles, sites2states_or_latlon = testpoints_1000, radius = 1, include_ejindexes = TRUE)","code":""},{"path":[]},{"path":"/reference/testoutput_doaggregate_100pts_1miles.html","id":null,"dir":"Reference","previous_headings":"","what":"test output of doaggregate() — testoutput_doaggregate_100pts_1miles","title":"test output of doaggregate() — testoutput_doaggregate_100pts_1miles","text":"test output doaggregate()","code":""},{"path":"/reference/testoutput_doaggregate_100pts_1miles.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"test output of doaggregate() — testoutput_doaggregate_100pts_1miles","text":"output doaggregate(testoutput_getblocksnearby_100pts_1miles, sites2states_or_latlon = testpoints_100, radius = 1, include_ejindexes = TRUE)","code":""},{"path":[]},{"path":"/reference/testoutput_doaggregate_10pts_1miles.html","id":null,"dir":"Reference","previous_headings":"","what":"test output of doaggregate() — testoutput_doaggregate_10pts_1miles","title":"test output of doaggregate() — testoutput_doaggregate_10pts_1miles","text":"test output doaggregate()","code":""},{"path":"/reference/testoutput_doaggregate_10pts_1miles.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"test output of doaggregate() — testoutput_doaggregate_10pts_1miles","text":"output doaggregate(testoutput_getblocksnearby_10pts_1miles, sites2states_or_latlon = testpoints_10, radius = 1, include_ejindexes = TRUE)","code":""},{"path":[]},{"path":"/reference/testoutput_ejamit_1000pts_1miles.html","id":null,"dir":"Reference","previous_headings":"","what":"test output of ejamit() — testoutput_ejamit_1000pts_1miles","title":"test output of ejamit() — testoutput_ejamit_1000pts_1miles","text":"test output ejamit()","code":""},{"path":"/reference/testoutput_ejamit_1000pts_1miles.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"test output of ejamit() — testoutput_ejamit_1000pts_1miles","text":"output ejamit(testpoints_1000, radius = 1, include_ejindexes = TRUE)","code":""},{"path":[]},{"path":"/reference/testoutput_ejamit_100pts_1miles.html","id":null,"dir":"Reference","previous_headings":"","what":"test output of ejamit() — testoutput_ejamit_100pts_1miles","title":"test output of ejamit() — testoutput_ejamit_100pts_1miles","text":"test output ejamit()","code":""},{"path":"/reference/testoutput_ejamit_100pts_1miles.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"test output of ejamit() — testoutput_ejamit_100pts_1miles","text":"output ejamit(testpoints_100, radius = 1, include_ejindexes = TRUE)","code":""},{"path":[]},{"path":"/reference/testoutput_ejamit_10pts_1miles.html","id":null,"dir":"Reference","previous_headings":"","what":"test output of ejamit() — testoutput_ejamit_10pts_1miles","title":"test output of ejamit() — testoutput_ejamit_10pts_1miles","text":"test output ejamit()","code":""},{"path":"/reference/testoutput_ejamit_10pts_1miles.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"test output of ejamit() — testoutput_ejamit_10pts_1miles","text":"output ejamit(testpoints_10, radius = 1, include_ejindexes = TRUE)","code":""},{"path":[]},{"path":"/reference/testoutput_ejscreenit_10pts_1miles.html","id":null,"dir":"Reference","previous_headings":"","what":"test output of ejscreenit(), using the EJScreen API — testoutput_ejscreenit_10pts_1miles","title":"test output of ejscreenit(), using the EJScreen API — testoutput_ejscreenit_10pts_1miles","text":"test output ejscreenit(), using EJScreen API","code":""},{"path":"/reference/testoutput_ejscreenit_10pts_1miles.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"test output of ejscreenit(), using the EJScreen API — testoutput_ejscreenit_10pts_1miles","text":"output EJAMejscreenapi::ejscreenit( testpoints_10, radius = 1, nosave = T, nosee = T, interactiveprompt = F, calculate_ratios = T ) testoutput_ejscreenit_10pts_1miles$table Also see testoutput_ejamit_10pts_1miles$results_bysite","code":""},{"path":"/reference/testoutput_getblocksnearby_1000pts_1miles.html","id":null,"dir":"Reference","previous_headings":"","what":"test output of getblocksnearby(), and is an input to doaggregate() — testoutput_getblocksnearby_1000pts_1miles","title":"test output of getblocksnearby(), and is an input to doaggregate() — testoutput_getblocksnearby_1000pts_1miles","text":"test output getblocksnearby(), input doaggregate()","code":""},{"path":"/reference/testoutput_getblocksnearby_1000pts_1miles.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"test output of getblocksnearby(), and is an input to doaggregate() — testoutput_getblocksnearby_1000pts_1miles","text":"output getblocksnearby(testpoints_1000, radius = 1)","code":""},{"path":[]},{"path":"/reference/testoutput_getblocksnearby_100pts_1miles.html","id":null,"dir":"Reference","previous_headings":"","what":"test output of getblocksnearby(), and is an input to doaggregate() — testoutput_getblocksnearby_100pts_1miles","title":"test output of getblocksnearby(), and is an input to doaggregate() — testoutput_getblocksnearby_100pts_1miles","text":"test output getblocksnearby(), input doaggregate()","code":""},{"path":"/reference/testoutput_getblocksnearby_100pts_1miles.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"test output of getblocksnearby(), and is an input to doaggregate() — testoutput_getblocksnearby_100pts_1miles","text":"output getblocksnearby(testpoints_100, radius = 1)","code":""},{"path":[]},{"path":"/reference/testoutput_getblocksnearby_10pts_1miles.html","id":null,"dir":"Reference","previous_headings":"","what":"test output of getblocksnearby(), and is an input to doaggregate() — testoutput_getblocksnearby_10pts_1miles","title":"test output of getblocksnearby(), and is an input to doaggregate() — testoutput_getblocksnearby_10pts_1miles","text":"test output getblocksnearby(), input doaggregate()","code":""},{"path":"/reference/testoutput_getblocksnearby_10pts_1miles.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"test output of getblocksnearby(), and is an input to doaggregate() — testoutput_getblocksnearby_10pts_1miles","text":"output getblocksnearby(testpoints_10, radius = 1)","code":""},{"path":[]},{"path":"/reference/testpoints_10.html","id":null,"dir":"Reference","previous_headings":"","what":"test points data.frame with columns sitenumber, lat, lon — testpoints_10","title":"test points data.frame with columns sitenumber, lat, lon — testpoints_10","text":"test points data.frame columns sitenumber, lat, lon","code":""},{"path":"/reference/testpoints_100.html","id":null,"dir":"Reference","previous_headings":"","what":"test points data.frame with columns sitenumber, lat, lon — testpoints_100","title":"test points data.frame with columns sitenumber, lat, lon — testpoints_100","text":"test points data.frame columns sitenumber, lat, lon","code":""},{"path":"/reference/testpoints_1000.html","id":null,"dir":"Reference","previous_headings":"","what":"test points data.frame with columns sitenumber, lat, lon — testpoints_1000","title":"test points data.frame with columns sitenumber, lat, lon — testpoints_1000","text":"test points data.frame columns sitenumber, lat, lon","code":""},{"path":"/reference/testpoints_10000.html","id":null,"dir":"Reference","previous_headings":"","what":"test points data.frame with columns sitenumber, lat, lon — testpoints_10000","title":"test points data.frame with columns sitenumber, lat, lon — testpoints_10000","text":"test points data.frame columns sitenumber, lat, lon","code":""},{"path":"/reference/testpoints_100_dt.html","id":null,"dir":"Reference","previous_headings":"","what":"test points data.frame with columns sitenumber, lat, lon — testpoints_100_dt","title":"test points data.frame with columns sitenumber, lat, lon — testpoints_100_dt","text":"test points data.frame columns sitenumber, lat, lon","code":""},{"path":"/reference/testpoints_conus5.html","id":null,"dir":"Reference","previous_headings":"","what":"test points data.frame with columns lat, lon, sitenumber, sitename — testpoints_conus5","title":"test points data.frame with columns lat, lon, sitenumber, sitename — testpoints_conus5","text":"test points data.frame columns lat, lon, sitenumber, sitename","code":""},{"path":"/reference/testpoints_n.html","id":null,"dir":"Reference","previous_headings":"","what":"Random points in USA - average resident, facility, BG, block, or square mile — testpoints_n","title":"Random points in USA - average resident, facility, BG, block, or square mile — testpoints_n","text":"Get data.table Random Points (lat lon) Testing/ Benchmarking/ Demos, weighted various ways. weighting can specified point reflects average EPA-regulated facility, blockgroup, block, place map, US resident.","code":""},{"path":"/reference/testpoints_n.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Random points in USA - average resident, facility, BG, block, or square mile — testpoints_n","text":"","code":"testpoints_n(   n = 10,   weighting = c(\"frs\", \"pop\", \"area\", \"bg\", \"block\"),   dt = TRUE,   ST_needed = NULL )"},{"path":"/reference/testpoints_n.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Random points in USA - average resident, facility, BG, block, or square mile — testpoints_n","text":"n Number points needed (sample size) weighting word indicating weight random points (synonyms allowed, addition shown ): Note default frs, may want use pop even though slower. pop people = Average Person: random person among US residents (block point residence per 2020 Census) frs facility = Average Facility: random EPA-regulated facility actives Facility Registry Service (FRS) bg = Average Blockgroup: random US Census block group (internal point like centroid) block = Average Block: random US Census block (internal point like centroid) area place = Average Place: random point map (internal point avg blockgroup weighted square meters size) dt logical, whether return data.table (DEFAULT) instead normal data.frame ST_needed optional, can character vector 2 letter State abbreviations pick States.","code":""},{"path":"/reference/testpoints_n.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Random points in USA - average resident, facility, BG, block, or square mile — testpoints_n","text":"data.frame data.table columns lat, lon decimal degrees, columns table used (based weighting)","code":""},{"path":"/reference/testpoints_n.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Random points in USA - average resident, facility, BG, block, or square mile — testpoints_n","text":"","code":"mapfast(testpoints_n(300, ST_needed = c('LA','MS')) ) if (FALSE) { n=2 for (d in c(TRUE,FALSE)) {   for (w in c('frs', 'pop', 'area', 'bg', 'block')) {     cat(\"n=\",n,\"  weighting=\",w, \"  dt=\",d,\"\\n\\n\")     print(x <- testpoints_n(n,w,d)); print(class(x))     cat('\\n')   } } }"},{"path":"/reference/test_regid.html","id":null,"dir":"Reference","previous_headings":"","what":"test_regid (DATA) test data, vector of EPA FRS Registry ID numbers — test_regid","title":"test_regid (DATA) test data, vector of EPA FRS Registry ID numbers — test_regid","text":"test_regid (DATA) test data, vector EPA FRS Registry ID numbers","code":""},{"path":"/reference/test_regid.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"test_regid (DATA) test data, vector of EPA FRS Registry ID numbers — test_regid","text":"testing, e.g., frs_from_regid(test_regid) mapfast(  frs_from_regid(test_regid)  )","code":""},{"path":"/reference/trilaterate_sites2blocks.html","id":null,"dir":"Reference","previous_headings":"","what":"DRAFT - Estimate lat,lon of each ejam_uniq_id, from outputs of getblocksnearby() — trilaterate_sites2blocks","title":"DRAFT - Estimate lat,lon of each ejam_uniq_id, from outputs of getblocksnearby() — trilaterate_sites2blocks","text":"get data.table ejam_uniq_id, lat,lon site (eg save sitepoints info)","code":""},{"path":"/reference/trilaterate_sites2blocks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DRAFT - Estimate lat,lon of each ejam_uniq_id, from outputs of getblocksnearby() — trilaterate_sites2blocks","text":"","code":"trilaterate_sites2blocks(s2b)"},{"path":"/reference/trilaterate_sites2blocks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DRAFT - Estimate lat,lon of each ejam_uniq_id, from outputs of getblocksnearby() — trilaterate_sites2blocks","text":"s2b like testoutput_getblocksnearby_10pts_1miles","code":""},{"path":"/reference/trilaterate_sites2blocks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DRAFT - Estimate lat,lon of each ejam_uniq_id, from outputs of getblocksnearby() — trilaterate_sites2blocks","text":"data.table one row per unique ejam_uniq_id input dt, plus lat,lon columns","code":""},{"path":"/reference/trilaterate_sites2blocks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DRAFT - Estimate lat,lon of each ejam_uniq_id, from outputs of getblocksnearby() — trilaterate_sites2blocks","text":"","code":"s2b = copy(testoutput_getblocksnearby_10pts_1miles) s2b_located = latlon_join_on_blockid(s2b) # done by trilaterate also inferred_sites = trilaterate_sites2blocks(s2b) inferred_sites plotblocksnearby(s2b_located)"},{"path":"/reference/unshared.html","id":null,"dir":"Reference","previous_headings":"","what":"UTILITY - see what is only in x or y but not both — unshared","title":"UTILITY - see what is only in x or y but not both — unshared","text":"utility just like setdiff except y,x also x,y Just shows elements one one sets x y","code":""},{"path":"/reference/unshared.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UTILITY - see what is only in x or y but not both — unshared","text":"","code":"unshared(x, y)"},{"path":"/reference/urls_clusters_and_sort_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Links to ejscreenapi output, to launch EJScreen report for given point(s) — urls_clusters_and_sort_cols","title":"Add Links to ejscreenapi output, to launch EJScreen report for given point(s) — urls_clusters_and_sort_cols","text":"Add update, reorder, columns results","code":""},{"path":"/reference/urls_clusters_and_sort_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Links to ejscreenapi output, to launch EJScreen report for given point(s) — urls_clusters_and_sort_cols","text":"","code":"urls_clusters_and_sort_cols(results_table)"},{"path":"/reference/urls_clusters_and_sort_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Links to ejscreenapi output, to launch EJScreen report for given point(s) — urls_clusters_and_sort_cols","text":"results_table ejscreenapi() function example","code":""},{"path":"/reference/urls_clusters_and_sort_cols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Links to ejscreenapi output, to launch EJScreen report for given point(s) — urls_clusters_and_sort_cols","text":"input table extra columns","code":""},{"path":"/reference/urls_clusters_and_sort_cols.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add Links to ejscreenapi output, to launch EJScreen report for given point(s) — urls_clusters_and_sort_cols","text":"Creates weblinks maps, EJScreenMAP column, Adds weblinks pdf-like reports, new column Adds column flag sites close sites, Puts certain columns first.","code":""},{"path":[]},{"path":"/reference/url_4table.html","id":null,"dir":"Reference","previous_headings":"","what":"URL functions - Create URLs in columns, for EJAM — url_4table","title":"URL functions - Create URLs in columns, for EJAM — url_4table","text":"start use server ejamit(), already used table_xls_format()","code":""},{"path":"/reference/url_4table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"URL functions - Create URLs in columns, for EJAM — url_4table","text":"","code":"url_4table(lat, lon, radius, regid = NULL, as_html = TRUE)"},{"path":"/reference/url_4table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"URL functions - Create URLs in columns, for EJAM — url_4table","text":"lat vector latitudes lon vector longitudes radius vector values radius miles regid optional vector FRS registry IDs available use create links detailed ECHO facility reports as_html logical, optional. passed url_ejscreen_report() url_ejscreenmap() EJAMejscreenapi package","code":""},{"path":"/reference/url_4table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"URL functions - Create URLs in columns, for EJAM — url_4table","text":"list data.frames append list data.frames created ejamit() doaggregate(), list(results_bysite = results_bysite, results_overall = results_overall, newcolnames=newcolnames)","code":""},{"path":[]},{"path":"/reference/url_bookmark_save.html","id":null,"dir":"Reference","previous_headings":"","what":"utility - save bookmarked EJScreen session (map location and indicator) — url_bookmark_save","title":"utility - save bookmarked EJScreen session (map location and indicator) — url_bookmark_save","text":"utility - save bookmarked EJScreen session (map location indicator)","code":""},{"path":"/reference/url_bookmark_save.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"utility - save bookmarked EJScreen session (map location and indicator) — url_bookmark_save","text":"","code":"url_bookmark_save(..., file = \"ejscreenbookmark.json\")"},{"path":"/reference/url_bookmark_save.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"utility - save bookmarked EJScreen session (map location and indicator) — url_bookmark_save","text":"... passed url_bookmark_text() file path name .json file want save locally","code":""},{"path":"/reference/url_bookmark_save.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"utility - save bookmarked EJScreen session (map location and indicator) — url_bookmark_save","text":"URL 1 bookmarked EJScreen map location variable displayed map","code":""},{"path":"/reference/url_bookmark_save.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"utility - save bookmarked EJScreen session (map location and indicator) — url_bookmark_save","text":"WORK PROGRESS - USED EARLY 2023. can use function create save json file bookmark specific place/ map view/ data layer EJScreen. can later pull exact map EJScreen launching EJScreen, clicking Tools, Save Session, Load File. ***Units lat lon: \"spatialReference\":\"latestWkid\":3857,\"wkid\":102100 Note: (1) number sessions can saved depends browser cache size. (2) Session files, saved, available default Downloads folder computer. (3) Users exercise caution saving sessions may contain sensitive confidential data.","code":""},{"path":"/reference/url_bookmark_text.html","id":null,"dir":"Reference","previous_headings":"","what":"utility - URL for 1 bookmarked EJScreen session (map location and indicator) — url_bookmark_text","title":"utility - URL for 1 bookmarked EJScreen session (map location and indicator) — url_bookmark_text","text":"utility - URL 1 bookmarked EJScreen session (map location indicator)","code":""},{"path":"/reference/url_bookmark_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"utility - URL for 1 bookmarked EJScreen session (map location and indicator) — url_bookmark_text","text":"","code":"url_bookmark_text(   x = c(-13232599.1784247, -13085305.0249191),   y = c(3970069.24597194, 4067373.582979),   name = \"BookmarkedEJScreenMap\",   title = \"Socioeconomic Indicators\",   renderField = \"B_UNEMPPCT\",   pctlevel = \"nation\",   xmin = 1.1 * min(x),   xmax = 0.9 * min(x),   ymin = 0.9 * min(y),   ymax = 1.1 * min(y),   urlrest = paste0(\"https://geopub.epa.gov/arcgis/rest/services\",     \"/ejscreen/ejscreen_v2022_with_AS_CNMI_GU_VI/MapServer\") )"},{"path":"/reference/url_bookmark_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"utility - URL for 1 bookmarked EJScreen session (map location and indicator) — url_bookmark_text","text":"x vector approx topleft, bottomright longitudes units EJScreen uses? Units lat lon: \"spatialReference\":\"latestWkid\":3857,\"wkid\":102100 y vector approx topleft, bottomright latitudes units EJScreen uses? Units lat lon: \"spatialReference\":\"latestWkid\":3857,\"wkid\":102100 name name map bookmark title name map like Socioeconomic Indicators   Pollution Sources renderField name variable shown map, like B_UNEMPPCT map color bins percent unemployed B_PTRAF traffic indicator pctlevel nation state xmin calculated bounding box map view xmax calculated bounding box map view ymin calculated bounding box map view ymax calculated bounding box map view urlrest Just use default changes year","code":""},{"path":"/reference/url_bookmark_text.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"utility - URL for 1 bookmarked EJScreen session (map location and indicator) — url_bookmark_text","text":"URL 1 bookmarked EJScreen map location variable displayed map","code":""},{"path":"/reference/url_bookmark_text.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"utility - URL for 1 bookmarked EJScreen session (map location and indicator) — url_bookmark_text","text":"WORK PROGRESS - USED EARLY 2023. can use function create save json file bookmark specific place/ map view/ data layer EJScreen. can later pull exact map EJScreen launching EJScreen, clicking Tools, Save Session, Load File. Note: (1) number sessions can saved depends browser cache size. (2) Session files, saved, available default Downloads folder computer. (3) Users exercise caution saving sessions may contain sensitive confidential data.","code":""},{"path":[]},{"path":"/reference/url_bookmark_text.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"utility - URL for 1 bookmarked EJScreen session (map location and indicator) — url_bookmark_text","text":"","code":"if (FALSE) {   url_bookmark_text()   url_bookmark_save(     x=c(-10173158.179197036, -10128824.702791695),      y=c(3548990.034736070,3579297.316451102),      file=\"./mysavedejscreensession1.json\")   }"},{"path":"/reference/url_countyhealthrankings.html","id":null,"dir":"Reference","previous_headings":"","what":"URL functions - Get URLs of useful report(s) on Counties from countyhealthrankings.org — url_countyhealthrankings","title":"URL functions - Get URLs of useful report(s) on Counties from countyhealthrankings.org — url_countyhealthrankings","text":"URL functions - Get URLs useful report(s) Counties countyhealthrankings.org","code":""},{"path":"/reference/url_countyhealthrankings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"URL functions - Get URLs of useful report(s) on Counties from countyhealthrankings.org — url_countyhealthrankings","text":"","code":"url_countyhealthrankings(fips, year = 2023)"},{"path":"/reference/url_countyhealthrankings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"URL functions - Get URLs of useful report(s) on Counties from countyhealthrankings.org — url_countyhealthrankings","text":"fips vector fips codes counties, 5 characters , like \"10003\" year 2023","code":""},{"path":"/reference/url_countyhealthrankings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"URL functions - Get URLs of useful report(s) on Counties from countyhealthrankings.org — url_countyhealthrankings","text":"vector URLs","code":""},{"path":"/reference/url_countyhealthrankings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"URL functions - Get URLs of useful report(s) on Counties from countyhealthrankings.org — url_countyhealthrankings","text":"","code":"url_countyhealthrankings(fips_counties_from_state_abbrev(\"DE\"))  # browseURL(url_countyhealthrankings(fips_counties_from_state_abbrev(\"DE\"))[1])"},{"path":"/reference/url_echo_facility_webpage.html","id":null,"dir":"Reference","previous_headings":"","what":"Get URLs of ECHO reports — url_echo_facility_webpage","title":"Get URLs of ECHO reports — url_echo_facility_webpage","text":"Get URL(s) EPA ECHO webpage facility information","code":""},{"path":"/reference/url_echo_facility_webpage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get URLs of ECHO reports — url_echo_facility_webpage","text":"","code":"url_echo_facility_webpage(regid, as_html = FALSE, linktext)"},{"path":"/reference/url_echo_facility_webpage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get URLs of ECHO reports — url_echo_facility_webpage","text":"regid EPA FRS Registry ID as_html Whether return just urls html hyperlinks use DT::datatable() example linktext used text hyperlinks, supplied as_html=TRUE","code":""},{"path":"/reference/url_echo_facility_webpage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get URLs of ECHO reports — url_echo_facility_webpage","text":"URL(s)","code":""},{"path":[]},{"path":"/reference/url_echo_facility_webpage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get URLs of ECHO reports — url_echo_facility_webpage","text":"","code":"if (FALSE) {  browseURL(url_echo_facility_webpage(110070874073))  }"},{"path":"/reference/url_ejscreenmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Get URL(s) for EJScreen map centered at given point(s) — url_ejscreenmap","title":"Get URL(s) for EJScreen map centered at given point(s) — url_ejscreenmap","text":"Get URL(s) EJScreen map centered given point(s)","code":""},{"path":"/reference/url_ejscreenmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get URL(s) for EJScreen map centered at given point(s) — url_ejscreenmap","text":"","code":"url_ejscreenmap(lon, lat, as_html = FALSE, linktext, wherestr = \"\")"},{"path":"/reference/url_ejscreenmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get URL(s) for EJScreen map centered at given point(s) — url_ejscreenmap","text":"lon one longitudes lat one latitudes as_html Whether return just urls html hyperlinks use DT::datatable() example linktext used text hyperlinks, supplied as_html=TRUE wherestr passed API URL wherestr= , lat/lon used. Can State abbrev like \"NY\" can options - sure part EJScreen URL-encoded map request documented.","code":""},{"path":"/reference/url_ejscreenmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get URL(s) for EJScreen map centered at given point(s) — url_ejscreenmap","text":"URL(s)","code":""},{"path":[]},{"path":"/reference/url_ejscreen_acs_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Get URLs of EJScreen older ACS reports - will be phased out — url_ejscreen_acs_report","title":"Get URLs of EJScreen older ACS reports - will be phased out — url_ejscreen_acs_report","text":"Get URL(s) EJScreen ACS report residents near given point(s)","code":""},{"path":"/reference/url_ejscreen_acs_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get URLs of EJScreen older ACS reports - will be phased out — url_ejscreen_acs_report","text":"","code":"url_ejscreen_acs_report(lon, lat, radius, as_html = FALSE, linktext)"},{"path":"/reference/url_ejscreen_acs_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get URLs of EJScreen older ACS reports - will be phased out — url_ejscreen_acs_report","text":"lon one longitudes lat one latitudes radius miles radius as_html Whether return just urls html hyperlinks use DT::datatable() example linktext used text hyperlinks, supplied as_html=TRUE","code":""},{"path":"/reference/url_ejscreen_acs_report.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get URLs of EJScreen older ACS reports - will be phased out — url_ejscreen_acs_report","text":"URL(s)","code":""},{"path":"/reference/url_ejscreen_acs_report.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get URLs of EJScreen older ACS reports - will be phased out — url_ejscreen_acs_report","text":"USED APP NOW COMMUNITY REPORT EXISTS","code":""},{"path":[]},{"path":"/reference/url_ejscreen_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Get URLs of EJScreen reports — url_ejscreen_report","title":"Get URLs of EJScreen reports — url_ejscreen_report","text":"Get URL(s) EJScreen standard report residents near given point(s)","code":""},{"path":"/reference/url_ejscreen_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get URLs of EJScreen reports — url_ejscreen_report","text":"","code":"url_ejscreen_report(   lon = \"\",   lat = \"\",   radius = \"\",   as_html = FALSE,   linktext,   mobile = FALSE,   areatype = \"\",   areaid = \"\",   namestr = \"\",   wkid = 4326,   unit = 9035,   f = \"report\" )"},{"path":"/reference/url_ejscreen_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get URLs of EJScreen reports — url_ejscreen_report","text":"lon one longitudes lat one latitudes radius miles radius as_html Whether return just urls html hyperlinks use DT::datatable() example linktext used text hyperlinks, supplied as_html=TRUE mobile TRUE, provides URL mobile browser version, desktop version areatype passed areatype= API, inferred provided areaid provided areaid fips codes used,  passed areaid=  API, can FIPS blockgroups, tracts, counties. namestr character string text show report name place wkid default 4326 -WGS84 - World Geodetic System 1984, used GPS - see (https://epsg.io/4326) unit default 9035 means miles; kilometers use 9036 f can \"report\" \"pjson\" \"json\"","code":""},{"path":"/reference/url_ejscreen_report.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get URLs of EJScreen reports — url_ejscreen_report","text":"URL(s)","code":""},{"path":"/reference/url_ejscreen_report.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get URLs of EJScreen reports — url_ejscreen_report","text":"Also see ejscreenRESTbroker() ejscreenapi1() (https://ejscreen.epa.gov/mapper/EJAPIinstructions.pdf) (https://ejscreen.epa.gov/mapper/ejscreenapi1.html)","code":""},{"path":[]},{"path":"/reference/url_envirofacts_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get URLs of EnviroFacts API queries - DRAFT WORK IN PROGRESS — url_envirofacts_data","title":"Get URLs of EnviroFacts API queries - DRAFT WORK IN PROGRESS — url_envirofacts_data","text":"Get URL(s) query get data facilities Envirofacts, XML,JSON,CSV, EXCEL format","code":""},{"path":"/reference/url_envirofacts_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get URLs of EnviroFacts API queries - DRAFT WORK IN PROGRESS — url_envirofacts_data","text":"","code":"url_envirofacts_data(regid, as_html = FALSE, linktext)"},{"path":"/reference/url_envirofacts_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get URLs of EnviroFacts API queries - DRAFT WORK IN PROGRESS — url_envirofacts_data","text":"as_html Whether return just urls html hyperlinks use DT::datatable() example linktext used text hyperlinks, supplied as_html=TRUE tablename tri_info","code":""},{"path":"/reference/url_envirofacts_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get URLs of EnviroFacts API queries - DRAFT WORK IN PROGRESS — url_envirofacts_data","text":"URL(s)","code":""},{"path":"/reference/url_envirofacts_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get URLs of EnviroFacts API queries - DRAFT WORK IN PROGRESS — url_envirofacts_data","text":"Lets search specific regulatory program database filter State, location, etc. see https://www.epa.gov/enviro/web-services https://www.epa.gov/enviro/envirofacts-data-service-api (https://data.epa.gov/efservice/multisystem/minLatitude/35.465158/maxLatitude/52.912225/minLongitude/-104.387994/maxLongitude/-69.231744/count) ??? WORK PROGRESS .... need look documentation closely returns expected attempts WEBPAGE URL (returns webpage) e.g., https://enviro.epa.gov/enviro/efsystemquery.multisystem?fac_search=primary_name&fac_value=&fac_search_type=Beginning+&postal_code=&location_address=&add_search_type=Beginning+&city_name=&county_name=&state_code=&TribalLand=0&TribeType=selectTribeALL&selectTribe=noselect&tribedistance1=onLand&sic_type=Equal+&sic_code_to=&naics_type=Beginning+&naics_to=326&chem_name=&chem_search=Beginning+&cas_num=&page_no=1&output_sql_switch=FALSE&report=1&database_type=Multisystem https://enviro.epa.gov/enviro/efsystemquery.multisystem?state_code=DE&naics_type=Beginning+&naics_to=326&database_type=Multisystem API URL (returns data) https://data.epa.gov/efservice/multisystem/minLatitude/35.465158/maxLatitude/52.912225/minLongitude/-104.387994/maxLongitude/-69.231744/naics_type/Beginning+/naics_to/32611 https://data.epa.gov/efservice/multisystem/minLatitude/35.465158/maxLatitude/52.912225/minLongitude/-104.387994/maxLongitude/-69.231744/EXCEL","code":""},{"path":[]},{"path":"/reference/url_enviromapper.html","id":null,"dir":"Reference","previous_headings":"","what":"Get URLs of EnviroMapper reports — url_enviromapper","title":"Get URLs of EnviroMapper reports — url_enviromapper","text":"Get URL(s) EnviroMapper web-based tool, open map specified point location(s)","code":""},{"path":"/reference/url_enviromapper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get URLs of EnviroMapper reports — url_enviromapper","text":"","code":"url_enviromapper(lon, lat, as_html = FALSE, linktext, zoom = 13)"},{"path":"/reference/url_enviromapper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get URLs of EnviroMapper reports — url_enviromapper","text":"lon one longitude lat one latitude as_html Whether return just urls html hyperlinks use DT::datatable() example linktext used text hyperlinks, supplied as_html=TRUE zoom initial map zoom extent, smaller numbers zoomed closer","code":""},{"path":"/reference/url_enviromapper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get URLs of EnviroMapper reports — url_enviromapper","text":"URL one webpage (launches mapping tool)","code":""},{"path":"/reference/url_enviromapper.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get URLs of EnviroMapper reports — url_enviromapper","text":"EnviroMapper lets view EPA-regulated facilities information map, given lat,lon","code":""},{"path":[]},{"path":"/reference/url_frs_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Get URLs of FRS reports — url_frs_report","title":"Get URLs of FRS reports — url_frs_report","text":"Get URL(s) reports facilities EPA FRS (facility registry service)","code":""},{"path":"/reference/url_frs_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get URLs of FRS reports — url_frs_report","text":"","code":"url_frs_report(regid, as_html = FALSE, linktext)"},{"path":"/reference/url_frs_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get URLs of FRS reports — url_frs_report","text":"regid one EPA FRS Registry IDs. as_html Whether return just urls html hyperlinks use DT::datatable() example linktext used text hyperlinks, supplied as_html=TRUE","code":""},{"path":"/reference/url_frs_report.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get URLs of FRS reports — url_frs_report","text":"URL(s)","code":""},{"path":[]},{"path":[]},{"path":"/reference/url_getacs_epaquery.html","id":null,"dir":"Reference","previous_headings":"","what":"URL functions - url_getacs_epaquery - experimental/ work in progress: get ACS data via EPA API (for <200 places) — url_getacs_epaquery","title":"URL functions - url_getacs_epaquery - experimental/ work in progress: get ACS data via EPA API (for <200 places) — url_getacs_epaquery","text":"uses ACS2019 rest services ejscreen ejquery MapServer 7 Documentation format examples input parameters: https://geopub.epa.gov/arcgis/sdk/rest/index.html#/Query_Map_Service_Layer/02ss0000000r000000/","code":""},{"path":"/reference/url_getacs_epaquery.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"URL functions - url_getacs_epaquery - experimental/ work in progress: get ACS data via EPA API (for <200 places) — url_getacs_epaquery","text":"","code":"url_getacs_epaquery(   objectIds = 1:3,   servicenumber = 7,   outFields = NULL,   returnGeometry = FALSE,   justurl = FALSE,   ... )"},{"path":"/reference/url_getacs_epaquery.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"URL functions - url_getacs_epaquery - experimental/ work in progress: get ACS data via EPA API (for <200 places) — url_getacs_epaquery","text":"objectIds see API servicenumber see API outFields see API. eg \"STCNTRBG\",\"TOTALPOP\",\"PCT_HISP\", returnGeometry see API justurl TRUE, returns url instead default making API request ... passed url_getacs_epaquery_chunked()","code":""},{"path":"/reference/url_getacs_epaquery.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"URL functions - url_getacs_epaquery - experimental/ work in progress: get ACS data via EPA API (for <200 places) — url_getacs_epaquery","text":"table","code":""},{"path":"/reference/url_getacs_epaquery.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"URL functions - url_getacs_epaquery - experimental/ work in progress: get ACS data via EPA API (for <200 places) — url_getacs_epaquery","text":"","code":"url_getacs_epaquery(justurl=TRUE)"},{"path":"/reference/url_getacs_epaquery_chunked.html","id":null,"dir":"Reference","previous_headings":"","what":"URL functions - url_getacs_epaquery_chunked - experimental/ work in progress: in chunks, get ACS data via EPA API — url_getacs_epaquery_chunked","title":"URL functions - url_getacs_epaquery_chunked - experimental/ work in progress: in chunks, get ACS data via EPA API — url_getacs_epaquery_chunked","text":"URL functions - url_getacs_epaquery_chunked - experimental/ work progress: chunks, get ACS data via EPA API","code":""},{"path":"/reference/url_getacs_epaquery_chunked.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"URL functions - url_getacs_epaquery_chunked - experimental/ work in progress: in chunks, get ACS data via EPA API — url_getacs_epaquery_chunked","text":"","code":"url_getacs_epaquery_chunked(   objectIds = 1:3,   servicenumber = 7,   outFields = NULL,   returnGeometry = FALSE,   justurl = FALSE,   chunksize = 200,   ... )"},{"path":"/reference/url_getacs_epaquery_chunked.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"URL functions - url_getacs_epaquery_chunked - experimental/ work in progress: in chunks, get ACS data via EPA API — url_getacs_epaquery_chunked","text":"objectIds see API servicenumber see API outFields see API returnGeometry see API justurl see API chunksize eg 200 chunks 200 request ... passed url_getacs_epaquery()","code":""},{"path":"/reference/url_getacs_epaquery_chunked.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"URL functions - url_getacs_epaquery_chunked - experimental/ work in progress: in chunks, get ACS data via EPA API — url_getacs_epaquery_chunked","text":"table","code":""},{"path":"/reference/url_getacs_epaquery_chunked.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"URL functions - url_getacs_epaquery_chunked - experimental/ work in progress: in chunks, get ACS data via EPA API — url_getacs_epaquery_chunked","text":"","code":"if (FALSE) {  # x <- list() # chunked chunks. best not to ask for all these:  # x[[1]] <- url_getacs_epaquery_chunked(   1:1000, chunksize = 100)  # x[[2]] <- url_getacs_epaquery_chunked(1001:5000, chunksize = 100)  # xall <- do.call(rbind, x)  }"},{"path":"/reference/url_get_eparest_chunked_by_id.html","id":null,"dir":"Reference","previous_headings":"","what":"URL functions - url_get_eparest_chunked_by_id - experimental/ work in progress: in chunks, get ACS data or Block weights nearby via EPA API — url_get_eparest_chunked_by_id","title":"URL functions - url_get_eparest_chunked_by_id - experimental/ work in progress: in chunks, get ACS data or Block weights nearby via EPA API — url_get_eparest_chunked_by_id","text":"URL functions - url_get_eparest_chunked_by_id - experimental/ work progress: chunks, get ACS data Block weights nearby via EPA API","code":""},{"path":"/reference/url_get_eparest_chunked_by_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"URL functions - url_get_eparest_chunked_by_id - experimental/ work in progress: in chunks, get ACS data or Block weights nearby via EPA API — url_get_eparest_chunked_by_id","text":"","code":"url_get_eparest_chunked_by_id(objectIds, chunksize = 200, ...)"},{"path":"/reference/url_get_eparest_chunked_by_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"URL functions - url_get_eparest_chunked_by_id - experimental/ work in progress: in chunks, get ACS data or Block weights nearby via EPA API — url_get_eparest_chunked_by_id","text":"objectIds see API chunksize see API ... passed url_getacs_epaquery()","code":""},{"path":"/reference/url_get_eparest_chunked_by_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"URL functions - url_get_eparest_chunked_by_id - experimental/ work in progress: in chunks, get ACS data or Block weights nearby via EPA API — url_get_eparest_chunked_by_id","text":"table","code":""},{"path":"/reference/url_get_via_url.html","id":null,"dir":"Reference","previous_headings":"","what":"URL functions - url_get_via_url - helper function work in progress: GET json via url of ejscreen ejquery map services — url_get_via_url","title":"URL functions - url_get_via_url - helper function work in progress: GET json via url of ejscreen ejquery map services — url_get_via_url","text":"URL functions - url_get_via_url - helper function work progress: GET json via url ejscreen ejquery map services","code":""},{"path":"/reference/url_get_via_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"URL functions - url_get_via_url - helper function work in progress: GET json via url of ejscreen ejquery map services — url_get_via_url","text":"","code":"url_get_via_url(url)"},{"path":"/reference/url_get_via_url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"URL functions - url_get_via_url - helper function work in progress: GET json via url of ejscreen ejquery map services — url_get_via_url","text":"url url EJScreen ejquery request","code":""},{"path":"/reference/url_get_via_url.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"URL functions - url_get_via_url - helper function work in progress: GET json via url of ejscreen ejquery map services — url_get_via_url","text":"json","code":""},{"path":"/reference/url_linkify.html","id":null,"dir":"Reference","previous_headings":"","what":"utility to make html link from URL — url_linkify","title":"utility to make html link from URL — url_linkify","text":"Convert URL HTML link opens new tab","code":""},{"path":"/reference/url_linkify.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"utility to make html link from URL — url_linkify","text":"","code":"url_linkify(url, text)"},{"path":"/reference/url_linkify.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"utility to make html link from URL — url_linkify","text":"url string URL text string label","code":""},{"path":"/reference/url_linkify.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"utility to make html link from URL — url_linkify","text":"url_linkify('epa.gov','EPA') returns \"<href=\\\"epa.gov\\\", target=\\\"_blank\\\">EPA<\/>\"","code":""},{"path":"/reference/url_naics.com.html","id":null,"dir":"Reference","previous_headings":"","what":"URL functions - url_naics.com - Get URL for page with info about industry sectors by text query term — url_naics.com","title":"URL functions - url_naics.com - Get URL for page with info about industry sectors by text query term — url_naics.com","text":"See (https://naics.com) information NAICS codes","code":""},{"path":"/reference/url_naics.com.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"URL functions - url_naics.com - Get URL for page with info about industry sectors by text query term — url_naics.com","text":"","code":"url_naics.com(query, as_html = FALSE, linktext)"},{"path":"/reference/url_naics.com.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"URL functions - url_naics.com - Get URL for page with info about industry sectors by text query term — url_naics.com","text":"query string query term like \"gasoline\" \"copper smelting\" as_html Whether return just urls html hyperlinks use DT::datatable() example linktext used text hyperlinks, supplied as_html=TRUE","code":""},{"path":"/reference/url_naics.com.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"URL functions - url_naics.com - Get URL for page with info about industry sectors by text query term — url_naics.com","text":"URL string","code":""},{"path":"/reference/url_to_any_rest_services_ejscreen_ejquery.html","id":null,"dir":"Reference","previous_headings":"","what":"utility - draft - generic function wrapping ejscreen/ejquery API calls — url_to_any_rest_services_ejscreen_ejquery","title":"utility - draft - generic function wrapping ejscreen/ejquery API calls — url_to_any_rest_services_ejscreen_ejquery","text":"utility - draft - generic function wrapping ejscreen/ejquery API calls","code":""},{"path":"/reference/url_to_any_rest_services_ejscreen_ejquery.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"utility - draft - generic function wrapping ejscreen/ejquery API calls — url_to_any_rest_services_ejscreen_ejquery","text":"","code":"url_to_any_rest_services_ejscreen_ejquery(servicenumber = 7)"},{"path":"/reference/url_to_any_rest_services_ejscreen_ejquery.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"utility - draft - generic function wrapping ejscreen/ejquery API calls — url_to_any_rest_services_ejscreen_ejquery","text":"servicenumber service - depends API","code":""},{"path":"/reference/url_to_any_rest_services_ejscreen_ejquery.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"utility - draft - generic function wrapping ejscreen/ejquery API calls — url_to_any_rest_services_ejscreen_ejquery","text":"Disadvantage generic approach help showing list parameters, since specific service like 7 vs 71. see links documentation using APIs dev/intersect-distance/arcgis/ArcGIS REST API basics.txt","code":""},{"path":"/reference/url_to_any_rest_services_ejscreen_ejquery.html","id":"notes-examples","dir":"Reference","previous_headings":"","what":"notes - examples","title":"utility - draft - generic function wrapping ejscreen/ejquery API calls — url_to_any_rest_services_ejscreen_ejquery","text":"url_getacs_epaquery(  objectIds = 1:4,                 outFields = 'STCNTRBG', justurl = TRUE) t(url_getacs_epaquery(objectIds = sample(1:220000,2),  outFields = '*')) t(url_getacs_epaquery(objectIds = sample(1:220000,2))) url_getacs_epaquery(  objectIds = sample(1:220000,10), outFields = c('STCNTRBG', 'STATE', 'COUNTY', 'TRACT', 'BLKGRP'), justurl = FALSE) y <- url_get_via_url(url_to_any_rest_services_ejscreen_ejquery(         servicenumber = 71, lat = 30.494982, lon = -91.132107, miles = 1)) x <- url_get_via_url(url_to_get_nearby_blocks_rest_services_ejscreen_ejquery_MapServer_71(lat = 30.494982, lon = -91.132107, miles = 1)) z <- url_get_via_url(url_to_get_ACS2019_rest_services_ejscreen_ejquery_MapServer_7())","code":""},{"path":"/reference/usastats.html","id":null,"dir":"Reference","previous_headings":"","what":"usastats (DATA) data.frame of 100 percentiles and means — usastats","title":"usastats (DATA) data.frame of 100 percentiles and means — usastats","text":"data.frame 100 percentiles means (100 rows) USA overall, across locations (e.g., block groups blockgroupstats) set indicators percent low income. column one indicator (specifies percentile). similar lookup tables gdb FTP site EJScreen, except also data demographic race/ethnicity subgroups. details table made, see /EJAM/data-raw/usastats_subgroups.R","code":""},{"path":"/reference/usastats_means.html","id":null,"dir":"Reference","previous_headings":"","what":"usastats_means - convenient way to see US MEANS of ENVIRONMENTAL and DEMOGRAPHIC indicators — usastats_means","title":"usastats_means - convenient way to see US MEANS of ENVIRONMENTAL and DEMOGRAPHIC indicators — usastats_means","text":"usastats_means - convenient way see US MEANS ENVIRONMENTAL DEMOGRAPHIC indicators","code":""},{"path":"/reference/usastats_means.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"usastats_means - convenient way to see US MEANS of ENVIRONMENTAL and DEMOGRAPHIC indicators — usastats_means","text":"","code":"usastats_means(   varnames = c(EJAM::names_e, EJAM::names_d, EJAM::names_d_subgroups_nh),   PCTILES = NULL,   dig = 4 )"},{"path":"/reference/usastats_means.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"usastats_means - convenient way to see US MEANS of ENVIRONMENTAL and DEMOGRAPHIC indicators — usastats_means","text":"varnames names columns lookup table, like \"proximity.rmp\" PCTILES vector percentiles 0-100 /\"mean\" dig many digits round ","code":""},{"path":"/reference/usastats_query.html","id":null,"dir":"Reference","previous_headings":"","what":"usastats_query - convenient way to see US mean, pctiles of Envt and Demog indicators in lookup table — usastats_query","title":"usastats_query - convenient way to see US mean, pctiles of Envt and Demog indicators in lookup table — usastats_query","text":"usastats_query - convenient way see US mean, pctiles Envt Demog indicators lookup table","code":""},{"path":"/reference/usastats_query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"usastats_query - convenient way to see US mean, pctiles of Envt and Demog indicators in lookup table — usastats_query","text":"","code":"usastats_query(   varnames = c(EJAM::names_e, EJAM::names_d, EJAM::names_d_subgroups_nh),   PCTILES = NULL,   dig = 4 )"},{"path":"/reference/usastats_query.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"usastats_query - convenient way to see US mean, pctiles of Envt and Demog indicators in lookup table — usastats_query","text":"varnames names columns lookup table, like \"proximity.rmp\" PCTILES vector percentiles 0-100 /\"mean\" dig many digits round ","code":""},{"path":"/reference/usastats_query.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"usastats_query - convenient way to see US mean, pctiles of Envt and Demog indicators in lookup table — usastats_query","text":"long list variables: usastats_query(intersect(EJAM::names_all_r,  names(EJAM::usastats)))","code":""},{"path":"/reference/usastats_query.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"usastats_query - convenient way to see US mean, pctiles of Envt and Demog indicators in lookup table — usastats_query","text":"","code":"if (FALSE) {  usastats_querye()  #  data.frame where names_e are the names(),  #  means plus other percentiles, and there are other cols REGION PCTILE  avg.in.us                # This is a data.frame, 1 row, where colnames are indicators avg.in.us[names_e]          # subset is a data.frame! unlist(avg.in.us[names_e])  # to make it a vector  usastats_means()        # This is a matrix, with 1 col, and indicator names are rownames usastats_means(names_e)     # subset is a matrix        and indicator names are rownames usastats_means()[names_e, ] # subset is a named vector  and indicator names are  names  usastats_means() statestats_query()  statestats_query()[,names_d] statestats_query(varnames = names_d)  statestats_query()[,names_e] statestats_query(varnames = names_e)  statestats_query(varnames = names_d_subgroups) head(statestats_query(varnames = longlist))  ## in USA overall, see mean and key percentiles # for all demog and envt indicators usastats_query() # or statestats_query('us')  # can say us or US or USA or usa etc. usastats_query(PCTILES = 'mean') usastats_means() # same but nicer looking format in console usastats_means(dig=4)  # long list of variables: x = intersect(EJAM::names_all_r,  names(EJAM::usastats)) usastats_means(x)  usastats[!(usastats$PCTILE < 50), c(\"PCTILE\", names_d)] usastats[!(usastats$PCTILE < 50), c(\"PCTILE\", names_e)]  ## in 1 state, see mean and key percentiles for all demog and envt indicators statestats_query('MD')  ## in 1 state, see mean and key percentiles for just demog indicators statestats_queryd('MD')  ## 1 indicator in 1 state, see a few key percentiles and mean statestats_query('MD','proximity.tsdf')  ## mean of 1 indicator for each state statestats_query(varnames = 'proximity.tsdf')  ## using full blockgroup dataset, not lookup tables of percentiles,  blockgroupstats[, lapply(.SD, function(x) mean(x, na.rm=T)),    .SDcols= c(names_d, names_e)]  ##   see all total counts (not just US means),  ##   demographics including subgroups,  ##   but not environmental indicators. t(round(ustotals2(bg = blockgroupstats),2))   #  ustotals2 is from EJAMbatch.summarizer package t(blockgroupstats[, lapply(.SD, function(x) mean(x, na.rm=T)),     .SDcols= c(names_e, names_d)])  }"},{"path":"/reference/usastats_queryd.html","id":null,"dir":"Reference","previous_headings":"","what":"usastats_queryd - convenient way to see US mean, pctiles of DEMOGRAPHIC indicators in lookup table — usastats_queryd","title":"usastats_queryd - convenient way to see US mean, pctiles of DEMOGRAPHIC indicators in lookup table — usastats_queryd","text":"usastats_queryd - convenient way see US mean, pctiles DEMOGRAPHIC indicators lookup table","code":""},{"path":"/reference/usastats_queryd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"usastats_queryd - convenient way to see US mean, pctiles of DEMOGRAPHIC indicators in lookup table — usastats_queryd","text":"","code":"usastats_queryd(   varnames = c(EJAM::names_d, EJAM::names_d_subgroups_nh),   PCTILES = NULL,   dig = 4 )"},{"path":"/reference/usastats_queryd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"usastats_queryd - convenient way to see US mean, pctiles of DEMOGRAPHIC indicators in lookup table — usastats_queryd","text":"varnames names columns lookup table, like \"proximity.rmp\" PCTILES vector percentiles 0-100 /\"mean\" dig many digits round ","code":""},{"path":"/reference/usastats_queryd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"usastats_queryd - convenient way to see US mean, pctiles of DEMOGRAPHIC indicators in lookup table — usastats_queryd","text":"","code":"if (FALSE) {  usastats_querye()  #  data.frame where names_e are the names(),  #  means plus other percentiles, and there are other cols REGION PCTILE  avg.in.us                # This is a data.frame, 1 row, where colnames are indicators avg.in.us[names_e]          # subset is a data.frame! unlist(avg.in.us[names_e])  # to make it a vector  usastats_means()        # This is a matrix, with 1 col, and indicator names are rownames usastats_means(names_e)     # subset is a matrix        and indicator names are rownames usastats_means()[names_e, ] # subset is a named vector  and indicator names are  names  usastats_means() statestats_query()  statestats_query()[,names_d] statestats_query(varnames = names_d)  statestats_query()[,names_e] statestats_query(varnames = names_e)  statestats_query(varnames = names_d_subgroups) head(statestats_query(varnames = longlist))  ## in USA overall, see mean and key percentiles # for all demog and envt indicators usastats_query() # or statestats_query('us')  # can say us or US or USA or usa etc. usastats_query(PCTILES = 'mean') usastats_means() # same but nicer looking format in console usastats_means(dig=4)  # long list of variables: x = intersect(EJAM::names_all_r,  names(EJAM::usastats)) usastats_means(x)  usastats[!(usastats$PCTILE < 50), c(\"PCTILE\", names_d)] usastats[!(usastats$PCTILE < 50), c(\"PCTILE\", names_e)]  ## in 1 state, see mean and key percentiles for all demog and envt indicators statestats_query('MD')  ## in 1 state, see mean and key percentiles for just demog indicators statestats_queryd('MD')  ## 1 indicator in 1 state, see a few key percentiles and mean statestats_query('MD','proximity.tsdf')  ## mean of 1 indicator for each state statestats_query(varnames = 'proximity.tsdf')  ## using full blockgroup dataset, not lookup tables of percentiles,  blockgroupstats[, lapply(.SD, function(x) mean(x, na.rm=T)),    .SDcols= c(names_d, names_e)]  ##   see all total counts (not just US means),  ##   demographics including subgroups,  ##   but not environmental indicators. t(round(ustotals2(bg = blockgroupstats),2))   #  ustotals2 is from EJAMbatch.summarizer package t(blockgroupstats[, lapply(.SD, function(x) mean(x, na.rm=T)),     .SDcols= c(names_e, names_d)])  }"},{"path":"/reference/usastats_querye.html","id":null,"dir":"Reference","previous_headings":"","what":"usastats_querye - convenient way to see US mean, pctiles of ENVIRONMENTAL indicators in lookup table — usastats_querye","title":"usastats_querye - convenient way to see US mean, pctiles of ENVIRONMENTAL indicators in lookup table — usastats_querye","text":"usastats_querye - convenient way see US mean, pctiles ENVIRONMENTAL indicators lookup table","code":""},{"path":"/reference/usastats_querye.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"usastats_querye - convenient way to see US mean, pctiles of ENVIRONMENTAL indicators in lookup table — usastats_querye","text":"","code":"usastats_querye(varnames = EJAM::names_e, PCTILES = NULL, dig = 4)"},{"path":"/reference/usastats_querye.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"usastats_querye - convenient way to see US mean, pctiles of ENVIRONMENTAL indicators in lookup table — usastats_querye","text":"varnames names columns lookup table, like \"proximity.rmp\" PCTILES vector percentiles 0-100 /\"mean\" dig many digits round ","code":""},{"path":"/reference/usastats_querye.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"usastats_querye - convenient way to see US mean, pctiles of ENVIRONMENTAL indicators in lookup table — usastats_querye","text":"","code":"if (FALSE) {  usastats_querye()  #  data.frame where names_e are the names(),  #  means plus other percentiles, and there are other cols REGION PCTILE  avg.in.us                # This is a data.frame, 1 row, where colnames are indicators avg.in.us[names_e]          # subset is a data.frame! unlist(avg.in.us[names_e])  # to make it a vector  usastats_means()        # This is a matrix, with 1 col, and indicator names are rownames usastats_means(names_e)     # subset is a matrix        and indicator names are rownames usastats_means()[names_e, ] # subset is a named vector  and indicator names are  names  usastats_means() statestats_query()  statestats_query()[,names_d] statestats_query(varnames = names_d)  statestats_query()[,names_e] statestats_query(varnames = names_e)  statestats_query(varnames = names_d_subgroups) head(statestats_query(varnames = longlist))  ## in USA overall, see mean and key percentiles # for all demog and envt indicators usastats_query() # or statestats_query('us')  # can say us or US or USA or usa etc. usastats_query(PCTILES = 'mean') usastats_means() # same but nicer looking format in console usastats_means(dig=4)  # long list of variables: x = intersect(EJAM::names_all_r,  names(EJAM::usastats)) usastats_means(x)  usastats[!(usastats$PCTILE < 50), c(\"PCTILE\", names_d)] usastats[!(usastats$PCTILE < 50), c(\"PCTILE\", names_e)]  ## in 1 state, see mean and key percentiles for all demog and envt indicators statestats_query('MD')  ## in 1 state, see mean and key percentiles for just demog indicators statestats_queryd('MD')  ## 1 indicator in 1 state, see a few key percentiles and mean statestats_query('MD','proximity.tsdf')  ## mean of 1 indicator for each state statestats_query(varnames = 'proximity.tsdf')  ## using full blockgroup dataset, not lookup tables of percentiles,  blockgroupstats[, lapply(.SD, function(x) mean(x, na.rm=T)),    .SDcols= c(names_d, names_e)]  ##   see all total counts (not just US means),  ##   demographics including subgroups,  ##   but not environmental indicators. t(round(ustotals2(bg = blockgroupstats),2))   #  ustotals2 is from EJAMbatch.summarizer package t(blockgroupstats[, lapply(.SD, function(x) mean(x, na.rm=T)),     .SDcols= c(names_e, names_d)])  }"},{"path":"/reference/varinfo.html","id":null,"dir":"Reference","previous_headings":"","what":"varinfo gets metadata for a variable, like its type, definition, decimalS rounding, etc. — varinfo","title":"varinfo gets metadata for a variable, like its type, definition, decimalS rounding, etc. — varinfo","text":"just way query map_headernames, info indicator variable used EJAM.","code":""},{"path":"/reference/varinfo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"varinfo gets metadata for a variable, like its type, definition, decimalS rounding, etc. — varinfo","text":"","code":"varinfo(   var = map_headernames$rname,   info = colnames(map_headernames),   varnametype = \"rname\" )"},{"path":"/reference/varinfo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"varinfo gets metadata for a variable, like its type, definition, decimalS rounding, etc. — varinfo","text":"var vector variable names c(\"pctlowinc\", \"cancer\") c(names_d, names_d_subgroups) (must found column map_headernames indicated varnametype parameter ). info types metadata/info needed, \"decimals\", \"long\", etc. among colnames map_headernames, alias like \"long\" allowed fixcolnames() varnametype optional. colname map_headernames use looking var, like \"rname\" \"api\" \"long\"","code":""},{"path":"/reference/varinfo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"varinfo gets metadata for a variable, like its type, definition, decimalS rounding, etc. — varinfo","text":"data.frame 1 rows, 1 columns, rowsnames var (indicators like \"pctmin\") colnames info (metadata   like \"decimals\") Cells table metadata type indicator var, many decimal places rounding displayed tables, etc. Results can character, numeric, etc. depending info requested","code":""},{"path":"/reference/varinfo.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"varinfo gets metadata for a variable, like its type, definition, decimalS rounding, etc. — varinfo","text":"See map_headernames kind information available . variable appears twice+ var map_headernames, info returned 1st row ","code":""},{"path":[]},{"path":"/reference/varinfo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"varinfo gets metadata for a variable, like its type, definition, decimalS rounding, etc. — varinfo","text":"","code":"varinfo(\"traffic.score\", \"decimals\") varinfo(names_d, \"long\") myvars <- c(names_d, names_d_subgroups, names_e) myinfo <- \"percentage\" cbind(  is.a.percentage = varinfo(myvars, myinfo) ) cbind(varinfo(names_all_r, \"pctile.\")) myinfo <- \"long\" cbind(varinfo(myvars, myinfo) ) table_rounding_info(names_e)   varinfo(  var = c(names_these, names_d_pctile),  info = c(  \"topic_root_term\", \"varcategory\", \"vartype\", \"percentage\", \"pctile.\", \"calculation_type\" ))  varinfo(names_all_r, c(\"varcategory\", \"varlist\", \"in_api\", \"in_bgcsv\"))"},{"path":"/reference/varname2color_ejam.html","id":null,"dir":"Reference","previous_headings":"","what":"helper function - for color coding excel sheet columns — varname2color_ejam","title":"helper function - for color coding excel sheet columns — varname2color_ejam","text":"Convert R variable name indicator appropriate color header row Excel","code":""},{"path":"/reference/varname2color_ejam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"helper function - for color coding excel sheet columns — varname2color_ejam","text":"","code":"varname2color_ejam(varname, varnameinfo)"},{"path":"/reference/varname2color_ejam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"helper function - for color coding excel sheet columns — varname2color_ejam","text":"varname things like us.avg.pctlowinc","code":""},{"path":"/reference/varname2color_ejam.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"helper function - for color coding excel sheet columns — varname2color_ejam","text":"vector colors","code":""},{"path":[]},{"path":"/reference/varname2varcategory_ejam.html","id":null,"dir":"Reference","previous_headings":"","what":"helper function - given indicator names, look up what category each is — varname2varcategory_ejam","title":"helper function - given indicator names, look up what category each is — varname2varcategory_ejam","text":"helper function - given indicator names, look category ","code":""},{"path":"/reference/varname2varcategory_ejam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"helper function - given indicator names, look up what category each is — varname2varcategory_ejam","text":"","code":"varname2varcategory_ejam(varname, varnameinfo)"},{"path":"/reference/varname2varcategory_ejam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"helper function - given indicator names, look up what category each is — varname2varcategory_ejam","text":"varname vector 1 names like \"pctlowinc\" unique(map_headernames$rname) varnameinfo data.frame info type variable","code":""},{"path":"/reference/varname2varcategory_ejam.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"helper function - given indicator names, look up what category each is — varname2varcategory_ejam","text":"vector size varname","code":""},{"path":"/reference/varname2varcategory_ejam.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"helper function - given indicator names, look up what category each is — varname2varcategory_ejam","text":"tells variable \"Demographic\" \"Environmental\" \"EJ Index\" \"\" dput(unique(map_headernames$varcategory))","code":""},{"path":[]},{"path":"/reference/varname2vartype_ejam.html","id":null,"dir":"Reference","previous_headings":"","what":"helper function - given indicator names, look up what type each is — varname2vartype_ejam","title":"helper function - given indicator names, look up what type each is — varname2vartype_ejam","text":"helper function - given indicator names, look type ","code":""},{"path":"/reference/varname2vartype_ejam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"helper function - given indicator names, look up what type each is — varname2vartype_ejam","text":"","code":"varname2vartype_ejam(varname, varnameinfo)"},{"path":"/reference/varname2vartype_ejam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"helper function - given indicator names, look up what type each is — varname2vartype_ejam","text":"varname vector 1 names varnameinfo data.frame info type variable","code":""},{"path":"/reference/varname2vartype_ejam.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"helper function - given indicator names, look up what type each is — varname2vartype_ejam","text":"vector size varname","code":""},{"path":"/reference/varname2vartype_ejam.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"helper function - given indicator names, look up what type each is — varname2vartype_ejam","text":"types things like raw data count indicator, average, percentile, etc.","code":""},{"path":[]},{"path":"/reference/vartype_cat2color_ejam.html","id":null,"dir":"Reference","previous_headings":"","what":"helper function - assign fill color to shade excel cells by indicator type and category — vartype_cat2color_ejam","title":"helper function - assign fill color to shade excel cells by indicator type and category — vartype_cat2color_ejam","text":"Use color shading make spreadsheet easier use, grouping indicators","code":""},{"path":"/reference/vartype_cat2color_ejam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"helper function - assign fill color to shade excel cells by indicator type and category — vartype_cat2color_ejam","text":"","code":"vartype_cat2color_ejam(vartype = raw, varcategory = \"other\")"},{"path":"/reference/vartype_cat2color_ejam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"helper function - assign fill color to shade excel cells by indicator type and category — vartype_cat2color_ejam","text":"vartype must one found dput(unique(map_headernames$vartype)) like \"usratio\", \"stateratio\", \"usraw\", \"stateraw\", \"uspctile\", \"statepctile\", \"usavg\", \"stateavg\", etc. NA found. varcategory must one \"Demographic\"   \"Environmental\" \"EJ Index\" \"\" dput(unique(map_headernames$varcategory))","code":""},{"path":"/reference/vartype_cat2color_ejam.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"helper function - assign fill color to shade excel cells by indicator type and category — vartype_cat2color_ejam","text":"vector colors like c('lightblue', 'gray') matching length vartype","code":""},{"path":[]},{"path":"/reference/var_is_numeric_ish.html","id":null,"dir":"Reference","previous_headings":"","what":"see which columns seem numeric and could be rounded, e.g. - DRAFT NOT FULLY TESTED — var_is_numeric_ish","title":"see which columns seem numeric and could be rounded, e.g. - DRAFT NOT FULLY TESTED — var_is_numeric_ish","text":"see columns seem numeric rounded, e.g. - DRAFT FULLY TESTED","code":""},{"path":"/reference/var_is_numeric_ish.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"see which columns seem numeric and could be rounded, e.g. - DRAFT NOT FULLY TESTED — var_is_numeric_ish","text":"","code":"var_is_numeric_ish(   x,   only.if.already.numeric = FALSE,   strip.characters.before.coerce = FALSE )"},{"path":"/reference/var_is_numeric_ish.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"see which columns seem numeric and could be rounded, e.g. - DRAFT NOT FULLY TESTED — var_is_numeric_ish","text":"x data.table, data.frame, vector ..already.numeric logical, TRUE, reports TRUE column (element)  .numeric() TRUE one strip.characters..coerce logical, TRUE, tries remove spaces percentage signs trying coerce numeric","code":""},{"path":"/reference/var_is_numeric_ish.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"see which columns seem numeric and could be rounded, e.g. - DRAFT NOT FULLY TESTED — var_is_numeric_ish","text":"logical vector long NCOL(x) .e., length(x), x table, length(x) vector","code":""},{"path":[]},{"path":"/news/index.html","id":"ejam-221-1312024","dir":"Changelog","previous_headings":"","what":"EJAM 2.2.1 (1/31/2024)","title":"EJAM 2.2.1 (1/31/2024)","text":"Major changes Deployed Posit Connect server web app","code":""},{"path":"/news/index.html","id":"ejam-221-10182023","dir":"Changelog","previous_headings":"","what":"EJAM 2.2.1 (10/18/2023)","title":"EJAM 2.2.1 (10/18/2023)","text":"Major changes","code":""},{"path":"/news/index.html","id":"ejam-220-8032023","dir":"Changelog","previous_headings":"","what":"EJAM 2.2.0 (8/03/2023)","title":"EJAM 2.2.0 (8/03/2023)","text":"Updated match EJScreen version 2.2","code":""},{"path":"/news/index.html","id":"ejam-211-9192022","dir":"Changelog","previous_headings":"","what":"EJAM 2.1.1 (9/19/2022)","title":"EJAM 2.1.1 (9/19/2022)","text":"First version USEPA github","code":""}]
